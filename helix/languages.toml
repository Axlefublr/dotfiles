[language-server.lua-language-server.config.Lua]
codelens.enable = true
completion.enable = true
completion.callSnippet = 'Replace'
completion.keywordSnippet = 'Disable'
completion.postfix = '@'
completion.showParams = true
completion.workspaceWord = false
completion.showWord = 'Enable'
diagnostics.disable = [
  'lowercase-global',
  'redefined-local',
  'duplicate-set-field',
]
diagnostics.workspaceDelay = 0
format.enable = false
hint.enable = true
hint.arrayIndex = 'Disable'
hint.await = true
hint.paramName = 'Disable'
hint.paramType = true
hint.semicolon = 'Disable'
hint.setType = true
hover.enable = true
hover.expandAlias = true
hover.viewNumber = true
hover.viewString = true
hover.enumsLimit = 9999
hover.previewFields = 9999
semantic.enable = false # TODO: enable this once helix supports them
semantic.keyword = false
semantic.variable = true
type.weakNilCheck = false
workspace.checkThirdParty = false

[language-server.rust-analyzer.config]
checkOnSave.command = 'clippy'
cargo.extraEnv.CARGO_PROFILE_RUST_ANALYZER_INHERITS = 'dev'
cargo.extraArgs = ['--profile', 'rust-analyzer']
cargo.features = 'all'
rustfmt.extraArgs = ['+nightly']
assist.expressionFillDefault = 'default'
assist.importEnforceGranularity = true
assist.importPrefix = 'crate'
inlayHints.bindingModeHints.enable = true
inlayHints.closingBraceHints.minLines = 11
inlayHints.closureCaptureHints.enable = true
inlayHints.closureReturnTypeHints.enable = 'with_block'
inlayHints.closureStyle = 'rust_analyzer'
inlayHints.discriminantHints.enable = 'fieldless'
inlayHints.parameterHints.enable = true
inlayHints.rangeExclusiveHints.enable = true
inlayHints.renderColons = false
inlayHints.expressionAdjustmentHints.enable = 'reborrow'
inlayHints.expressionAdjustmentHints.mode = 'prefer_postfix'
inlayHints.lifetimeElisionHints.enable = 'skip_trivial'
inlayHints.lifetimeElisionHints.useParameterNames = true
lens.run.enable = false
completion.fullFunctionSignatures.enable = true
procMacro.enable = true
typing.autoClosingAngleBrackets.enable = true
semanticHighlighting.operator.specialization.enable = true
semanticHighlighting.punctuation.separate.macro.bang = true
semanticHighlighting.punctuation.enable = true
# workspace.symbol.search.kind = 'onlyTypes'
signatureInfo.documentation.enable = true

[[language]]
name = 'rust'

[language.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
'`' = '`'
'<' = '>'

[[language]]
name = 'toml'
auto-format = true

[[language]]
name = 'lua'
indent = { tab-width = 3, unit = '\t' }
formatter = { command = 'stylua', args = ['-'] }
