[language-server.lua-language-server.config.Lua]
codelens.enable = true
completion.enable = true
completion.callSnippet = 'Replace'
completion.keywordSnippet = 'Disable'
completion.postfix = '@'
completion.showParams = true
completion.workspaceWord = false
completion.showWord = 'Enable'
diagnostics.disable = [
  'lowercase-global',
  'redefined-local',
  'duplicate-set-field',
]
diagnostics.workspaceDelay = 0
format.enable = false
hint.enable = true
hint.arrayIndex = 'Disable'
hint.await = true
hint.paramName = 'Disable'
hint.paramType = true
hint.semicolon = 'Disable'
hint.setType = true
hover.enable = true
hover.expandAlias = true
hover.viewNumber = true
hover.viewString = true
hover.enumsLimit = 9999
hover.previewFields = 9999
semantic.enable = false # TODO: enable this once helix supports them
semantic.keyword = false
semantic.variable = true
type.weakNilCheck = false
workspace.checkThirdParty = false

[language-server.rust-analyzer.config]
checkOnSave.command = 'clippy'
cargo.extraEnv.CARGO_PROFILE_RUST_ANALYZER_INHERITS = 'dev'
cargo.extraArgs = ['--profile', 'rust-analyzer']
cargo.features = 'all'
rustfmt.extraArgs = ['+nightly']
assist.expressionFillDefault = 'default'
assist.importEnforceGranularity = true
assist.importPrefix = 'crate'
inlayHints.bindingModeHints.enable = true
inlayHints.closingBraceHints.minLines = 11
inlayHints.closureCaptureHints.enable = true
inlayHints.closureReturnTypeHints.enable = 'with_block'
inlayHints.closureStyle = 'rust_analyzer'
inlayHints.discriminantHints.enable = 'fieldless'
inlayHints.parameterHints.enable = true
inlayHints.rangeExclusiveHints.enable = true
inlayHints.renderColons = false
inlayHints.expressionAdjustmentHints.enable = 'reborrow'
inlayHints.expressionAdjustmentHints.mode = 'prefer_postfix'
inlayHints.lifetimeElisionHints.enable = 'skip_trivial'
inlayHints.lifetimeElisionHints.useParameterNames = true
lens.run.enable = false
completion.fullFunctionSignatures.enable = true
procMacro.enable = true
typing.autoClosingAngleBrackets.enable = true
semanticHighlighting.operator.specialization.enable = true
semanticHighlighting.punctuation.separate.macro.bang = true
semanticHighlighting.punctuation.enable = true
# workspace.symbol.search.kind = 'onlyTypes'
signatureInfo.documentation.enable = true

[language-server.ruff]
command = 'ruff'
args = ['server']

# [language-server.ruff.config]

[language-server.ruff.config.lint]
select = [
  # pycodestyle
  'E',
  # Pyflakes
  'F',
  # pyupgrade
  'UP',
  # flake8-bugbear
  'B',
  # flake8-simplify
  'SIM',
  # isort
  'I',
  # make sure noqa is suppressing what it is saying it's suppressing
  'RUF100',

  #-----------------------------------------------------------------------------------------------------------
  #                                 not recommended when using ruff formatter
  #                                  even though I would use these otherwise
  #-----------------------------------------------------------------------------------------------------------

  # point out when a string has avoidable escaped quotes inside of it, rather than just using the other type of quote
  # 'Q003',
  # ensure there are trailing commas, to make diffs nicer
  # 'COM812',
  # when concatenating multiple strings on multiple lines, () then and then use implicit string concatenation, instead of backslashes
  # 'ISC002',
]

ignore = [
  # tab indentation
  'W191',
  # indentation with a non-multiple of 4 spaces
  'E111',
  # apparently the same thing
  'E114',
  # docstrings that are indented with tabs
  'D206',
  # triple single quotes, rather than double quotes
  'D300',
  # single quoted string
  'Q000',
  # singe quoted multiline string
  'Q001',
  # inconsistent quotes used for a docstring
  'Q002',
  # trailing commas where they aren't needed
  'COM819',
  # implicit string concatenation
  'ISC001',
]

[[language]]
name = 'rust'

[language.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
'`' = '`'
'<' = '>'

[[language]]
name = 'toml'
auto-format = true

[[language]]
name = 'lua'
indent = { tab-width = 3, unit = '\t' }
formatter = { command = 'stylua', args = ['-'] }

[[language]]
name = 'python'
language-servers = ['ruff']
auto-format = true
