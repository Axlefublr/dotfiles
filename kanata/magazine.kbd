(deftemplate magazine-prepare (action)
	(multi (cmd $fsh (concat "echo " $action " >/tmp/cami-magazine-action")) (layer-switch magazine-which))
)

(deftemplate magazine-execute (name)
	(multi (layer-switch default) (cmd $fsh (concat "magazine_resolve " $name)))
)

(deflayermap (magazine)
	c (t! magazine-prepare get)
	e (t! magazine-prepare novel)
	t (t! magazine-prepare truncate)
	d (t! magazine-prepare edit)
	q (t! magazine-prepare commit)
	a (t! magazine-prepare append)
	v (t! magazine-prepare appclip)
	r (t! magazine-prepare filter)
	f (t! magazine-prepare copy)
	s (t! magazine-prepare set)
	w (t! magazine-prepare write)
)
;; set

(deflayermap (magazine-which)
	esc (layer-switch default)
	s (tap-hold-release $tt $ht (t! magazine-execute s) (layer-while-held magazine-which-alt))
	d (tap-hold-release $tt $ht (t! magazine-execute d) (layer-while-held magazine-which-shift))
	f (tap-hold-release $tt $ht (t! magazine-execute f) (layer-while-held magazine-which-ctrl))
	j (tap-hold-release $tt $ht (t! magazine-execute j) (layer-while-held magazine-which-ctrl))
	k (tap-hold-release $tt $ht (t! magazine-execute k) (layer-while-held magazine-which-shift))
	l (tap-hold-release $tt $ht (t! magazine-execute l) (layer-while-held magazine-which-alt))
	; (tap-hold-release $tt $ht (t! magazine-execute semicolon) (layer-while-held magazine-which-number))

	q (t! magazine-execute q)
	w (t! magazine-execute w)
	e (t! magazine-execute e)
	r (t! magazine-execute r)
	t (t! magazine-execute t)
	y (t! magazine-execute y)
	u (t! magazine-execute u)
	i (t! magazine-execute i)
	o (t! magazine-execute o)
	p (t! magazine-execute p)
	[ (t! magazine-execute leftbrace)
	] (t! magazine-execute rightbrace)
	a (t! magazine-execute a)
	g (t! magazine-execute g)
	h (t! magazine-execute h)
	' (t! magazine-execute apostrophe)
	z (t! magazine-execute z)
	x (t! magazine-execute x)
	c (t! magazine-execute c)
	v (t! magazine-execute v)
	b (t! magazine-execute b)
	n (t! magazine-execute n)
	m (t! magazine-execute m)
	, (t! magazine-execute comma)
	. (t! magazine-execute period)
	/ (t! magazine-execute slash)
)

(deflayermap (magazine-which-shift)
	esc (layer-switch default)
	q (t! magazine-execute Q)
	w (t! magazine-execute W)
	e (t! magazine-execute E)
	r (t! magazine-execute R)
	t (t! magazine-execute T)
	y (t! magazine-execute Y)
	u (t! magazine-execute U)
	i (t! magazine-execute I)
	o (t! magazine-execute O)
	p (t! magazine-execute P)
	[ (t! magazine-execute leftcurl)
	] (t! magazine-execute rightcurl)
	a (t! magazine-execute A)
	s (t! magazine-execute S)
	d (t! magazine-execute D)
	f (t! magazine-execute F)
	g (t! magazine-execute G)
	h (t! magazine-execute H)
	j (t! magazine-execute J)
	k (t! magazine-execute K)
	l (t! magazine-execute L)
	; (t! magazine-execute colon)
	' (t! magazine-execute doublequote)
	z (t! magazine-execute Z)
	x (t! magazine-execute X)
	c (t! magazine-execute C)
	v (t! magazine-execute V)
	b (t! magazine-execute B)
	n (t! magazine-execute N)
	m (t! magazine-execute M)
	, (t! magazine-execute leftpointy)
	. (t! magazine-execute rightpointy)
	/ (t! magazine-execute question)
)

(deflayermap (magazine-which-ctrl)
	esc (layer-switch default)
	q (t! magazine-execute c-q)
	w (t! magazine-execute c-w)
	e (t! magazine-execute c-e)
	r (t! magazine-execute c-r)
	t (t! magazine-execute c-t)
	y (t! magazine-execute c-y)
	u (t! magazine-execute c-u)
	i (t! magazine-execute c-i)
	o (t! magazine-execute c-o)
	p (t! magazine-execute c-p)
	[ (t! magazine-execute c-leftbrace)
	] (t! magazine-execute c-rightbrace)
	a (t! magazine-execute c-a)
	s (t! magazine-execute c-s)
	d (t! magazine-execute c-d)
	f (t! magazine-execute c-f)
	g (t! magazine-execute c-g)
	h (t! magazine-execute c-h)
	j (t! magazine-execute c-j)
	k (t! magazine-execute c-k)
	l (t! magazine-execute c-l)
	; (t! magazine-execute c-semicolon)
	' (t! magazine-execute c-apostrophe)
	z (t! magazine-execute c-z)
	x (t! magazine-execute c-x)
	c (t! magazine-execute c-c)
	v (t! magazine-execute c-v)
	b (t! magazine-execute c-b)
	n (t! magazine-execute c-n)
	m (t! magazine-execute c-m)
	, (t! magazine-execute c-comma)
	. (t! magazine-execute c-dot)
	/ (t! magazine-execute c-slash)
)

(deflayermap (magazine-which-alt)
	esc (layer-switch default)
	q (t! magazine-execute a-q)
	w (t! magazine-execute a-w)
	e (t! magazine-execute a-e)
	r (t! magazine-execute a-r)
	t (t! magazine-execute a-t)
	y (t! magazine-execute a-y)
	u (t! magazine-execute a-u)
	i (t! magazine-execute a-i)
	o (t! magazine-execute a-o)
	p (t! magazine-execute a-p)
	[ (t! magazine-execute a-leftbrace)
	] (t! magazine-execute a-rightbrace)
	a (t! magazine-execute a-a)
	s (t! magazine-execute a-s)
	d (t! magazine-execute a-d)
	f (t! magazine-execute a-f)
	g (t! magazine-execute a-g)
	h (t! magazine-execute a-h)
	j (t! magazine-execute a-j)
	k (t! magazine-execute a-k)
	l (t! magazine-execute a-l)
	; (t! magazine-execute a-semicolon)
	' (t! magazine-execute a-apostrophe)
	z (t! magazine-execute a-z)
	x (t! magazine-execute a-x)
	c (t! magazine-execute a-c)
	v (t! magazine-execute a-v)
	b (t! magazine-execute a-b)
	n (t! magazine-execute a-n)
	m (t! magazine-execute a-m)
	, (t! magazine-execute a-comma)
	. (t! magazine-execute a-dot)
	/ (t! magazine-execute a-slash)
)

(deflayermap (magazine-which-number)
	esc (layer-switch default)
	f (t! magazine-execute 1)
	d (t! magazine-execute 2)
	s (t! magazine-execute 3)
	r (t! magazine-execute 4)
	e (t! magazine-execute 5)
	w (t! magazine-execute 6)
	v (t! magazine-execute 7)
	c (t! magazine-execute 8)
	x (t! magazine-execute 9)
	a (t! magazine-execute 0)
)
