input {
    keyboard {
        repeat-delay 130
        repeat-rate 50
        xkb {
            layout "us,ru"
            // options "grp:win_space_toggle"
            // You can set rules, model, layout, variant and options.
            // For more information, see xkeyboard-config(7).
            // options "grp:win_space_toggle,compose:ralt,ctrl:nocaps"
        }
    }

    mouse {
        // off
        // natural-scroll
        accel-speed 0.8
        accel-profile "flat"
        // scroll-method "no-scroll"
    }

    trackpoint {
        // off
        // natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "on-button-down"
        // scroll-button 273
        // middle-emulation
    }

    // Uncomment this to make the mouse warp to the center of newly focused windows.
    // warp-mouse-to-focus

    // Focus windows and outputs automatically when moving the mouse into them.
    // Setting max-scroll-amount="0%" makes it work only on windows already fully on screen.
    // focus-follows-mouse max-scroll-amount="0%"
    // workspace-auto-back-and-forth
}

// You can configure outputs by their name, which you can find
// by running `niri msg outputs` while inside a niri instance.
// The built-in laptop monitor is usually called "eDP-1".
// Find more information on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Outputs
// Remember to uncomment the node by removing "/-"!
output "HDMI-A-1" {
    // Uncomment this line to disable this output.
    // off

    // Resolution and, optionally, refresh rate of the output.
    // The format is "<width>x<height>" or "<width>x<height>@<refresh rate>".
    // If the refresh rate is omitted, niri will pick the highest refresh rate
    // for the resolution.
    // If the mode is omitted altogether or is invalid, niri will pick one automatically.
    // Run `niri msg outputs` while inside a niri instance to list all outputs and their modes.
    mode "1920x1080@100.003998"

    // You can use integer or fractional scale, for example use 1.5 for 150% scale.
    scale 1.0

    // Transform allows to rotate the output counter-clockwise, valid values are:
    // normal, 90, 180, 270, flipped, flipped-90, flipped-180 and flipped-270.
    transform "normal"

    variable-refresh-rate

    // Position of the output in the global coordinate space.
    // This affects directional monitor actions like "focus-monitor-left", and cursor movement.
    // The cursor can only move between directly adjacent outputs.
    // Output scale and rotation has to be taken into account for positioning:
    // outputs are sized in logical, or scaled, pixels.
    // For example, a 3840×2160 output with scale 2.0 will have a logical size of 1920×1080,
    // so to put another output directly adjacent to it on the right, set its x to 1920.
    // If the position is unset or results in an overlap, the output is instead placed
    // automatically.
    // position x=1280 y=0
}

// Settings that influence how windows are positioned and sized.
// Find more information on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Layout
layout {
    // Set gaps around windows in logical pixels.
    gaps 20

    // When to center a column when changing focus, options are:
    // - "never", default behavior, focusing an off-screen column will keep at the left
    //   or right edge of the screen.
    // - "always", the focused column will always be centered.
    // - "on-overflow", focusing a column will center it if it doesnjt fit
    //   together with the previously focused column.
    center-focused-column "on-overflow"

    always-center-single-column
    empty-workspace-above-first

    // You can customize the widths that "switch-preset-column-width" (Mod+R) toggles between.
    preset-column-widths {
        // Proportion sets the width as a fraction of the output width, taking gaps into account.
        // For example, you can perfectly fit four windows sized "proportion 0.25" on an output.
        // The default preset widths are 1/3, 1/2 and 2/3 of the output.
        proportion 0.33333
        proportion 0.5
        proportion 0.66667

        // Fixed sets the width in logical pixels exactly.
        // fixed 1920
    }

    // You can also customize the heights that "switch-preset-window-height" (Mod+Shift+R) toggles between.
    preset-window-heights {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
    }

    // You can change the default width of the new windows.
    default-column-width { proportion 1.0; }
    // If you leave the brackets empty, the windows themselves will decide their initial width.

    // By default focus ring and border are rendered as a solid background rectangle
    // behind windows. That is, they will show up through semitransparent windows.
    // This is because windows using client-side decorations can have an arbitrary shape.
    //
    // If you donjt like that, you should uncomment `prefer-no-csd` below.
    // Niri will draw focus ring and border *around* windows that agree to omit their
    // client-side decorations.
    //
    // Alternatively, you can override it with a window rule called
    // `draw-border-with-background`.

    background-color "transparent"

    focus-ring {
        width 2
        active-gradient from="#ffd75f" to="#ffafd7"
        inactive-color "#00000000"
    }

    insert-hint {
        color "#5f472dAA"
    }

    shadow {
        on
    }

    default-column-display "tabbed"

    tab-indicator {
        hide-when-single-tab
        length total-proportion=1.002
        place-within-column
        gap 0
        width 4
        position "top"
        // corner-radius 99
        inactive-color "#00000000"
        active-color "#af87ff"
        // active-gradient from="#af87ff" to="#ff9f1a"
    }

    struts {
        left 20
        right 20
    }
}

binds {
    XF86AudioLowerVolume allow-when-locked=true { spawn "fish" "-c" "set_volume 0.02-"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "fish" "-c" "toggle_mic_mute"; }
    XF86AudioMute        allow-when-locked=true { spawn "fish" "-c" "toggle_mute"; }
    XF86AudioRaiseVolume allow-when-locked=true { spawn "fish" "-c" "set_volume 0.02+"; }
    XF86AudioPlay        allow-when-locked=true { spawn "fish" "-c" "toggle_media"; }
    XF86AudioPause       allow-when-locked=true { spawn "fish" "-c" "toggle_media"; }
    XF86AudioPrev        allow-when-locked=true { spawn "fish" "-c" "media_prev"; }
    XF86AudioNext        allow-when-locked=true { spawn "fish" "-c" "media_next"; }

    Mod+Ctrl+D { spawn "foot"; }
    Mod+D { spawn "footclient"; }
    Mod+E { spawn "footclient" "-T" "floating"; }

    Mod+R { fullscreen-window; }
    Mod+Ctrl+R { toggle-windowed-fullscreen; }
    Mod+I { close-window; }
    Mod+Ctrl+I { spawn "close-windows-in-column.nu"; }

    Mod+O { spawn "fish" "-c" "niri_toggle_tab_correctly"; }
    Mod+Semicolon { "center-visible-columns"; }
    Mod+F { toggle-window-floating; }
    Mod+S { switch-focus-between-floating-and-tiling; }

    Mod+M { consume-or-expel-window-left; }
    Mod+Slash { consume-or-expel-window-right; }

    Mod+H { focus-column-left-or-last; }
    Mod+L { focus-column-right-or-first; }
    Mod+J { focus-workspace-down; }
    Mod+K { focus-workspace-up; }

    Mod+Left { move-column-left; }
    Mod+Right { move-column-right; }
    Mod+Down { move-column-to-workspace-down; }
    Mod+Up { move-column-to-workspace-up; }
    Mod+Ctrl+Down { move-workspace-down; }
    Mod+Ctrl+Up { move-workspace-up; }

    Mod+Comma { focus-window-up-or-bottom; }
    Mod+Period { focus-window-down-or-top; }
    Mod+Page_Up { move-window-up; }
    Mod+Page_Down { move-window-down; }

    Mod+Ctrl+J { set-window-height "-10%"; }
    Mod+Ctrl+K { set-window-height "+10%"; }
    Mod+Ctrl+H { set-column-width "-10%"; }
    Mod+Ctrl+L { set-column-width "+10%"; }

    Mod+Ctrl+O { maximize-column; }
    Mod+Ctrl+M { reset-window-height; }
}

// Add lines like this to spawn processes at startup.
// Note that running niri as a session supports xdg-desktop-autostart,
// which may be more convenient to use.
// See the binds section below for more spawn examples.

spawn-at-startup "~/fes/dot/eli/setup/login.fish"

// Uncomment this line to ask the clients to omit their client-side decorations if possible.
// If the client will specifically ask for CSD, the request will be honored.
// Additionally, clients will be informed that they are tiled, removing some client-side rounded corners.
// This option will also fix border/focus ring drawing behind some semitransparent windows.
// After enabling or disabling this, you need to restart the apps for this to take effect.
prefer-no-csd

// You can change the path where screenshots are saved.
// A ~ at the front will be expanded to the home directory.
// The path is formatted with strftime(3) to give you the screenshot date and time.
screenshot-path "~/iwm/sco/%Y.%m.%d-%H:%M:%S.png"

// You can also set this to null to disable saving screenshots to disk.
// screenshot-path null

animations {
    workspace-switch {
        spring damping-ratio=1.15 stiffness=850 epsilon=0.0001
    }

    horizontal-view-movement {
        spring damping-ratio=1.15 stiffness=850 epsilon=0.0001
    }

    window-movement {
        spring damping-ratio=1.15 stiffness=850 epsilon=0.0001
    }

    window-resize {
        spring damping-ratio=1.15 stiffness=850 epsilon=0.0001
    }

    window-open {
        duration-ms 150
        curve "ease-out-expo"
    }

    window-close {
        duration-ms 150
        curve "ease-out-quad"
    }

    screenshot-ui-open {
        duration-ms 250
        curve "ease-out-quad"
    }
}

cursor {
    xcursor-theme "Lighted-Pixel-Butter"
    hide-when-typing
}

clipboard {
    disable-primary
}

hotkey-overlay {
    hide-not-bound
    skip-at-startup
}

gestures {
    hot-corners {
        off
    }
}

//-----------------catchalls------------------
window-rule {
    draw-border-with-background false
    // geometry-corner-radius 16
    clip-to-geometry true
    opacity 0.98
}
window-rule {
    match is-floating=true
    geometry-corner-radius 16
}

//------------------stateful------------------
window-rule {
    match app-id="anki"
    match app-id="python" title="^Import$"
    match app-id="floorp|firefox|zen$" title="^File Upload$"
    match app-id="floorp|firefox|zen$" title="^Open File$"
    match app-id="floorp|firefox|zen$" title="^Save Image|Video|As|Audio$"
    match app-id="floorp|firefox|zen$" title="^Enter name of file to save to…$"
    match app-id="floorp|firefox|zen$" title="^Opening "
    open-floating false
}
window-rule {
    match app-id="firefox$" title="^Picture-in-Picture$"
    match app-id="swayfloat"
    match app-id="^foot" title="^floating$"
    open-floating true
}
window-rule {
    match app-id="Minecraft" title="^Minecraft"
    open-fullscreen true
}
window-rule {
    match app-id="waybar"
    match app-id="^kitty|foot" title="nofocus"
    match app-id="^kitty|foot" title="^screen-record$"
    open-focused false
}
/-window-rule {
    baba-is-float true
}
window-rule {
    match app-id="^kitty$"
    match app-id="^swayimg$"
    match app-id="^foot"
    opacity 1.0
}

//-------------------column-------------------
window-rule {
    match app-id="^foot" title="half"
    default-column-width { proportion 0.5; }
}
window-rule {
    match app-id="^foot" title="third"
    default-column-width { proportion 0.33333; }
}
window-rule {
    match app-id="anki"
    default-column-width {}
}

//----------------app-specific----------------
window-rule {
    match app-id="org.kde.kruler"
    geometry-corner-radius 0
    clip-to-geometry false
    open-floating true
}
window-rule {
    match app-id="wlclock"
    default-column-width { fixed 1005; }
}
window-rule {
    match app-id="^foot" title="^floating$"
    default-column-width { proportion 0.45; }
    default-window-height { proportion 0.25; }
}

layer-rule {
    match namespace="^swww-daemon$"
    place-within-backdrop true
}
