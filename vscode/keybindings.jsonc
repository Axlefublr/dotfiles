// Place your key bindings in this file to override the defaultsauto[]
[
	{
		"key": "ctrl+f8",
		"command": "-ahk++.runSelection",
		"when": "editorLangId == 'ahk'"
	},
	{
		"key": "ctrl+f1",
		"command": "-ahk++.openHelp"
	},
	{
		"key": "ctrl+alt+up",
		"command": "-editor.action.insertCursorAbove",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+alt+down",
		"command": "-editor.action.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+i",
		"command": "-editor.action.insertCursorAtEndOfEachLineSelected",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+k ctrl+c",
		"command": "-editor.action.addCommentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+a",
		"command": "-editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+k",
		"command": "-editor.action.deleteLines",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "alt+home",
		"command": "deleteAllLeft"
	},
	{
		"key": "alt+end",
		"command": "deleteAllRight"
	},
	{
		"key": "ctrl+insert",
		"command": "-editor.action.clipboardCopyAction"
	},
	{
		"key": "ctrl+shift+d",
		"command": "-l13Duplicate.action.duplicate.before",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+alt+d",
		"command": "-l13Duplicate.action.duplicate.after",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "f9",
		"command": "-ahk++.debug",
		"when": "editorLangId == 'ahk'"
	},
	{
		"key": "ctrl+f9",
		"command": "-ahk++.run",
		"when": "editorLangId == 'ahk'"
	},
	{
		"key": "a",
		"command": "-notebook.cell.insertCodeCellAboveAndFocusContainer",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "ctrl+shift+f5",
		"command": "-workbench.action.debug.restart",
		"when": "inDebugMode"
	},
	{
		"key": "f10",
		"command": "-workbench.action.debug.stepOver",
		"when": "debugState == 'stopped'"
	},
	{
		"key": "f11",
		"command": "-workbench.action.debug.stepInto",
		"when": "debugState != 'inactive'"
	},
	{
		"key": "shift+f11",
		"command": "-workbench.action.debug.stepOut",
		"when": "debugState == 'stopped'"
	},
	{
		"key": "f9",
		"command": "-editor.debug.action.toggleBreakpoint",
		"when": "debuggersAvailable && editorTextFocus"
	},
	{
		"key": "f6",
		"command": "-workbench.action.debug.pause",
		"when": "debugState == 'running'"
	},
	{
		"key": "shift+f9",
		"command": "-settings.action.showContextMenu",
		"when": "inSettingsEditor"
	},
	{
		"key": "ctrl+shift+y",
		"command": "-workbench.debug.action.toggleRepl",
		"when": "workbench.panel.repl.view.active"
	},
	{
		"key": "ctrl+shift+u",
		"command": "-workbench.action.output.toggleOutput",
		"when": "workbench.panel.output.active"
	},
	{
		"key": "ctrl+shift+m",
		"command": "-workbench.actions.view.problems",
		"when": "workbench.panel.markers.view.active"
	},
	{
		"key": "ctrl+`",
		"command": "-workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},
	{
		"key": "ctrl+shift+e",
		"command": "-workbench.view.explorer",
		"when": "viewContainer.workbench.view.explorer.enabled"
	},
	{
		"key": "ctrl+shift+f",
		"command": "-workbench.view.search",
		"when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
	},
	{
		"key": "ctrl+shift+g",
		"command": "-workbench.view.scm",
		"when": "workbench.scm.active"
	},
	{
		"key": "ctrl+shift+d",
		"command": "-workbench.view.debug",
		"when": "viewContainer.workbench.view.debug.enabled"
	},
	{
		"key": "ctrl+5",
		"command": "workbench.view.extensions",
		"when": "viewContainer.workbench.view.extensions.enabled"
	},
	{
		"key": "ctrl+shift+x",
		"command": "-workbench.view.extensions",
		"when": "viewContainer.workbench.view.extensions.enabled"
	},
	{
		"key": "ctrl+shift+f",
		"command": "-workbench.action.findInFiles"
	},
	{
		"key": "ctrl+shift+h",
		"command": "-workbench.action.replaceInFiles"
	},
	{
		"key": "ctrl+f4",
		"command": "-workbench.action.terminal.killEditor",
		"when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
	},
	{
		"key": "ctrl+w",
		"command": "-workbench.action.terminal.killEditor",
		"when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
	},
	{
		"key": "shift+insert",
		"command": "-editor.action.clipboardPasteAction"
	},
	{
		"key": "ctrl+k f",
		"command": "-workbench.action.closeFolder",
		"when": "emptyWorkspaceSupport && workbenchState != 'empty'"
	},
	{
		"key": "shift+f9",
		"command": "-editor.debug.action.toggleInlineBreakpoint",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+f5",
		"command": "-workbench.action.debug.run",
		"when": "debuggersAvailable && debugState != 'initializing'"
	},
	{
		"key": "shift+f8",
		"command": "-editor.action.marker.prevInFiles",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k ctrl+p",
		"command": "-workbench.action.showAllEditors"
	},
	{
		"key": "ctrl+k ctrl+s",
		"command": "-workbench.action.openGlobalKeybindings"
	},
	{
		"key": "shift+f5",
		"command": "-workbench.action.debug.disconnect",
		"when": "focusedSessionIsAttach && inDebugMode"
	},
	{
		"key": "shift+f5",
		"command": "-workbench.action.debug.stop",
		"when": "inDebugMode && !focusedSessionIsAttach"
	},
	{
		"key": "ctrl+shift+l",
		"command": "-better-line-select.upward",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+k ctrl+shift+c",
		"command": "-copyRelativeFilePath",
		"when": "!editorFocus"
	},
	{
		"key": "enter",
		"command": "-editor.action.replaceOne",
		"when": "editorFocus && findWidgetVisible && replaceInputFocussed"
	},
	{
		"key": "enter",
		"command": "-editor.action.nextMatchFindAction",
		"when": "editorFocus && findInputFocussed"
	},
	{
		"key": "shift+enter",
		"command": "-editor.action.previousMatchFindAction",
		"when": "editorFocus && findInputFocussed"
	},
	{
		"key": "shift+enter",
		"command": "-workbench.action.terminal.findNext",
		"when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
	},
	{
		"key": "shift+enter",
		"command": "-editor.action.extensioneditor.findPrevious",
		"when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
	},
	{
		"key": "shift+enter",
		"command": "-editor.action.webvieweditor.findPrevious",
		"when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
	},
	{
		"key": "enter",
		"command": "-workbench.action.terminal.findPrevious",
		"when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
	},
	{
		"key": "enter",
		"command": "-editor.action.extensioneditor.findNext",
		"when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
	},
	{
		"key": "enter",
		"command": "-editor.action.webvieweditor.findNext",
		"when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
	},
	{
		"key": "alt+k",
		"command": "-keybindings.editor.recordSearchKeys",
		"when": "inKeybindings && inKeybindingsSearch"
	},
	{
		"key": "ctrl+\\",
		"command": "-workbench.action.splitEditor"
	},
	{
		"key": "ctrl+shift+f9",
		"command": "-ahk++.compile",
		"when": "editorLangId == 'ahk'"
	},
	{
		"key": "f10",
		"command": "-extension.node-debug.startWithStopOnEntry",
		"when": "!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node'"
	},
	{
		"key": "f11",
		"command": "-extension.node-debug.startWithStopOnEntry",
		"when": "!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node'"
	},
	{
		"key": "f5",
		"command": "-workbench.action.debug.start",
		"when": "debuggersAvailable && debugState == 'inactive'"
	},
	{
		"key": "space",
		"command": "editor.action.cancelSelectionAnchor",
		"when": "editorTextFocus && selectionAnchorSet"
	},
	{
		"key": "space",
		"command": "workbench.action.hideInterfaceOverview",
		"when": "interfaceOverviewVisible"
	},
	{
		"key": "escape",
		"command": "workbench.action.hideInterfaceOverview",
		"when": "interfaceOverviewVisible"
	},
	{
		"key": "shift+alt+e",
		"command": "revealFileInOS"
	},
	{
		"key": "shift+alt+r",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},
	{
		"key": "ctrl+t",
		"command": "-workbench.action.showAllSymbols"
	},
	{
		"key": "ctrl+shift+\\",
		"command": "-editor.action.jumpToBracket",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+left",
		"command": "-workbench.action.navigateBack"
	},
	{
		"key": "alt+right",
		"command": "-workbench.action.navigateForward"
	},
	{
		"key": "ctrl+u",
		"command": "-cursorUndo",
		"when": "textInputFocus"
	},
	{
		"key": "alt+pageup",
		"command": "-scrollPageUp",
		"when": "textInputFocus"
	},
	{
		"key": "alt+pagedown",
		"command": "-scrollPageDown",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+z",
		"command": "-undo"
	},
	{
		"key": "ctrl+shift+z",
		"command": "-redo"
	},
	{
		"key": "z",
		"command": "-undo",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "shift+alt+left",
		"command": "-editor.action.smartSelect.shrink",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+right",
		"command": "-editor.action.smartSelect.expand",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+y",
		"command": "-redo"
	},
	{
		"key": "f1",
		"command": "-workbench.action.showCommands"
	},
	{
		"key": "f3",
		"command": "-editor.action.nextMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "f3",
		"command": "-workbench.action.terminal.findNext",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "f4",
		"command": "-references-view.next",
		"when": "reference-list.hasResult && references-view.canNavigate"
	},
	{
		"key": "f4",
		"command": "-search.action.focusNextSearchResult",
		"when": "hasSearchResult || inSearchEditor"
	},
	{
		"key": "f4",
		"command": "-goToNextReference",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},
	{
		"key": "f5",
		"command": "-workbench.action.debug.continue",
		"when": "debugState == 'stopped'"
	},
	{
		"key": "f5",
		"command": "-debug.openView",
		"when": "!debuggersAvailable"
	},
	{
		"key": "f6",
		"command": "-workbench.action.focusNextPart"
	},
	{
		"key": "f7",
		"command": "-editor.action.diffReview.next",
		"when": "isInDiffEditor"
	},
	{
		"key": "f7",
		"command": "-editor.action.wordHighlight.next",
		"when": "editorTextFocus && hasWordHighlights"
	},
	{
		"key": "f8",
		"command": "-editor.action.marker.nextInFiles",
		"when": "editorFocus"
	},
	{
		"key": "shift+f7",
		"command": "-editor.action.diffReview.prev",
		"when": "isInDiffEditor"
	},
	{
		"key": "shift+f7",
		"command": "-editor.action.wordHighlight.prev",
		"when": "editorTextFocus && hasWordHighlights"
	},
	{
		"key": "shift+f6",
		"command": "-workbench.action.focusPreviousPart"
	},
	{
		"key": "shift+f4",
		"command": "-references-view.prev",
		"when": "reference-list.hasResult && references-view.canNavigate"
	},
	{
		"key": "shift+f4",
		"command": "-search.action.focusPreviousSearchResult",
		"when": "hasSearchResult || inSearchEditor"
	},
	{
		"key": "shift+f4",
		"command": "-goToPreviousReference",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},
	{
		"key": "shift+f3",
		"command": "-editor.action.previousMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "shift+f3",
		"command": "-workbench.action.terminal.findPrevious",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+1",
		"command": "-workbench.action.openEditorAtIndex1"
	},
	{
		"key": "alt+2",
		"command": "-workbench.action.openEditorAtIndex2"
	},
	{
		"key": "alt+3",
		"command": "-workbench.action.openEditorAtIndex3"
	},
	{
		"key": "alt+4",
		"command": "-workbench.action.openEditorAtIndex4"
	},
	{
		"key": "alt+5",
		"command": "-workbench.action.openEditorAtIndex5"
	},
	{
		"key": "alt+6",
		"command": "-workbench.action.openEditorAtIndex6"
	},
	{
		"key": "alt+7",
		"command": "-workbench.action.openEditorAtIndex7"
	},
	{
		"key": "alt+8",
		"command": "-workbench.action.openEditorAtIndex8"
	},
	{
		"key": "alt+9",
		"command": "-workbench.action.openEditorAtIndex9"
	},
	{
		"key": "ctrl+1",
		"command": "-workbench.action.focusFirstEditorGroup"
	},
	{
		"key": "ctrl+2",
		"command": "-workbench.action.focusSecondEditorGroup"
	},
	{
		"key": "ctrl+3",
		"command": "-workbench.action.focusThirdEditorGroup"
	},
	{
		"key": "ctrl+4",
		"command": "-workbench.action.focusFourthEditorGroup"
	},
	{
		"key": "f2",
		"command": "-editor.action.rename",
		"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "f2",
		"command": "-debug.renameWatchExpression",
		"when": "watchExpressionsFocused"
	},
	{
		"key": "f2",
		"command": "-debug.setVariable",
		"when": "variablesFocused"
	},
	{
		"key": "ctrl+j ctrl+f6",
		"command": "-remote.tunnel.label",
		"when": "tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
	},
	{
		"key": "f2",
		"command": "-remote.tunnel.label",
		"when": "tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
	},
	{
		"key": "f2",
		"command": "-renameFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "f2",
		"command": "-workbench.action.terminal.renameInstance",
		"when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
	},
	{
		"key": "ctrl+j",
		"command": "-workbench.action.togglePanel"
	},
	{
		"key": "shift+alt+] shift+alt+]",
		"command": "workbench.action.openGlobalKeybindings"
	},
	{
		"key": "shift+delete",
		"command": "-editor.action.clipboardCutAction"
	},
	{
		"key": "shift+delete",
		"command": "-deleteFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "alt+delete",
		"command": "-notebook.cell.clearOutputs",
		"when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
	},
	{
		"key": "+backspace",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+backspace",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "terminalFocus && terminalShellType == 'cmd'"
	},
	{
		"key": "ctrl+shift+.",
		"command": "-breadcrumbs.focusAndSelect",
		"when": "breadcrumbsPossible"
	},
	{
		"key": "ctrl+g",
		"command": "-workbench.action.gotoLine"
	},
	{
		"key": "ctrl+shift+] ctrl+shift+]",
		"command": "workbench.action.openSettings"
	},
	{
		"key": "ctrl+,",
		"command": "-workbench.action.openSettings"
	},
	{
		"key": "alt+o",
		"command": "workbench.action.showCommands",
		"when": "neovim.mode != 'insert'"
	},
	{
		"key": "ctrl+shift+p",
		"command": "-workbench.action.showCommands"
	},
	{
		"key": "ctrl+shift+i",
		"command": "workbench.action.openSnippets"
	},
	{
		"key": "ctrl+shift+o",
		"command": "-workbench.action.gotoSymbol"
	},
	{
		"key": "shift+alt+o",
		"command": "-editor.action.organizeImports",
		"when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
	},
	{
		"key": "ctrl+shift+b",
		"command": "-workbench.action.tasks.build"
	},
	{
		"key": "ctrl+shift+i",
		"command": "-workbench.action.toggleDevTools",
		"when": "isDevelopment"
	},
	{
		"key": "ctrl+shift+]",
		"command": "-notebook.unfold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+shift+]",
		"command": "-editor.unfold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+f2",
		"command": "-editor.action.changeAll",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+f",
		"command": "-editor.action.formatDocument",
		"when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
	},
	{
		"key": "shift+alt+f",
		"command": "-editor.action.formatDocument.none",
		"when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+f",
		"command": "-editor.action.formatSelection",
		"when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+f",
		"command": "-notebook.format",
		"when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "shift+alt+f",
		"command": "-notebook.formatCell",
		"when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+k ctrl+shift+s",
		"command": "-workbench.action.files.saveWithoutFormatting"
	},
	{
		"key": "ctrl+shift+l",
		"command": "-addCursorsAtSearchResults",
		"when": "fileMatchOrMatchFocus && searchViewletVisible"
	},
	{
		"key": "v",
		"command": "-notebook.cell.paste",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "ctrl+v",
		"command": "-editor.action.clipboardPasteAction"
	},
	{
		"key": "shift+f12",
		"command": "-editor.action.goToReferences",
		"when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
	},
	{
		"key": "shift+alt+f12",
		"command": "-references-view.findReferences",
		"when": "editorHasReferenceProvider"
	},
	{
		"key": "f12",
		"command": "-editor.action.revealDefinition",
		"when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
	},
	{
		"key": "ctrl+f5",
		"command": "-debug.openView",
		"when": "!debuggersAvailable"
	},
	{
		"key": "ctrl+alt+]",
		"command": "-jupyter.gotoNextCellInFile",
		"when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
	},
	{
		"key": "ctrl+5",
		"command": "-workbench.action.focusFifthEditorGroup"
	},
	{
		"key": "ctrl+6",
		"command": "-workbench.action.focusSixthEditorGroup"
	},
	{
		"key": "ctrl+7",
		"command": "-workbench.action.focusSeventhEditorGroup"
	},
	{
		"key": "ctrl+8",
		"command": "-workbench.action.focusEighthEditorGroup"
	},
	{
		"key": "ctrl+enter",
		"command": "-editor.action.insertLineAfter",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "-editor.action.insertLineBefore",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+u",
		"command": "-editor.action.removeCommentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+/",
		"command": "-editor.foldAllBlockComments",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "shift+enter",
		"command": "-jupyter.runcurrentcelladvance",
		"when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused"
	},
	{
		"key": "shift+enter",
		"command": "-jupyter.execSelectionInteractive",
		"when": "editorTextFocus && isWorkspaceTrusted && jupyter.ownsSelection && !findInputFocussed && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
	},
	{
		"key": "shift+enter",
		"command": "-notebook.cell.executeAndSelectBelow",
		"when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
	},
	{
		"key": "shift+enter",
		"command": "-notebook.cell.executeAndSelectBelow",
		"when": "notebookCellListFocused && notebookCellType == 'code' || editorTextFocus && inputFocus && notebookEditorFocused"
	},
	{
		"key": "shift+enter",
		"command": "-python.execSelectionInTerminal",
		"when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
	},
	{
		"key": "alt+h",
		"command": "keybindings.editor.searchKeybindings",
		"when": "inKeybindings"
	},
	{
		"key": "ctrl+f",
		"command": "-keybindings.editor.searchKeybindings",
		"when": "inKeybindings"
	},
	{
		"key": "ctrl+k ctrl+e",
		"command": "-keybindings.editor.defineWhenExpression",
		"when": "inKeybindings && keybindingFocus"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "-workbench.action.keybindingsReference"
	},
	{
		"key": "a",
		"command": "keybindings.editor.addKeybinding",
		"when": "inKeybindings && keybindingFocus && !inputFocus"
	},
	{
		"key": "ctrl+k ctrl+a",
		"command": "-keybindings.editor.addKeybinding",
		"when": "inKeybindings && keybindingFocus"
	},
	{
		"key": "alt+p",
		"command": "-keybindings.editor.toggleSortByPrecedence",
		"when": "inKeybindings"
	},
	{
		"key": "enter",
		"command": "-notebook.cell.edit",
		"when": "notebookCellListFocused && notebookEditable && !inputFocus"
	},
	{
		"key": "enter",
		"command": "-repl.action.acceptInput",
		"when": "inDebugRepl && textInputFocus"
	},
	{
		"key": "ctrl+shift+c",
		"command": "-workbench.action.terminal.openNativeConsole",
		"when": "!terminalFocus"
	},
	{
		"key": "shift+enter",
		"command": "-acceptAlternativeSelectedSuggestion",
		"when": "suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "shift+alt+c",
		"command": "-copyFilePath",
		"when": "!editorFocus"
	},
	{
		"key": "ctrl+shift+c",
		"command": "-workbench.action.terminal.copySelection",
		"when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
	},
	{
		"key": "ctrl+shift+l",
		"command": "-selectAllSearchEditorMatches",
		"when": "inSearchEditor"
	},
	{
		"key": "ctrl+shift+l",
		"command": "-editor.action.selectHighlights",
		"when": "editorFocus"
	},
	{
		"key": "shift+alt+c",
		"command": "-search.action.copyPath",
		"when": "fileMatchOrFolderMatchWithResourceFocus"
	},
	{
		"key": "ctrl+alt+[",
		"command": "-jupyter.gotoPrevCellInFile",
		"when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
	},
	{
		"key": "ctrl+shift+r",
		"command": "-rerunSearchEditorSearch",
		"when": "inSearchEditor"
	},
	{
		"key": "ctrl+shift+r",
		"command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
		"when": "inQuickOpen && inRecentFilesPicker"
	},
	{
		"key": "ctrl+k p",
		"command": "-workbench.action.files.copyPathOfActiveFile"
	},
	{
		"key": "ctrl+r",
		"command": "-workbench.action.reloadWindow",
		"when": "isDevelopment"
	},
	{
		"key": "ctrl+r",
		"command": "-workbench.action.openRecent"
	},
	{
		"key": "ctrl+r",
		"command": "-jupyter.refreshDataViewer",
		"when": "isWorkspaceTrusted && jupyter.dataViewerActive"
	},
	{
		"key": "ctrl+r",
		"command": "-python.refreshTensorBoard",
		"when": "python.hasActiveTensorBoardSession"
	},
	{
		"key": "ctrl+r",
		"command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
		"when": "inQuickOpen && inRecentFilesPicker"
	},
	{
		"key": "ctrl+d",
		"command": "-editor.action.addSelectionToNextFindMatch",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+enter",
		"command": "-acceptSelectedSuggestion",
		"when": "suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "shift+down",
		"command": "-cursorColumnSelectDown",
		"when": "editorColumnSelection && textInputFocus"
	},
	{
		"key": "ctrl+shift+backspace",
		"command": "-search.searchEditor.action.deleteFileResults",
		"when": "inSearchEditor"
	},
	{
		"key": "alt+'",
		"command": "editor.action.triggerParameterHints",
		"when": "editorHasSignatureHelpProvider && editorTextFocus && !parameterHintsVisible && !inlineSuggestionVisible"
	},
	{
		"key": "ctrl+shift+space",
		"command": "-editor.action.triggerParameterHints",
		"when": "editorHasSignatureHelpProvider && editorTextFocus"
	},
	{
		"key": "ctrl+shift+[",
		"command": "-notebook.fold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+shift+[",
		"command": "-editor.fold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+shift+r",
		"command": "-editor.action.refactor",
		"when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+v",
		"command": "-notebook.cell.pasteAbove",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "ctrl+shift+v",
		"command": "-workbench.action.terminal.paste",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+; ctrl+p",
		"command": "workbench.action.pinEditor",
		"when": "!activeEditorIsPinned"
	},
	{
		"key": "ctrl+k shift+enter",
		"command": "-workbench.action.pinEditor",
		"when": "!activeEditorIsPinned"
	},
	{
		"key": "ctrl+; ctrl+p",
		"command": "workbench.action.unpinEditor",
		"when": "activeEditorIsPinned"
	},
	{
		"key": "ctrl+k shift+enter",
		"command": "-workbench.action.unpinEditor",
		"when": "activeEditorIsPinned"
	},
	{
		"key": "alt+j",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus && neovim.mode == 'insert'"
	},
	{
		"key": "f10",
		"command": "-jupyter.runByLineNext",
		"when": "jupyter.notebookeditor.runByLineInProgress"
	},
	{
		"key": "f10",
		"command": "-jupyter.runByLine",
		"when": "!jupyter.notebookeditor.debuggingInProgress && !jupyter.notebookeditor.runByLineInProgress && notebookKernelCount > 0"
	},
	{
		"key": "ctrl+up",
		"command": "-selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+w",
		"command": "-workbench.action.closeActiveEditor"
	},
	{
		"key": "ctrl+k ctrl+0",
		"command": "-editor.foldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+j",
		"command": "-editor.unfoldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+space",
		"command": "-editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
	},
	{
		"key": "alt+o",
		"command": "editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible && neovim.mode == 'insert'"
	},
	{
		"key": "alt+j",
		"command": "editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible && neovim.mode == 'insert'"
	},
	{
		"key": "alt+k",
		"command": "editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible && neovim.mode == 'insert'"
	},
	{
		"key": "ctrl+i",
		"command": "-editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
	},
	{
		"key": "alt+'",
		"command": "toggleSuggestionDetails",
		"when": "suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+space",
		"command": "-toggleSuggestionDetails",
		"when": "suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "shift+escape",
		"command": "-hideSuggestWidget",
		"when": "suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "alt+down",
		"command": "-showNextParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "alt+up",
		"command": "-showPrevParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "alt+f5",
		"command": "-workbench.action.editor.nextChange",
		"when": "editorTextFocus && !textCompareEditorActive"
	},
	{
		"key": "shift+alt+f5",
		"command": "-workbench.action.editor.previousChange",
		"when": "editorTextFocus && !textCompareEditorActive"
	},
	{
		"key": "ctrl+i",
		"command": "-toggleSuggestionDetails",
		"when": "suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "alt+l",
		"command": "keybindings.editor.focusKeybindings",
		"when": "inKeybindings"
	},
	{
		"key": "ctrl+down",
		"command": "-keybindings.editor.focusKeybindings",
		"when": "inKeybindings && inKeybindingsSearch"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "editor.action.replaceOne",
		"when": "editorFocus && findWidgetVisible"
	},
	{
		"key": "ctrl+shift+1",
		"command": "-editor.action.replaceOne",
		"when": "editorFocus && findWidgetVisible"
	},
	{
		"key": "enter",
		"command": "search.action.replace",
		"when": "matchFocus && replaceActive && searchViewletVisible"
	},
	{
		"key": "ctrl+shift+1",
		"command": "-search.action.replace",
		"when": "matchFocus && replaceActive && searchViewletVisible"
	},
	{
		"key": "ctrl+k ctrl+o",
		"command": "-workbench.action.files.openFolder",
		"when": "openFolderWorkspaceSupport"
	},
	{
		"key": "alt+w",
		"command": "workbench.action.closeActiveEditor",
		"when": "!terminalFocus"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "-git.revertSelectedRanges",
		"when": "isInDiffEditor"
	},
	{
		"key": "ctrl+o",
		"command": "-workbench.action.files.openFile",
		"when": "true"
	},
	{
		"key": "ctrl+o",
		"command": "-workbench.action.files.openFolderViaWorkspace",
		"when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
	},
	{
		"key": "ctrl+o",
		"command": "-workbench.action.files.openFileFolder",
		"when": "isMacNative && openFolderWorkspaceSupport"
	},
	{
		"key": "ctrl+o",
		"command": "-workbench.action.files.openLocalFile",
		"when": "remoteFileDialogVisible"
	},
	{
		"key": "win+pageup",
		"command": "yo1dog.cursor-align.alignCursors",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+a",
		"command": "-yo1dog.cursor-align.alignCursors",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+down",
		"command": "-smartmulticursor.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+up",
		"command": "-smartmulticursor.insertCursorAbove",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+up",
		"command": "-cursorUpSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+down",
		"command": "-cursorDownSelect",
		"when": "textInputFocus"
	},
	{
		"key": "alt+.",
		"command": "-yo1dog.cursor-trim.rTrimCursor",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+,",
		"command": "-yo1dog.cursor-trim.lTrimCursor",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+m",
		"command": "-editor.action.toggleTabFocusMode"
	},
	{
		"key": "ctrl+n",
		"command": "-workbench.action.files.newUntitledFile"
	},
	{
		"key": "ctrl+s",
		"command": "-workbench.action.files.save"
	},
	{
		"key": "ctrl+p",
		"command": "-workbench.action.quickOpenNavigateNextInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},
	{
		"key": "ctrl+shift+p",
		"command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},
	{
		"key": "ctrl+shift+f",
		"command": "-workbench.action.terminal.searchWorkspace",
		"when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
	},
	{
		"key": "shift+alt+h",
		"command": "-references-view.showCallHierarchy",
		"when": "editorHasCallHierarchyProvider"
	},
	{
		"key": "shift+alt+h",
		"command": "-gitlens.showQuickRepoHistory",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "shift+alt+h",
		"command": "-editor.showCallHierarchy",
		"when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
	},
	{
		"key": "shift+alt+h",
		"command": "-editor.showIncomingCalls",
		"when": "callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'"
	},
	{
		"key": "shift+alt+h",
		"command": "-editor.showOutgoingCalls",
		"when": "callHierarchyVisible && callHierarchyDirection == 'incomingCalls'"
	},
	{
		"key": "shift+alt+h",
		"command": "-editor.showSubtypes",
		"when": "typeHierarchyVisible && typeHierarchyDirection == 'supertypes'"
	},
	{
		"key": "shift+alt+h",
		"command": "-editor.showSupertypes",
		"when": "typeHierarchyVisible && typeHierarchyDirection == 'subtypes'"
	},
	{
		"key": "alt+f9",
		"command": "-editor.action.nextCommentThreadAction",
		"when": "editorFocus"
	},
	{
		"key": "down",
		"command": "-notebook.focusNextEditor",
		"when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
	},
	{
		"key": "ctrl+tab",
		"command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
		"when": "inEditorsPicker && inQuickOpen"
	},
	{
		"key": "ctrl+e",
		"command": "-workbench.action.quickOpenNavigateNextInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},
	{
		"key": "ctrl+q",
		"command": "-workbench.action.quickOpenNavigateNextInViewPicker",
		"when": "inQuickOpen && inViewsPicker"
	},
	{
		"key": "ctrl+shift+tab",
		"command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
		"when": "inEditorsPicker && inQuickOpen"
	},
	{
		"key": "ctrl+shift+e",
		"command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},
	{
		"key": "ctrl+shift+q",
		"command": "-workbench.action.quickOpenNavigatePreviousInViewPicker",
		"when": "inQuickOpen && inViewsPicker"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-editor.debug.action.showDebugHover",
		"when": "editorTextFocus && inDebugMode"
	},
	{
		"key": "ctrl+shift+alt+enter",
		"command": "-jupyter.runAndDebugCell"
	},
	{
		"key": "ctrl+f",
		"command": "-repl.action.filter",
		"when": "inDebugRepl && textInputFocus"
	},
	{
		"key": "ctrl+; ctrl+a",
		"command": "-testing.debugAll"
	},
	{
		"key": "ctrl+; ctrl+e",
		"command": "-testing.debugFailTests"
	},
	{
		"key": "ctrl+; ctrl+c",
		"command": "-testing.debugAtCursor",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+; ctrl+f",
		"command": "-testing.debugCurrentFile",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+enter",
		"command": "-debug.openBreakpointToSide",
		"when": "breakpointsFocused"
	},
	{
		"key": "ctrl+enter",
		"command": "-debug.openBreakpointToSide",
		"when": "breakpointsFocused"
	},
	{
		"key": "ctrl+k ctrl+w",
		"command": "-workbench.action.closeAllEditors"
	},
	{
		"key": "alt+c",
		"command": "-toggleSearchEditorCaseSensitive",
		"when": "inSearchEditor && searchInputBoxFocus"
	},
	{
		"key": "alt+w",
		"command": "-toggleSearchEditorWholeWord",
		"when": "inSearchEditor && searchInputBoxFocus"
	},
	{
		"key": "alt+r",
		"command": "-toggleSearchEditorRegex",
		"when": "inSearchEditor && searchInputBoxFocus"
	},
	{
		"key": "ctrl+alt+n",
		"command": "-code-runner.run"
	},
	{
		"key": "ctrl+alt+j",
		"command": "-code-runner.runByLanguage"
	},
	{
		"key": "ctrl+alt+k",
		"command": "-code-runner.runCustomCommand"
	},
	{
		"key": "ctrl+alt+m",
		"command": "-code-runner.stop"
	},
	{
		"key": "alt+r",
		"command": "-toggleSearchRegex",
		"when": "searchViewletFocus"
	},
	{
		"key": "alt+r",
		"command": "-toggleFindRegex",
		"when": "editorFocus"
	},
	{
		"key": "alt+r",
		"command": "-workbench.action.terminal.toggleFindRegex",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+w",
		"command": "-workbench.action.terminal.toggleFindWholeWord",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+w",
		"command": "-toggleFindWholeWord",
		"when": "editorFocus"
	},
	{
		"key": "alt+w",
		"command": "-toggleSearchWholeWord",
		"when": "searchViewletFocus"
	},
	{
		"key": "alt+c",
		"command": "-workbench.action.terminal.toggleFindCaseSensitive",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+c",
		"command": "-toggleFindCaseSensitive",
		"when": "editorFocus"
	},
	{
		"key": "alt+c",
		"command": "-toggleSearchCaseSensitive",
		"when": "searchViewletFocus"
	},
	{
		"key": "ctrl+alt+]",
		"command": "editor.action.inspectTMScopes"
	},
	{
		"key": "shift+alt+d",
		"command": "-editor.detectLanguage",
		"when": "editorTextFocus && !notebookEditable"
	},
	{
		"key": "shift+alt+d",
		"command": "-notebook.cell.detectLanguage",
		"when": "notebookCellEditable && notebookEditable"
	},
	{
		"key": "ctrl+shift+v",
		"command": "-markdown.showPreview",
		"when": "!notebookEditorFocused && editorLangId == 'markdown'"
	},
	{
		"key": "alt+win+up",
		"command": "yo1dog.cursor-align.alignCursors",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+down",
		"command": "-notebook.cell.focusInOutput",
		"when": "notebookCellHasOutputs && notebookEditorFocused"
	},
	{
		"key": "ctrl+down",
		"command": "-notebook.focusNextEditor",
		"when": "notebookEditorFocused && notebookOutputFocused"
	},
	{
		"key": "ctrl+v",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "terminalFocus && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
	},
	{
		"key": "shift+alt+insert",
		"command": "extension.pasteImage",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+alt+v",
		"command": "-extension.pasteImage",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+-",
		"command": "-workbench.action.zoomOut"
	},
	{
		"key": "ctrl+=",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "ctrl+m",
		"command": "-markdown.extension.editing.toggleMath",
		"when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
	},
	{
		"key": "alt+c",
		"command": "-markdown.extension.checkTaskList",
		"when": "editorTextFocus && editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+shift+v",
		"command": "-markdown.extension.closePreview",
		"when": "markdownPreviewFocus"
	},
	{
		"key": "ctrl+k v",
		"command": "-markdown.extension.closePreview",
		"when": "markdownPreviewFocus"
	},
	{
		"key": "ctrl+v",
		"command": "-markdown.extension.editing.paste",
		"when": "editorHasSelection && editorTextFocus && editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+shift+[",
		"command": "-markdown.extension.editing.toggleHeadingDown",
		"when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+shift+]",
		"command": "-markdown.extension.editing.toggleHeadingUp",
		"when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
	},
	{
		"key": "alt+s",
		"command": "-markdown.extension.editing.toggleStrikethrough",
		"when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+]",
		"command": "-markdown.extension.onIndentLines",
		"when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+[",
		"command": "-markdown.extension.onOutdentLines",
		"when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+[",
		"command": "-editor.action.outdentLines",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+]",
		"command": "-editor.action.indentLines",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+enter",
		"command": "search.action.replaceAllInFile",
		"when": "fileMatchFocus && replaceActive && searchViewletVisible"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "-search.action.replaceAllInFile",
		"when": "fileMatchFocus && replaceActive && searchViewletVisible"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "-search.action.replaceAllInFolder",
		"when": "folderMatchFocus && replaceActive && searchViewletVisible"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "-notebook.cell.execute",
		"when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "-notebook.cell.quitEdit",
		"when": "inputFocus && notebookEditorFocused && notebookCellType == 'markup'"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "search.action.replaceAll",
		"when": "replaceActive && searchViewletVisible && !findWidgetVisible"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "-search.action.replaceAll",
		"when": "replaceActive && searchViewletVisible && !findWidgetVisible"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "editor.action.replaceAll",
		"when": "editorFocus && findWidgetVisible"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "-editor.action.replaceAll",
		"when": "editorFocus && findWidgetVisible"
	},
	{
		"key": "shift+insert",
		"command": "workbench.action.terminal.paste",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "shift+insert",
		"command": "filesExplorer.paste",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "ctrl+alt+down",
		"command": "-smartmulticursor.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+alt+up",
		"command": "-smartmulticursor.insertCursorAbove",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+alt+win+down",
		"command": "-extension.scrollWithCursorDown",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+alt+win+up",
		"command": "-extension.scrollWithCursorUp",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus && neovim.mode == 'insert'"
	},
	{
		"key": "ctrl+alt+space",
		"command": "-toggleSuggestionFocus",
		"when": "suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+alt+n",
		"command": "-extension.advancedNewFile"
	},
	{
		"key": "ctrl+shift+.",
		"command": "-breadcrumbs.focusAndSelect",
		"when": "breadcrumbsPossible && breadcrumbsVisible"
	},
	{
		"key": "down",
		"command": "-list.focusDown",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "ctrl+shift+\\",
		"command": "-workbench.action.terminal.focusTabs",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
	},
	{
		"key": "ctrl+; ,",
		"command": "workbench.action.closeEditorsToTheLeft"
	},
	{
		"key": "ctrl+; .",
		"command": "workbench.action.closeEditorsToTheRight"
	},
	{
		"key": "ctrl+shift+;",
		"command": "-breadcrumbs.focus",
		"when": "breadcrumbsPossible"
	},
	{
		"key": "alt+insert",
		"command": "filesExplorer.cut",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "browserforward",
		"command": "workbench.action.navigateForward"
	},
	{
		"key": "alt+z",
		"command": "-editor.action.toggleWordWrap"
	},
	{
		"key": "alt+z",
		"command": "-workbench.action.terminal.sizeToContentWidth",
		"when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+j",
		"command": "-workbench.action.search.toggleQueryDetails",
		"when": "inSearchEditor || searchViewletFocus"
	},
	{
		"key": "f11",
		"command": "-extension.node-debug.startWithStopOnEntry",
		"when": "!inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'node' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-node'"
	},
	{
		"key": "alt+l alt+o",
		"command": "-extension.liveServer.goOnline",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+l alt+c",
		"command": "-extension.liveServer.goOffline",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+i",
		"command": "workbench.action.togglePanel",
		"when": "neovim.mode != 'insert'"
	},
	{
		"key": "alt+`",
		"command": "workbench.action.toggleSidebarVisibility"
	},
	{
		"key": "ctrl+b",
		"command": "-workbench.action.toggleSidebarVisibility"
	},
	{
		"key": "alt+p",
		"command": "-toggleSearchPreserveCase",
		"when": "searchViewletFocus"
	},
	{
		"key": "alt+p",
		"command": "-togglePreserveCase",
		"when": "editorFocus"
	},
	{
		"key": "alt+0",
		"command": "-workbench.action.lastEditorInGroup"
	},
	{
		"key": "ctrl+k ctrl+x",
		"command": "-editor.action.trimTrailingWhitespace",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+2",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "terminalFocus"
	},
	{
		"key": "f3",
		"command": "-findWordAtCursor.next",
		"when": "editorTextFocus && !findWidgetVisible"
	},
	{
		"key": "shift+f3",
		"command": "-findWordAtCursor.previous",
		"when": "editorTextFocus && !findWidgetVisible"
	},
	{
		"key": "alt+right",
		"command": "-workbench.action.terminal.focusNextPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+right",
		"command": "-gitlens.key.alt+right",
		"when": "gitlens:key:alt+right"
	},
	{
		"key": "alt+left",
		"command": "-workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+left",
		"command": "-gitlens.key.alt+left",
		"when": "gitlens:key:alt+left"
	},
	{
		"key": "alt+left",
		"command": "-workbench.action.quickInputBack",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+alt+win+left",
		"command": "-binaryJump.binaryLeftJump",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+alt+win+right",
		"command": "-binaryJump.binaryRightJump",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+l",
		"command": "-toggleSearchEditorContextLines",
		"when": "inSearchEditor"
	},
	{
		"key": "alt+l",
		"command": "-toggleFindInSelection",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+alt+c",
		"command": "-center-cursor.setCursor",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+alt+left",
		"command": "-selectPartOfWord.moveLeft"
	},
	{
		"key": "ctrl+alt+right",
		"command": "-selectPartOfWord.moveRight"
	},
	{
		"key": "ctrl+shift+alt+delete",
		"command": "-selectPartOfWord.delete"
	},
	{
		"key": "ctrl+alt+backspace",
		"command": "-selectPartOfWord.backspace"
	},
	{
		"key": "ctrl+alt+win+up",
		"command": "selectPartOfWord.selectLeft"
	},
	{
		"key": "ctrl+shift+alt+left",
		"command": "-selectPartOfWord.selectLeft"
	},
	{
		"key": "ctrl+alt+win+down",
		"command": "selectPartOfWord.selectRight"
	},
	{
		"key": "ctrl+shift+alt+right",
		"command": "-selectPartOfWord.selectRight"
	},
	{
		"key": "ctrl+.",
		"command": "-editor.action.quickFix",
		"when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+.",
		"command": "-problems.action.showQuickFixes",
		"when": "problemFocus"
	},
	{
		"key": "alt+.",
		"command": "-gitlens.diffWithNext",
		"when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "alt+.",
		"command": "-gitlens.diffWithNextInDiffLeft",
		"when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "alt+.",
		"command": "-gitlens.diffWithNextInDiffRight",
		"when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "alt+.",
		"command": "-gitlens.key.alt+.",
		"when": "gitlens:key:."
	},
	{
		"key": "ctrl+/",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+/",
		"command": "-toggleExplainMode",
		"when": "suggestWidgetVisible"
	},
	{
		"key": "ctrl+/",
		"command": "-editor.action.commentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+/",
		"command": "-gitlens.gitCommands",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "alt+h",
		"command": "-gitlens.showQuickFileHistory",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "alt+h",
		"command": "-testing.toggleTestingPeekHistory",
		"when": "testing.isPeekVisible"
	},
	{
		"key": "ctrl+b",
		"command": "-markdown.extension.editing.toggleBold",
		"when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
	},
	{
		"key": "shift+enter",
		"command": "-notebook.cell.executeAndSelectBelow",
		"when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
	},
	{
		"key": "ctrl+k s",
		"command": "-saveAll"
	},
	{
		"key": "ctrl+shift+w",
		"command": "-workbench.action.closeWindow"
	},
	{
		"key": "alt+[",
		"command": "-editor.action.inlineSuggest.showPrevious",
		"when": "inlineSuggestionVisible && !editorReadonly"
	},
	{
		"key": "alt+]",
		"command": "-editor.action.inlineSuggest.showNext",
		"when": "inlineSuggestionVisible && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+1",
		"command": "-editor.foldLevel1",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+2",
		"command": "-editor.foldLevel2",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+3",
		"command": "-editor.foldLevel3",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+4",
		"command": "-editor.foldLevel4",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+5",
		"command": "-editor.foldLevel5",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+6",
		"command": "-editor.foldLevel6",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+7",
		"command": "-editor.foldLevel7",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+8",
		"command": "-editor.foldAllMarkerRegions",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+-",
		"command": "-editor.foldAllExcept",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+[",
		"command": "-editor.foldRecursively",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+9",
		"command": "-editor.unfoldAllMarkerRegions",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+=",
		"command": "-editor.unfoldAllExcept",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+]",
		"command": "-editor.unfoldRecursively",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+o",
		"command": "-workbench.action.files.openLocalFolder",
		"when": "remoteFileDialogVisible"
	},
	{
		"key": "ctrl+f",
		"command": "-actions.find",
		"when": "editorFocus || editorIsOpen"
	},
	{
		"key": "ctrl+f",
		"command": "settings.action.search",
		"when": "inSettingsEditor"
	},
	{
		"key": "ctrl+f",
		"command": "-settings.action.search",
		"when": "inSettingsEditor"
	},
	{
		"key": "ctrl+f",
		"command": "-workbench.action.terminal.focusFind",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+f",
		"command": "-editor.action.extensioneditor.showfind",
		"when": "!editorFocus && activeEditor == 'workbench.editor.extension'"
	},
	{
		"key": "ctrl+f",
		"command": "-editor.action.webvieweditor.showFind",
		"when": "webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor'"
	},
	{
		"key": "ctrl+f",
		"command": "-notebook.find",
		"when": "notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+f",
		"command": "-problems.action.focusFilter",
		"when": "focusedView == 'workbench.panel.markers.view'"
	},
	{
		"key": "ctrl+h",
		"command": "-editor.action.startFindReplaceAction",
		"when": "editorFocus || editorIsOpen"
	},
	{
		"key": "ctrl+alt+right",
		"command": "-workbench.action.moveEditorToNextGroup"
	},
	{
		"key": "ctrl+alt+left",
		"command": "-workbench.action.moveEditorToPreviousGroup"
	},
	{
		"key": "ctrl+i",
		"command": "-markdown.extension.editing.toggleItalic",
		"when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+t",
		"command": "markdown.extension.onIndentLines",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && editorLangId == 'markdown' && neovim.mode == 'insert'"
	},
	{
		"key": "ctrl+d",
		"command": "markdown.extension.onOutdentLines",
		"when": "editorLangId == 'markdown' && editorTextFocus && neovim.ctrlKeysInsert && neovim.mode == 'insert'"
	},
	{
		"key": "shift+alt+b",
		"command": "-gitlens.toggleCodeLens",
		"when": "editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "ctrl+shift+n",
		"command": "-workbench.action.newWindow"
	},
	{
		"key": "shift+alt+,",
		"command": "-gitlens.diffLineWithPrevious",
		"when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "ctrl+shift+,",
		"command": "-editor.action.inPlaceReplace.up",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+.",
		"command": "-editor.action.autoFix",
		"when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
	},
	{
		"key": "shift+alt+.",
		"command": "-gitlens.diffWithWorking",
		"when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "ctrl+shift+.",
		"command": "-editor.action.inPlaceReplace.down",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+.",
		"command": "-breadcrumbs.toggleToOn",
		"when": "!config.breadcrumbs.enabled"
	},
	{
		"key": "ctrl+shift+pagedown",
		"command": "-workbench.action.moveEditorRightInGroup"
	},
	{
		"key": "ctrl+shift+pageup",
		"command": "-workbench.action.moveEditorLeftInGroup"
	},
	{
		"key": "shift+backspace",
		"command": "-deleteLeft",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+; ctrl+m",
		"command": "-testing.openOutputPeek"
	},
	{
		"key": "ctrl+; ctrl+o",
		"command": "-testing.showMostRecentOutput",
		"when": "testing.hasAnyResults"
	},
	{
		"key": "ctrl+; ctrl+i",
		"command": "-testing.toggleInlineTestOutput"
	},
	{
		"key": "ctrl+shift+alt+pagedown",
		"command": "-cursorColumnSelectPageDown",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+alt+pageup",
		"command": "-cursorColumnSelectPageUp",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+alt+pagedown",
		"command": "-workbench.action.terminal.scrollDown",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "ctrl+alt+pageup",
		"command": "-workbench.action.terminal.scrollUp",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "ctrl+9",
		"command": "-workbench.action.lastEditorInGroup"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-workbench.action.debug.nextConsole",
		"when": "inDebugRepl"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-workbench.action.terminal.focusNext",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-selectNextPageSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-workbench.action.nextEditor"
	},
	{
		"key": "ctrl+pageup",
		"command": "-workbench.action.debug.prevConsole",
		"when": "inDebugRepl"
	},
	{
		"key": "ctrl+pageup",
		"command": "-workbench.action.terminal.focusPrevious",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
	},
	{
		"key": "ctrl+pageup",
		"command": "-workbench.action.previousEditor"
	},
	{
		"key": "ctrl+pageup",
		"command": "-selectPrevPageSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+k ctrl+pagedown",
		"command": "-workbench.action.nextEditorInGroup"
	},
	{
		"key": "ctrl+k ctrl+pageup",
		"command": "-workbench.action.previousEditorInGroup"
	},
	{
		"key": "down",
		"command": "-notebook.focusNextEditor",
		"when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
	},
	{
		"key": "ctrl+e",
		"command": "-workbench.action.quickOpen"
	},
	{
		"key": "down",
		"command": "-breadcrumbs.selectFocused",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "ctrl+right",
		"command": "-breadcrumbs.focusNext",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "ctrl+left",
		"command": "-breadcrumbs.focusPrevious",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "alt+l",
		"command": "workbench.action.gotoSymbol",
		"when": "!inKeybindings && neovim.mode != 'insert'"
	},
	{
		"key": "ctrl+k m",
		"command": "-workbench.action.editor.changeLanguageMode",
		"when": "!notebookEditorFocused"
	},
	{
		"key": "ctrl+alt+,",
		"command": "workbench.action.moveEditorLeftInGroup"
	},
	{
		"key": "ctrl+alt+.",
		"command": "workbench.action.moveEditorRightInGroup"
	},
	{
		"key": "alt+0",
		"command": "workbench.action.lastEditorInGroup",
		"when": "!panelFocus || !terminalFocus"
	},
	{
		"key": "ctrl+tab",
		"command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
		"when": "!activeEditorGroupEmpty"
	},
	{
		"key": "ctrl+shift+tab",
		"command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
		"when": "!activeEditorGroupEmpty"
	},
	{
		"key": "alt+u",
		"command": "workbench.action.toggleMaximizedPanel"
	},
	{
		"key": "ctrl+6",
		"command": "timeline.focus"
	},
	{
		"key": "shift+alt+0",
		"command": "-workbench.action.toggleEditorGroupLayout"
	},
	{
		"key": "ctrl+; e",
		"command": "-testing.reRunFailTests"
	},
	{
		"key": "shift+escape",
		"command": "-closeFindWidget",
		"when": "editorFocus && findWidgetVisible && !isComposing"
	},
	{
		"key": "shift+escape",
		"command": "-workbench.action.terminal.hideFind",
		"when": "terminalFindVisible && terminalFocus && terminalHasBeenCreated || terminalFindVisible && terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+5",
		"command": "-workbench.action.terminal.split",
		"when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
	},
	{
		"key": "escape",
		"command": "closeFindWidget",
		"when": "editorFocus && findWidgetVisible && !isComposing"
	},
	{
		"key": "alt+p",
		"command": "workbench.action.showAllSymbols",
		"when": "neovim.mode != 'insert'"
	},
	{
		"key": "shift+alt+'",
		"command": "workbench.action.openView"
	},
	{
		"key": "ctrl+up",
		"command": "-search.focus.previousInputBox",
		"when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
	},
	{
		"key": "ctrl+down",
		"command": "-scrollLineDown",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+up",
		"command": "-scrollLineUp",
		"when": "textInputFocus"
	},
	{
		"key": "shift+escape",
		"command": "-removeSecondaryCursors",
		"when": "editorHasMultipleSelections && textInputFocus"
	},
	{
		"key": "ctrl+shift+s",
		"command": "-workbench.action.files.saveAs"
	},
	{
		"key": "ctrl+shift+s",
		"command": "-workbench.action.files.saveLocalFile",
		"when": "remoteFileDialogVisible"
	},
	{
		"key": "f2",
		"command": "codesnap.start",
		"when": "!filesExplorerFocus"
	},
	{
		"key": "ctrl+shift+] ]",
		"command": "workbench.action.openSettingsJson"
	},
	{
		"key": "f4",
		"command": "-breadcrumb-switcher.togglebreadcrumbs",
		"when": "editorFocus"
	},
	{
		"key": "alt+-",
		"command": "-decreaseSearchEditorContextLines",
		"when": "inSearchEditor"
	},
	{
		"key": "ctrl+k ctrl+,",
		"command": "-editor.createFoldingRangeFromSelection",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+.",
		"command": "-editor.removeManualFoldingRanges",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "alt+j", // "ctrl+f" on Windows/Linux
		"command": "-list.find",
		"when": "listFocus && listSupportsFind && !editorTextFocus"
	},
	{
		"key": "f3",
		"command": "-list.find",
		"when": "listFocus && listSupportsFind"
	},
	{
		"key": "ctrl+f",
		"command": "-list.find",
		"when": "listFocus && listSupportsFind"
	},
	{
		"key": "ctrl+alt+win+n",
		"command": "-welcome.showNewFileEntries"
	},
	{
		"key": "ctrl+shift+`",
		"command": "-workbench.action.terminal.new",
		"when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
	},
	{
		"key": "ctrl+k ctrl+q",
		"command": "-workbench.action.navigateToLastEditLocation"
	},
	{
		"key": "shift+tab",
		"command": "acceptAlternativeSelectedSuggestion",
		"when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus && !inSnippetMode"
	},
	{
		"key": "shift+enter",
		"command": "-acceptAlternativeSelectedSuggestion",
		"when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "alt+enter",
		"command": "-notebook.cell.executeAndInsertBelow",
		"when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
	},
	{
		"key": "alt+enter",
		"command": "-search.action.openInEditor",
		"when": "hasSearchResult && searchViewletFocus"
	},
	{
		"key": "alt+enter",
		"command": "-editor.action.selectAllMatches",
		"when": "editorFocus && findWidgetVisible"
	},
	{
		"key": "alt+enter",
		"command": "-testing.editFocusedTest",
		"when": "focusedView == 'workbench.view.testing'"
	},
	{
		"key": "alt+up",
		"command": "-notebook.cell.moveUp",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "alt+up",
		"command": "-workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+up",
		"command": "-history.showPrevious",
		"when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
	},
	{
		"key": "alt+up",
		"command": "-markdown.extension.onMoveLineUp",
		"when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
	},
	{
		"key": "alt+up",
		"command": "-scm.forceViewPreviousCommit",
		"when": "scmRepository"
	},
	{
		"key": "alt+up",
		"command": "-editor.action.moveLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+down",
		"command": "-notebook.cell.moveDown",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "alt+down",
		"command": "-workbench.action.terminal.focusNextPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+down",
		"command": "-history.showNext",
		"when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
	},
	{
		"key": "alt+down",
		"command": "-scm.forceViewNextCommit",
		"when": "scmRepository"
	},
	{
		"key": "alt+down",
		"command": "-markdown.extension.onMoveLineDown",
		"when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
	},
	{
		"key": "alt+down",
		"command": "-editor.action.moveLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+e",
		"command": "workbench.explorer.fileView.focus"
	},
	{
		"key": "ctrl+alt+e",
		"command": "ahk2.compile",
		"when": "editorLangId == 'ahk2'"
	},
	{
		"key": "ctrl+shift+f5",
		"command": "-ahk2.compile",
		"when": "editorLangId == 'ahk2'"
	},
	{
		"key": "f5",
		"command": "-ahk2.debug",
		"when": "!inDebugMode && editorLangId == 'ahk2'"
	},
	{
		"key": "shift+f5",
		"command": "-ahk2.debug.params",
		"when": "editorLangId == 'ahk2'"
	},
	{
		"key": "ctrl+f6",
		"command": "-ahk2.stop",
		"when": "ahk2:isRunning && editorLangId == 'ahk2'"
	},
	{
		"key": "ctrl+f5",
		"command": "-ahk2.selection.run",
		"when": "editorHasSelection && editorLangId == 'ahk2'"
	},
	{
		"key": "ctrl+f1",
		"command": "-ahk2.help",
		"when": "editorLangId == 'ahk2'"
	},
	{
		"key": "ctrl+; l",
		"command": "ahk2.run",
		"when": "editorLangId == 'ahk2'"
	},
	{
		"key": "ctrl+f5",
		"command": "-ahk2.run",
		"when": "!editorHasSelection && editorLangId == 'ahk2'"
	},
	{
		"key": "ctrl+8",
		"command": "workbench.panel.output.focus"
	},
	{
		"key": "shift+alt+9",
		"command": "-workbench.action.moveEditorToLastGroup"
	},
	{
		"key": "shift+alt+9",
		"command": "workbench.action.debug.continue",
		"when": "inDebugMode"
	},
	{
		"key": "ctrl+shift+9",
		"command": "workbench.action.debug.stop"
	},
	{
		"key": "ctrl+alt+9",
		"command": "workbench.action.debug.restart"
	},
	{
		"key": "shift+alt+9",
		"command": "ahk2.debug",
		"when": "!inDebugMode && editorLangId == 'ahk2'"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "-notebook.cell.execute",
		"when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
	},
	{
		"key": "shift+alt+n",
		"command": "extension.advancedNewFile"
	},
	{
		"key": "ctrl+shift+;",
		"command": "-extension.executeAREPL",
		"when": "!inQuickOpen && !terminalFocus && editorLangId == 'python'"
	},
	{
		"key": "ctrl+shift+g g",
		"command": "-workbench.view.scm",
		"when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "ctrl+k ctrl+d",
		"command": "-editor.action.moveSelectionToNextFindMatch",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+f3",
		"command": "-editor.action.nextSelectionMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+shift+f3",
		"command": "-editor.action.previousSelectionMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "capslock",
		"command": "cancelRenameInput",
		"when": "editorFocus && renameInputVisible"
	},
	{
		"key": "shift+enter",
		"command": "-acceptRenameInputWithPreview",
		"when": "config.editor.rename.enablePreview && editorFocus && renameInputVisible"
	},
	{
		"key": "alt+;",
		"command": "breadcrumbs.focusAndSelect",
		"when": "neovim.mode != 'insert' && breadcrumbsVisible"
	},
	{
		"key": "enter",
		"command": "-breadcrumbs.selectFocused",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "capslock",
		"command": "breadcrumbs.selectEditor",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "shift+alt+] ]",
		"command": "workbench.action.openGlobalKeybindingsFile"
	},
	{
		"key": "ctrl+shift+a",
		"command": "-extension.currentAREPLSession",
		"when": "!inQuickOpen && !terminalFocus"
	},
	{
		"key": "ctrl+shift+q",
		"command": "-extension.newAREPLSession",
		"when": "!inQuickOpen && !terminalFocus"
	},
	{
		"key": "ctrl+enter",
		"command": "-extension.executeAREPLBlock",
		"when": "editorTextFocus && editorLangId == 'python'"
	},
	{
		"key": "alt+f4",
		"command": "-workbench.action.closeWindow"
	},
	{
		"key": "ctrl+s",
		"command": "-issue.createIssueFromFile",
		"when": "!issues.creatingFromFile && resourceScheme == 'newIssue' && config.files.autoSave != 'off'"
	},
	{
		"key": "ctrl+f11",
		"command": "-workbench.action.debug.stepIntoTarget",
		"when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'"
	},
	{
		"key": "ctrl+k e",
		"command": "-workbench.files.action.focusOpenEditorsView",
		"when": "workbench.explorer.openEditorsView.active"
	},
	{
		"key": "ctrl+k c",
		"command": "-workbench.files.action.compareWithClipboard"
	},
	{
		"key": "ctrl+k d",
		"command": "-workbench.files.action.compareWithSaved"
	},
	{
		"key": "shift+alt+c",
		"command": "-copyFilePath",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k ctrl+shift+c",
		"command": "-copyRelativeFilePath",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k o",
		"command": "-workbench.action.files.showOpenedFileInNewWindow",
		"when": "emptyWorkspaceSupport"
	},
	{
		"key": "ctrl+k ctrl+alt+s",
		"command": "-git.stageSelectedRanges",
		"when": "isInDiffEditor"
	},
	{
		"key": "ctrl+k ctrl+n",
		"command": "-git.unstageSelectedRanges",
		"when": "isInDiffEditor"
	},
	{
		"key": "ctrl+shift+space",
		"command": "-issue.suggestRefresh",
		"when": "suggestWidgetVisible"
	},
	{
		"key": "ctrl+shift+g /",
		"command": "-gitlens.gitCommands",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "ctrl+shift+g .",
		"command": "-gitlens.diffWithNext",
		"when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "ctrl+shift+g .",
		"command": "-gitlens.diffWithNextInDiffLeft",
		"when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "ctrl+shift+g .",
		"command": "-gitlens.diffWithNextInDiffRight",
		"when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "alt+,",
		"command": "-gitlens.diffWithPrevious",
		"when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "ctrl+shift+g ,",
		"command": "-gitlens.diffWithPrevious",
		"when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "alt+,",
		"command": "-gitlens.diffWithPreviousInDiffLeft",
		"when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "ctrl+shift+g ,",
		"command": "-gitlens.diffWithPreviousInDiffLeft",
		"when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "alt+,",
		"command": "-gitlens.diffWithPreviousInDiffRight",
		"when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "ctrl+shift+g ,",
		"command": "-gitlens.diffWithPreviousInDiffRight",
		"when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "ctrl+shift+g shift+.",
		"command": "-gitlens.diffWithWorking",
		"when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "ctrl+shift+g shift+,",
		"command": "-gitlens.diffLineWithPrevious",
		"when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "ctrl+shift+g shift+h",
		"command": "-gitlens.showQuickRepoHistory",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "ctrl+shift+g h",
		"command": "-gitlens.showQuickFileHistory",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "alt+c",
		"command": "-gitlens.showQuickCommitFileDetails",
		"when": "editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "ctrl+shift+g c",
		"command": "-gitlens.showQuickCommitFileDetails",
		"when": "editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "alt+s",
		"command": "-gitlens.showQuickRepoStatus",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "ctrl+shift+g s",
		"command": "-gitlens.showQuickRepoStatus",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "alt+b",
		"command": "-gitlens.toggleFileBlame",
		"when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
	},
	{
		"key": "ctrl+shift+g b",
		"command": "-gitlens.toggleFileBlame",
		"when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /blameable/"
	},
	{
		"key": "ctrl+shift+g shift+b",
		"command": "-gitlens.toggleCodeLens",
		"when": "editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "f11",
		"command": "-workbench.action.toggleFullScreen",
		"when": "!isIOS"
	},
	{
		"key": "ctrl+'",
		"command": "-editor.togglequotes"
	},
	{
		"key": "ctrl+shift+1",
		"command": "-search.action.replaceAllInFile",
		"when": "fileMatchFocus && replaceActive && searchViewletVisible"
	},
	{
		"key": "ctrl+shift+1",
		"command": "-search.action.replaceAllInFolder",
		"when": "folderMatchFocus && replaceActive && searchViewletVisible"
	},
	{
		"key": "tab",
		"command": "-acceptSelectedSuggestion",
		"when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "tab",
		"command": "-insertBestCompletion",
		"when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
	},
	{
		"key": "tab",
		"command": "-insertNextSuggestion",
		"when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
	},
	{
		"key": "tab",
		"command": "-insertSnippet",
		"when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
	},
	{
		"key": "ctrl+shift+y",
		"command": "workbench.action.addRootFolder"
	},
	{
		"key": "ctrl+alt+g",
		"command": "-extension.relativeGoto",
		"when": "editorTextFocus"
	},
	{
		"key": "pageup",
		"command": "-cursorPageUp",
		"when": "textInputFocus"
	},
	{
		"key": "pagedown",
		"command": "-cursorPageDown",
		"when": "textInputFocus"
	},
	{
		"key": "alt+f3",
		"command": "-editor.action.dirtydiff.next",
		"when": "editorTextFocus && !textCompareEditorActive"
	},
	{
		"key": "shift+alt+f3",
		"command": "-editor.action.dirtydiff.previous",
		"when": "editorTextFocus && !textCompareEditorActive"
	},
	{
		"key": "shift+alt+a",
		"command": "-align.by.regex",
		"when": "editorHasSelection"
	},
	{
		"key": "ctrl+down",
		"command": "-scroll-faster.down",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+up",
		"command": "-scroll-faster.up",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+up",
		"command": "-notebook.cell.focusOutOutput",
		"when": "notebookEditorFocused"
	},
	{
		"key": "k",
		"command": "selectPrevCodeAction",
		"when": "actionWidgetVisible || codeActionMenuVisible"
	},
	{
		"key": "ctrl+up",
		"command": "-selectPrevCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+up",
		"command": "-search.action.focusSearchFromResults",
		"when": "firstMatchFocus && searchViewletVisible"
	},
	{
		"key": "ctrl+up",
		"command": "-workbench.action.terminal.navigationModeFocusPrevious",
		"when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+up",
		"command": "-workbench.action.terminal.scrollToPreviousCommand",
		"when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
	},
	{
		"key": "ctrl+down",
		"command": "-workbench.action.terminal.navigationModeFocusNext",
		"when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+down",
		"command": "-workbench.action.terminal.scrollToNextCommand",
		"when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
	},
	{
		"key": "ctrl+down",
		"command": "-commentsFocusViewFromFilter",
		"when": "commentsFilterFocus"
	},
	{
		"key": "ctrl+down",
		"command": "-problems.action.focusProblemsFromFilter",
		"when": "problemsFilterFocus"
	},
	{
		"key": "ctrl+down",
		"command": "-search.focus.nextInputBox",
		"when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
	},
	{
		"key": "j",
		"command": "selectNextCodeAction",
		"when": "actionWidgetVisible || codeActionMenuVisible"
	},
	{
		"key": "ctrl+down",
		"command": "-selectNextCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+down",
		"command": "-selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "pagedown",
		"command": "-selectNextPageSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "pagedown",
		"command": "-notifications.focusLastToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "pagedown",
		"command": "-list.focusPageDown",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "pagedown",
		"command": "-workbench.action.terminal.navigationModeFocusNextPage",
		"when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalNavigationModeActive && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalNavigationModeActive && terminalProcessSupported"
	},
	{
		"key": "pagedown",
		"command": "-notebook.cell.cursorPageDown",
		"when": "editorTextFocus && inputFocus && notebookEditorFocused"
	},
	{
		"key": "pageup",
		"command": "-selectPrevPageSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "pageup",
		"command": "-notifications.focusFirstToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "pageup",
		"command": "-list.focusPageUp",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "pageup",
		"command": "-workbench.action.terminal.navigationModeFocusPreviousPage",
		"when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalNavigationModeActive && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalNavigationModeActive && terminalProcessSupported"
	},
	{
		"key": "pageup",
		"command": "-notebook.cell.cursorPageUp",
		"when": "editorTextFocus && inputFocus && notebookEditorFocused"
	},
	{
		"key": "ctrl+a",
		"command": "-editor.action.selectAll"
	},
	{
		"key": "escape",
		"command": "removeSecondaryCursors",
		"when": "editorHasMultipleSelections && textInputFocus"
	},
	{
		"key": "ctrl+0",
		"command": "-workbench.action.focusSideBar"
	},
	{
		"key": "ctrl+end",
		"command": "-notebook.focusBottom",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "ctrl+t",
		"command": "editor.action.indentLines",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.mode == 'insert'"
	},
	{
		"key": "ctrl+d",
		"command": "editor.action.outdentLines",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.mode == 'insert'"
	},
	{
		"key": "delete",
		"command": "-notification.clear",
		"when": "notificationFocus"
	},
	{
		"key": "ctrl+a",
		"command": "-extension.vim_ctrl+a",
		"when": "editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"
	},
	{
		"key": "ctrl+x",
		"command": "-extension.vim_ctrl+x",
		"when": "editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"
	},
	{
		"key": "shift+alt+9",
		"command": "workbench.action.debug.selectandstart",
		"when": "!inDebugMode && editorLangId != 'ahk2'"
	},
	{
		"key": "alt+w",
		"command": "workbench.action.terminal.kill",
		"when": "terminalFocus && activePanel == 'terminal' && panelFocus"
	},
	{
		"key": "delete",
		"command": "-workbench.action.terminal.killInstance",
		"when": "terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
	},
	{
		"key": "shift+alt+0",
		"command": "toggleSearchEditorRegex",
		"when": "inSearchEditor"
	},
	{
		"key": ";",
		"command": "vim.showQuickpickCmdLine",
		"when": "editorTextFocus && vim.active && vim.mode == 'Normal'"
	},
	{
		"key": "alt+/",
		"command": "editor.action.quickFix",
		"when": "textInputFocus && !actionWidgetVisible && !codeActionMenuVisible"
	},
	{
		"key": "y r",
		"command": "copyRelativeFilePath",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "shift+alt+up",
		"command": "-editor.action.copyLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+up",
		"command": "-markdown.extension.onCopyLineUp",
		"when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
	},
	{
		"key": "shift+alt+down",
		"command": "-editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+down",
		"command": "-notebook.cell.copyDown",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "shift+alt+down",
		"command": "-markdown.extension.onCopyLineDown",
		"when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
	},
	{
		"key": "shift+alt+up",
		"command": "-notebook.cell.copyUp",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "ctrl+space",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
	},
	{
		"key": "ctrl+=",
		"command": "editor.action.fontZoomIn"
	},
	{
		"key": "ctrl+shift+-",
		"command": "-workbench.action.zoomOut"
	},
	{
		"key": "ctrl+shift+=",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "ctrl+0",
		"command": "editor.action.fontZoomReset"
	},
	{
		"key": "ctrl+left",
		"command": "-breadcrumbs.focusPreviousWithPicker",
		"when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
	},
	{
		"key": "ctrl+right",
		"command": "-breadcrumbs.focusNextWithPicker",
		"when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
	},
	{
		"key": "ctrl+enter",
		"command": "-breadcrumbs.revealFocusedFromTreeAside",
		"when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
	},
	{
		"key": "ctrl+enter",
		"command": "-breadcrumbs.revealFocused",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "shift+alt+1",
		"command": "-workbench.action.moveEditorToFirstGroup"
	},
	{
		"key": "ctrl+.",
		"command": "-workbench.action.terminal.quickFix",
		"when": "terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+.",
		"command": "-acceptSelectedCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+-",
		"command": "editor.action.fontZoomOut"
	},
	{
		"key": "escape",
		"command": "-notifications.hideToasts",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "ctrl+d",
		"command": "-editor.action.outdentLines",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
	},
	{
		"key": "ctrl+u",
		"command": "-deleteAllLeft",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
	},
	{
		"key": "ctrl+t",
		"command": "-editor.action.indentLines",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "-notebook.cell.insertCodeCellAbove",
		"when": "notebookCellListFocused && !inputFocus"
	},
	{
		"key": "ctrl+enter",
		"command": "-notebook.cell.insertCodeCellBelow",
		"when": "notebookCellListFocused && !inputFocus"
	},
	{
		"key": "shift+alt+f",
		"command": "-filesExplorer.findInFolder",
		"when": "explorerResourceIsFolder && explorerViewletVisible && filesExplorerFocus && !inputFocus"
	},
	{
		"key": "shift+a",
		"command": "-explorer.newFolder",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "i",
		"command": "keybindings.editor.copyCommandKeybindingEntry",
		"when": "inKeybindings && keybindingFocus && !inputFocus"
	},
	{
		"key": "d",
		"command": "keybindings.editor.removeKeybinding",
		"when": "inKeybindings && keybindingFocus && !inputFocus"
	},
	{
		"key": "f12",
		"command": "-editor.gotoNextSymbolFromResult",
		"when": "hasSymbols"
	},
	{
		"key": "ctrl+n",
		"command": "-workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+p",
		"command": "-workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+v",
		"command": "editor.action.clipboardPasteAction",
		"when": "editorTextFocus && neovim.mode == 'insert'"
	},
	{
		"key": "ctrl+n",
		"command": "-selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+p",
		"command": "-selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "shift+tab",
		"command": "-insertPrevSuggestion",
		"when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
	},
	{
		"key": "alt+enter",
		"command": "-acceptSelectedSuggestion",
		"when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
	},
	{
		"key": "tab",
		"command": "-editor.action.inlineSuggest.commit",
		"when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
	},
	{
		"key": "shift+escape",
		"command": "-leaveSnippet",
		"when": "editorTextFocus && inSnippetMode"
	},
	{
		"key": "escape",
		"command": "-search.action.cancel",
		"when": "listFocus && searchViewletVisible && !inputFocus && searchState != '0'"
	},
	{
		"key": "enter",
		"command": "-acceptSelectedSuggestion",
		"when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
	},
	{
		"key": "enter",
		"command": "-acceptSelectedCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "escape",
		"command": "-settings.action.clearSearchResults",
		"when": "inSettingsEditor && inSettingsSearch"
	},
	{
		"key": "ctrl+space",
		"command": "notifications.clearAll",
		"when": "notificationToastsVisible"
	},
	{
		"key": "ctrl+c",
		"command": "-editor.action.clipboardCopyAction"
	},
	{
		"key": "ctrl+c",
		"command": "-keybindings.editor.copyKeybindingEntry",
		"when": "inKeybindings && keybindingFocus && !whenFocus"
	},
	{
		"key": "shift+tab",
		"command": "-acceptAlternativeSelectedSuggestion",
		"when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "h",
		"command": "breadcrumbs.focusPrevious",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "shift+l",
		"command": "breadcrumbs.focusNextWithPicker",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "shift+h",
		"command": "breadcrumbs.focusPreviousWithPicker",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "ctrl+h",
		"command": "-deleteLeft",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
	},
	{
		"key": "shift+alt+w",
		"command": "workbench.action.closeEditorsInGroup",
		"when": "!terminalFocus"
	},
	{
		"key": "ctrl+k w",
		"command": "-workbench.action.closeEditorsInGroup"
	},
	{
		"key": "ctrl+insert",
		"command": "editor.action.clipboardCopyAction"
	},
	{
		"key": "ctrl+; ctrl+r",
		"command": "-testing.refreshTests",
		"when": "testing.canRefresh"
	},
	{
		"key": "y shift+r",
		"command": "copyFilePath",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "ctrl+f",
		"command": "-commentsFocusFilter",
		"when": "focusedView == 'workbench.panel.comments'"
	},
	{
		"key": "ctrl+b",
		"command": "-cursorHome",
		"when": "neovim.mode == 'cmdline_insert' || neovim.mode == 'cmdline_normal' || neovim.mode == 'cmdline_replace'"
	},
	{
		"key": "ctrl+p",
		"command": "-list.focusUp",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "ctrl+p",
		"command": "-showPrevParameterHint",
		"when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+delete",
		"command": "-deleteWordRight",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+a",
		"command": "editor.action.selectAll",
		"when": "!editorTextFocus"
	},
	{
		"key": "alt+o",
		"command": "hideSuggestWidget",
		"when": "suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "capslock",
		"command": "hideSuggestWidget",
		"when": "suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "alt+j",
		"command": "search.focus.nextInputBox",
		"when": "searchViewletVisible && panelFocus"
	},
	{
		"key": "shift+alt+u",
		"command": "workbench.action.restartExtensionHost"
	},
	{
		"key": "tab",
		"command": "acceptSelectedSuggestion",
		"when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus && !inlineSuggestionVisible"
	},
	{
		"key": "alt+k",
		"command": "search.focus.previousInputBox",
		"when": "searchViewletVisible && panelFocus"
	},
	{
		"key": "alt+f8",
		"command": "-editor.action.marker.next",
		"when": "editorFocus"
	},
	{
		"key": "shift+alt+f8",
		"command": "-editor.action.marker.prev",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+x",
		"command": "-filesExplorer.cut",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "ctrl+x",
		"command": "-editor.action.clipboardCutAction"
	},
	{
		"key": "alt+insert",
		"command": "editor.action.clipboardCutAction"
	},
	{
		"key": "ctrl+k f12",
		"command": "-editor.action.revealDefinitionAside",
		"when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
	},
	{
		"key": "alt+f12",
		"command": "-editor.action.peekDefinition",
		"when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
	},
	{
		"key": "ctrl+e",
		"command": "-vscode-neovim.ctrl-e",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'",
		"args": "<C-e>"
	},
	{
		"key": "ctrl+y",
		"command": "vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode == 'insert'",
		"args": "<C-y>"
	},
	{
		"key": "ctrl+l",
		"command": "vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode == 'insert'",
		"args": "<C-l>"
	},
	{
		"key": "ctrl+e",
		"command": "vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode == 'insert'",
		"args": "<C-e>"
	},
	{
		"key": "ctrl+x",
		"command": "vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode == 'insert'",
		"args": "<C-x>"
	},
	{
		"key": "ctrl+f",
		"command": "vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init",
		"args": "<C-f>"
	},
	{
		"key": "ctrl+d",
		"command": "vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init",
		"args": "<C-d>"
	},
	{
		"key": "ctrl+u",
		"command": "vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init",
		"args": "<C-u>"
	},
	{
		"key": "ctrl+b",
		"command": "vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'",
		"args": "<C-b>"
	},
	{
		"key": "ctrl+p",
		"command": "vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.mode == 'insert'",
		"args": "<C-p>"
	},
	{
		"key": "ctrl+n",
		"command": "vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.mode == 'insert'",
		"args": "<C-n>"
	},
	{
		"key": "ctrl+z",
		"command": "vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.mode == 'insert'",
		"args": "<C-z>"
	},
	{
		"key": "ctrl+h",
		"command": "vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.mode == 'insert'",
		"args": "<C-h>"
	},
	{
		"key": "ctrl+m",
		"command": "vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.mode == 'insert'",
		"args": "<C-m>"
	},
	{
		"key": "ctrl+i",
		"command": "vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.mode == 'insert'",
		"args": "<C-i>"
	},
	{
		"key": "ctrl+k",
		"command": "vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.mode == 'insert'",
		"args": "<C-k>"
	},
	{
		"key": "ctrl+b",
		"command": "vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.mode == 'insert'",
		"args": "<C-b>"
	},
	{
		"key": "shift+enter",
		"command": "editor.action.insertLineBefore",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+m",
		"command": "-markdown.extension.editing.toggleMath",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
	},
	{
		"key": "ctrl+down",
		"command": "-gotoNextPreviousMember.nextMember"
	},
	{
		"key": "ctrl+up",
		"command": "-gotoNextPreviousMember.previousMember"
	},
	{
		"key": "alt+]",
		"command": "workbench.action.editor.nextChange",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && !textCompareEditorVisible && neovim.mode != 'insert'"
	},
	{
		"key": "alt+[",
		"command": "workbench.action.editor.previousChange",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && !textCompareEditorVisible && neovim.mode != 'insert'"
	},
	{
		"key": "ctrl+]",
		"command": "editor.action.marker.next",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
	},
	{
		"key": "ctrl+[",
		"command": "editor.action.marker.prev",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
	},
	{
		"key": "alt+i",
		"command": "editor.action.insertSnippet",
		"when": "neovim.mode == 'insert'"
	},
	{
		"key": "shift+alt+y",
		"command": "workbench.action.reloadWindow"
	},
	{
		"key": "ctrl+k ctrl+up",
		"command": "-workbench.action.focusAboveGroup"
	},
	{
		"key": "ctrl+k ctrl+down",
		"command": "-workbench.action.focusBelowGroup"
	},
	{
		"key": "ctrl+k ctrl+left",
		"command": "-workbench.action.focusLeftGroup"
	},
	{
		"key": "ctrl+k ctrl+right",
		"command": "-workbench.action.focusRightGroup"
	},
	{
		"key": "alt+,",
		"command": "workbench.action.previousEditorInGroup",
		"when": "!panelFocus"
	},
	{
		"key": "ctrl+alt+q",
		"command": "workbench.action.joinTwoGroups"
	},
	{
		"key": "ctrl+pageup",
		"command": "workbench.action.previousEditorInGroup"
	},
	{
		"key": "ctrl+.",
		"command": "-acceptSelectedCodeAction",
		"when": "actionWidgetVisible"
	},
	{
		"key": "tab",
		"command": "acceptSelectedCodeAction",
		"when": "actionWidgetVisible || codeActionMenuVisible"
	},
	{
		"key": "enter",
		"command": "-acceptSelectedCodeAction",
		"when": "actionWidgetVisible"
	},
	{
		"key": "capslock",
		"command": "hideCodeActionWidget",
		"when": "actionWidgetVisible || codeActionMenuVisible"
	},
	{
		"key": "ctrl+p",
		"command": "-selectPrevCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+n",
		"command": "-selectNextCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+down",
		"command": "-selectNextCodeAction",
		"when": "actionWidgetVisible"
	},
	{
		"key": "ctrl+up",
		"command": "-selectPrevCodeAction",
		"when": "actionWidgetVisible"
	},
	{
		"key": "ctrl+c",
		"command": "-workbench.action.terminal.copySelection",
		"when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
	},
	{
		"key": "ctrl+v",
		"command": "-workbench.action.terminal.paste",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "shift+pagedown",
		"command": "-workbench.action.terminal.scrollDownPage",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "shift+pageup",
		"command": "-workbench.action.terminal.scrollUpPage",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "ctrl+.",
		"command": "-workbench.action.terminal.showQuickFixes",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+shift+5",
		"command": "-workbench.action.terminal.splitInstance",
		"when": "terminalProcessSupported && terminalTabsFocus"
	},
	{
		"key": "ctrl+shift+up",
		"command": "-workbench.action.terminal.selectToPreviousCommand",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+down",
		"command": "-workbench.action.terminal.selectToNextCommand",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "down",
		"command": "-workbench.action.terminal.navigationModeFocusNext",
		"when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalNavigationModeActive && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalNavigationModeActive && terminalProcessSupported"
	},
	{
		"key": "up",
		"command": "-workbench.action.terminal.navigationModeFocusPrevious",
		"when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalNavigationModeActive && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalNavigationModeActive && terminalProcessSupported"
	},
	{
		"key": "ctrl+k left",
		"command": "-workbench.action.moveActiveEditorGroupLeft"
	},
	{
		"key": "ctrl+k left",
		"command": "-views.moveViewLeft",
		"when": "focusedView != ''"
	},
	{
		"key": "ctrl+v",
		"command": "-filesExplorer.paste",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "ctrl+v",
		"command": "-markdown.extension.editing.paste",
		"when": "editorHasSelection && editorTextFocus && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
	},
	{
		"key": "ctrl+l",
		"command": "-expandLineSelection",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+l",
		"command": "-notebook.centerActiveCell",
		"when": "notebookEditorFocused"
	},
	{
		"key": "ctrl+f",
		"command": "-notebook.find",
		"when": "notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+b",
		"command": "-markdown.extension.editing.toggleBold",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
	},
	{
		"key": "ctrl+f",
		"command": "-vscode-neovim.ctrl-f",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode == 'normal'"
	},
	{
		"key": "ctrl+p",
		"command": "-list.focusUp",
		"when": "inReferenceSearchEditor && neovim.mode == 'normal'"
	},
	{
		"key": "alt+j",
		"command": "workbench.action.quickOpen",
		"when": "neovim.mode != 'insert' && !inQuickOpen"
	},
	{
		"key": "ctrl+p",
		"command": "-workbench.action.quickOpen"
	},
	{
		"key": "ctrl+n",
		"command": "-list.focusDown",
		"when": "inReferenceSearchEditor && neovim.mode == 'normal'"
	},
	{
		"key": "ctrl+n",
		"command": "-list.focusDown",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "ctrl+n",
		"command": "-showNextParameterHint",
		"when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+pagedown",
		"command": "workbench.action.nextEditorInGroup"
	},
	{
		"key": "ctrl+f5",
		"command": "-ahk2.run",
		"when": "!editorHasSelection && editorLangId == 'ahk2' && resourceScheme == 'file'"
	},
	{
		"key": "alt+r",
		"command": "terminal.focus"
	},
	{
		"key": "ctrl+; l",
		"command": "-testing.reRunLastRun"
	},
	{
		"key": "ctrl+i",
		"command": "-focusSuggestion",
		"when": "suggestWidgetVisible && textInputFocus && !config.editor.suggest.selectQuickSuggestions && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+i",
		"command": "-markdown.extension.editing.toggleItalic",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
	},
	{
		"key": "ctrl+i",
		"command": "-toggleSuggestionDetails",
		"when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+]",
		"command": "-markdown.extension.onIndentLines",
		"when": "editorTextFocus && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
	},
	{
		"key": "ctrl+[",
		"command": "-markdown.extension.onOutdentLines",
		"when": "editorTextFocus && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
	},
	{
		"key": "ctrl+k ctrl+k",
		"command": "-editor.action.defineKeybinding",
		"when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
	},
	{
		"key": "w",
		"command": "keybindings.editor.defineWhenExpression",
		"when": "inKeybindings && keybindingFocus && !inputFocus"
	},
	{
		"key": "alt+2",
		"command": "workbench.action.openEditorAtIndex2",
		"when": "!terminalFocus || !panelFocus"
	},
	{
		"key": "alt+3",
		"command": "workbench.action.openEditorAtIndex3",
		"when": "!terminalFocus || !panelFocus"
	},
	{
		"key": "alt+4",
		"command": "workbench.action.openEditorAtIndex4",
		"when": "!terminalFocus || !panelFocus"
	},
	{
		"key": "alt+5",
		"command": "workbench.action.openEditorAtIndex5",
		"when": "!terminalFocus || !panelFocus"
	},
	{
		"key": "alt+6",
		"command": "workbench.action.openEditorAtIndex6",
		"when": "!terminalFocus || !panelFocus"
	},
	{
		"key": "alt+7",
		"command": "workbench.action.openEditorAtIndex7",
		"when": "!terminalFocus || !panelFocus"
	},
	{
		"key": "alt+8",
		"command": "workbench.action.openEditorAtIndex8",
		"when": "!terminalFocus || !panelFocus"
	},
	{
		"key": "alt+9",
		"command": "workbench.action.openEditorAtIndex9",
		"when": "!terminalFocus || !panelFocus"
	},
	{
		"key": "alt+1",
		"command": "workbench.action.terminal.focusAtIndex1",
		"when": "terminalFocus && panelFocus && activePanel == 'terminal'"
	},
	{
		"key": "alt+2",
		"command": "workbench.action.terminal.focusAtIndex2",
		"when": "terminalFocus && panelFocus && activePanel == 'terminal'"
	},
	{
		"key": "alt+3",
		"command": "workbench.action.terminal.focusAtIndex3",
		"when": "terminalFocus && panelFocus && activePanel == 'terminal'"
	},
	{
		"key": "alt+4",
		"command": "workbench.action.terminal.focusAtIndex4",
		"when": "terminalFocus && panelFocus && activePanel == 'terminal'"
	},
	{
		"key": "alt+5",
		"command": "workbench.action.terminal.focusAtIndex5",
		"when": "terminalFocus && panelFocus && activePanel == 'terminal'"
	},
	{
		"key": "alt+6",
		"command": "workbench.action.terminal.focusAtIndex6",
		"when": "terminalFocus && panelFocus && activePanel == 'terminal'"
	},
	{
		"key": "alt+7",
		"command": "workbench.action.terminal.focusAtIndex7",
		"when": "terminalFocus && panelFocus && activePanel == 'terminal'"
	},
	{
		"key": "alt+8",
		"command": "workbench.action.terminal.focusAtIndex8",
		"when": "terminalFocus && panelFocus && activePanel == 'terminal'"
	},
	{
		"key": "alt+9",
		"command": "workbench.action.terminal.focusAtIndex9",
		"when": "terminalFocus && panelFocus && activePanel == 'terminal'"
	},
	{
		"key": "shift+tab",
		"command": "-outdent",
		"when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
	},
	{
		"key": "alt+c",
		"command": "-markdown.extension.checkTaskList",
		"when": "editorTextFocus && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
	},
	{
		"key": "alt+.",
		"command": "workbench.action.nextEditorInGroup",
		"when": "!panelFocus"
	},
	{
		"key": "alt+1",
		"command": "workbench.action.firstEditorInGroup",
		"when": "!terminalFocus || !panelFocus"
	},
	{
		"key": "escape",
		"command": "-keybindings.editor.clearSearchResults",
		"when": "inKeybindings && inKeybindingsSearch"
	},
	{
		"key": "escape",
		"command": "-hideCodeActionWidget",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "shift+escape",
		"command": "-hideCodeActionWidget",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+shift+w",
		"command": "workbench.action.closeOtherEditors",
		"when": "!terminalFocus"
	},
	{
		"key": "alt+down",
		"command": "-markdown.extension.onMoveLineDown",
		"when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
	},
	{
		"key": "alt+up",
		"command": "-markdown.extension.onMoveLineUp",
		"when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
	},
	{
		"key": "ctrl+shift+[",
		"command": "-markdown.extension.editing.toggleHeadingDown",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
	},
	{
		"key": "ctrl+shift+]",
		"command": "-markdown.extension.editing.toggleHeadingUp",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
	},
	{
		"key": "ctrl+b",
		"command": "-vscode-neovim.ctrl-b",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
	},
	{
		"key": "ctrl+d",
		"command": "-vscode-neovim.ctrl-d",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
	},
	{
		"key": "ctrl+f",
		"command": "-vscode-neovim.ctrl-f",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
	},
	{
		"key": "ctrl+u",
		"command": "-vscode-neovim.ctrl-u",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
	},
	{
		"key": "alt+h",
		"command": "-git.viewFileHistory"
	},
	{
		"key": "ctrl+alt+y",
		"command": "workbench.action.removeRootFolder"
	},
	{
		"key": "ctrl+shift+;",
		"command": "-breadcrumbs.focus",
		"when": "breadcrumbsPossible && breadcrumbsVisible"
	},
	{
		"key": "ctrl+numpad0",
		"command": "-workbench.action.zoomReset"
	},
	{
		"key": "ctrl+shift+oem_plus",
		"command": "workbench.action.zoomIn"
	},
	{
		"key": "ctrl+numpad_add",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "ctrl+shift+oem_minus",
		"command": "workbench.action.zoomOut"
	},
	{
		"key": "ctrl+numpad_subtract",
		"command": "-workbench.action.zoomOut"
	},
	{
		"key": "pageup",
		"command": "-workbench.action.interactivePlayground.pageUp",
		"when": "interactivePlaygroundFocus && !editorTextFocus"
	},
	{
		"key": "pagedown",
		"command": "-workbench.action.interactivePlayground.pageDown",
		"when": "interactivePlaygroundFocus && !editorTextFocus"
	},
	{
		"key": "shift+alt+c",
		"command": "scrollPageDown",
		"when": "!listFocus && !panelFocus"
	},
	{
		"key": "shift+alt+x",
		"command": "scrollPageUp",
		"when": "!listFocus && !panelFocus"
	},
	{
		"key": "ctrl+; e",
		"command": "workbench.action.editor.changeEncoding"
	},
	{
		"key": "ctrl+; i",
		"command": "workbench.action.editor.changeEOL"
	},
	{
		"key": "ctrl+; s",
		"command": "editor.action.indentUsingSpaces"
	},
	{
		"key": "ctrl+; t",
		"command": "editor.action.indentUsingTabs"
	},
	{
		"key": "ctrl+z",
		"command": "undo",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.mode != 'insert'"
	},
	{
		"key": "ctrl+g",
		"command": "vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.init && neovim.mode == 'insert'",
		"args": "<C-g>"
	},
	{
		"key": "ctrl+q",
		"command": "vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.init && neovim.mode == 'insert'",
		"args": "<C-q>"
	},
	{
		"key": "ctrl+q",
		"command": "vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'",
		"args": "<C-q>"
	},
	{
		"key": "Enter",
		"command": "vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'",
		"args": "<CR>"
	},
	{
		"key": "ctrl+y",
		"command": "-vscode-neovim.ctrl-y",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
	},
	{
		"key": "ctrl+7",
		"command": "notifications.focusToasts",
		"when": "notificationToastsVisible && !notificationFocus"
	},
	{
		"key": "g",
		"command": "notifications.focusFirstToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "home",
		"command": "-notifications.focusFirstToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "shift+g",
		"command": "notifications.focusLastToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "end",
		"command": "-notifications.focusLastToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "j",
		"command": "notifications.focusNextToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "down",
		"command": "-notifications.focusNextToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "k",
		"command": "notifications.focusPreviousToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "up",
		"command": "-notifications.focusPreviousToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "ctrl+i",
		"command": "-editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
	},
	{
		"key": "ctrl+q",
		"command": "-workbench.action.quickOpenView"
	},
	{
		"key": "ctrl+w",
		"command": "-workbench.action.closeGroup",
		"when": "activeEditorGroupEmpty && multipleEditorGroups"
	},
	{
		"key": "ctrl+space",
		"command": "-editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
	},
	{
		"key": "ctrl+space",
		"command": "-focusSuggestion",
		"when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+k ctrl+k",
		"command": "-editor.action.defineKeybinding",
		"when": "resource == 'vscode-userdata:/c%3A/Users/serge/AppData/Roaming/Code/User/keybindings.json'"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "-git.revertSelectedRanges",
		"when": "isInDiffEditor && !operationInProgress"
	},
	{
		"key": "ctrl+k ctrl+alt+s",
		"command": "-git.stageSelectedRanges",
		"when": "isInDiffEditor && !operationInProgress"
	},
	{
		"key": "ctrl+k ctrl+n",
		"command": "-git.unstageSelectedRanges",
		"when": "isInDiffEditor && !operationInProgress"
	},
	{
		"key": "ctrl+k v",
		"command": "-markdown.showPreviewToSide",
		"when": "!notebookEditorFocused && editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+k ctrl+c",
		"command": "-notebook.cell.collapseCellInput",
		"when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
	},
	{
		"key": "ctrl+k t",
		"command": "-notebook.cell.collapseCellOutput",
		"when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
	},
	{
		"key": "ctrl+k ctrl+c",
		"command": "-notebook.cell.expandCellInput",
		"when": "notebookCellInputIsCollapsed && notebookCellListFocused"
	},
	{
		"key": "ctrl+k t",
		"command": "-notebook.cell.expandCellOutput",
		"when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
	},
	{
		"key": "ctrl+k ctrl+shift+\\",
		"command": "-notebook.cell.split",
		"when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
	},
	{
		"key": "ctrl+k ctrl+t",
		"command": "-workbench.action.selectTheme"
	},
	{
		"key": "ctrl+k ctrl+k",
		"command": "-editor.action.selectFromAnchorToCursor",
		"when": "editorTextFocus && selectionAnchorSet"
	},
	{
		"key": "ctrl+k ctrl+b",
		"command": "-editor.action.setSelectionAnchor",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-editor.action.showHover",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+k ctrl+l",
		"command": "-editor.toggleFold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+shift+w",
		"command": "-workbench.action.closeAllGroups"
	},
	{
		"key": "ctrl+k u",
		"command": "-workbench.action.closeUnmodifiedEditors"
	},
	{
		"key": "ctrl+k ctrl+shift+\\",
		"command": "-workbench.action.joinEditorInGroup",
		"when": "sideBySideEditorActive"
	},
	{
		"key": "ctrl+k enter",
		"command": "-workbench.action.keepEditor"
	},
	{
		"key": "ctrl+k down",
		"command": "-workbench.action.moveActiveEditorGroupDown"
	},
	{
		"key": "ctrl+k right",
		"command": "-workbench.action.moveActiveEditorGroupRight"
	},
	{
		"key": "ctrl+k up",
		"command": "-workbench.action.moveActiveEditorGroupUp"
	},
	{
		"key": "ctrl+k ctrl+shift+\\",
		"command": "-workbench.action.splitEditorInGroup",
		"when": "activeEditorCanSplitInGroup"
	},
	{
		"key": "ctrl+k ctrl+\\",
		"command": "-workbench.action.splitEditorOrthogonal"
	},
	{
		"key": "ctrl+k z",
		"command": "-workbench.action.toggleZenMode"
	},
	{
		"key": "ctrl+k f2",
		"command": "-togglePeekWidgetFocus",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},
	{
		"key": "ctrl+k down",
		"command": "-views.moveViewDown",
		"when": "focusedView != ''"
	},
	{
		"key": "ctrl+k right",
		"command": "-views.moveViewRight",
		"when": "focusedView != ''"
	},
	{
		"key": "ctrl+k up",
		"command": "-views.moveViewUp",
		"when": "focusedView != ''"
	},
	{
		"key": "ctrl+k shift+o",
		"command": "-workbench.action.compareEditor.openSide",
		"when": "inDiffEditor"
	},
	{
		"key": "ctrl+k r",
		"command": "-workbench.action.files.revealActiveFileInWindows"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-workbench.action.showTreeHover",
		"when": "customTreeView && listFocus && !inputFocus"
	},
	{
		"key": "shift+escape",
		"command": "-workbench.action.closeQuickOpen",
		"when": "inQuickOpen"
	},
	{
		"key": "alt+j",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "alt+k",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},
	{
		"key": "tab",
		"command": "workbench.action.acceptSelectedQuickOpenItem",
		"when": "inQuickOpen"
	},
	{
		"key": "alt+f8",
		"command": "-testing.goToNextMessage",
		"when": "editorFocus && testing.isPeekVisible"
	},
	{
		"key": "shift+alt+f8",
		"command": "-testing.goToPreviousMessage",
		"when": "editorFocus && testing.isPeekVisible"
	},
	{
		"key": "ctrl+; a",
		"command": "-testing.runAll"
	},
	{
		"key": "ctrl+; c",
		"command": "-testing.runAtCursor",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+; f",
		"command": "-testing.runCurrentFile",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+; ctrl+x",
		"command": "-testing.cancelRun"
	},
	{
		"key": "ctrl+3",
		"command": "workbench.view.extension.test"
	},
	{
		"key": "f5",
		"command": "-ahk2.debug",
		"when": "!inDebugMode && editorLangId == 'ahk2' && resourceScheme == 'file'"
	},
	{
		"key": "alt+r alt+a",
		"command": "-dotnet-test-explorer.runAllTests"
	},
	{
		"key": "alt+r alt+c",
		"command": "-dotnet-test-explorer.runTestInContext",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+r alt+r",
		"command": "-dotnet-test-explorer.rerunLastCommand"
	},
	{
		"key": "ctrl+enter",
		"command": "-previewSelectedCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "down",
		"command": "-selectNextCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "up",
		"command": "-selectPrevCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "c",
		"command": "keybindings.editor.showConflicts",
		"when": "inKeybindings && keybindingFocus && !inputFocus"
	},
	{
		"key": "ctrl+g",
		"command": "-workbench.action.terminal.goToRecentDirectory",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+k ctrl+k",
		"command": "-editor.action.defineKeybinding",
		"when": "resource == 'vscode-userdata:/c%3A/Users/serge/AppData/Roaming/Code%20-%20Insiders/User/keybindings.json'"
	},
	{
		"key": "ctrl+r",
		"command": "-workbench.action.terminal.runRecentCommand",
		"when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+b",
		"command": "vscode-neovim.send-cmdline",
		"when": "neovim.mode == 'cmdline_insert' || neovim.mode == 'cmdline_normal' || neovim.mode == 'cmdline_replace'",
		"args": "<C-r>\""
	},
	{
		"key": "ctrl+r w",
		"command": "vscode-neovim.send-cmdline",
		"when": "neovim.mode == 'cmdline_insert' || neovim.mode == 'cmdline_normal' || neovim.mode == 'cmdline_replace'",
		"args": "<C-r>0"
	},
	{
		"key": "ctrl+r ;",
		"command": "vscode-neovim.send-cmdline",
		"when": "neovim.mode == 'cmdline_insert' || neovim.mode == 'cmdline_normal' || neovim.mode == 'cmdline_replace'",
		"args": "<C-r>:"
	},
	{
		"key": "ctrl+; ctrl+l",
		"command": "workbench.action.editor.changeLanguageMode"
	},
	{
		"key": "ctrl+; ctrl+l",
		"command": "-testing.debugLastRun"
	},
	{
		"key": "alt+c",
		"command": "-aws.codeWhisperer",
		"when": "editorTextFocus"
	},
	{
		"key": "alt+l",
		"command": "editor.action.inlineSuggest.showNext",
		"when": "inlineSuggestionVisible && !editorReadonly && neovim.mode == 'insert'"
	},
	{
		"key": "right",
		"command": "-editor.action.inlineSuggest.showNext",
		"when": "CODEWHISPERER_ENABLED && inlineSuggestionVisible && !editorReadonly"
	},
	{
		"key": "alt+h",
		"command": "editor.action.inlineSuggest.showPrevious",
		"when": "inlineSuggestionVisible && !inKeybindings && !inSnippetMode && neovim.mode == 'insert'"
	},
	{
		"key": "left",
		"command": "-editor.action.inlineSuggest.showPrevious",
		"when": "CODEWHISPERER_ENABLED && inlineSuggestionVisible && !editorReadonly"
	},
	{
		"key": "ctrl+right",
		"command": "-editor.action.inlineSuggest.acceptNextWord",
		"when": "inlineSuggestionVisible && !editorReadonly"
	},
	{
		"key": "ctrl+left",
		"command": "-editor.action.inlineSuggest.undo",
		"when": "canUndoInlineSuggestion && !editorReadonly"
	},
	{
		"key": "ctrl+]",
		"command": "-markdown.extension.onIndentLines",
		"when": "editorTextFocus && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "ctrl+[",
		"command": "-markdown.extension.onOutdentLines",
		"when": "editorTextFocus && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "ctrl+.",
		"command": "-editor.action.quickFix",
		"when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
	},
	{
		"key": "escape",
		"command": "keybindings.editor.rejectWhenExpression",
		"when": "inKeybindings && keybindingFocus && whenFocus"
	},
	{
		"key": "capslock",
		"command": "keybindings.editor.rejectWhenExpression",
		"when": "inKeybindings && keybindingFocus && whenFocus"
	},
	{
		"key": "escape",
		"command": "-keybindings.editor.rejectWhenExpression",
		"when": "inKeybindings && whenFocus && !suggestWidgetVisible"
	},
	{
		"key": "enter",
		"command": "keybindings.editor.defineKeybinding",
		"when": "inKeybindings && keybindingFocus && !inputFocus"
	},
	{
		"key": "enter",
		"command": "-keybindings.editor.defineKeybinding",
		"when": "inKeybindings && keybindingFocus && !whenFocus"
	},
	{
		"key": "delete",
		"command": "-keybindings.editor.removeKeybinding",
		"when": "inKeybindings && keybindingFocus && !inputFocus"
	},
	{
		"key": "escape",
		"command": "-closeParameterHints",
		"when": "editorFocus && parameterHintsVisible"
	},
	{
		"key": "ctrl+shift+k",
		"command": "workbench.action.moveEditorToAboveGroup"
	},
	{
		"key": "ctrl+shift+j",
		"command": "workbench.action.moveEditorToBelowGroup"
	},
	{
		"key": "ctrl+shift+h",
		"command": "workbench.action.moveEditorToLeftGroup"
	},
	{
		"key": "ctrl+shift+l",
		"command": "workbench.action.moveEditorToRightGroup"
	},
	{
		"key": "shift+alt+k",
		"command": "workbench.action.focusAboveGroup"
	},
	{
		"key": "shift+alt+j",
		"command": "workbench.action.focusBelowGroup"
	},
	{
		"key": "shift+alt+h",
		"command": "workbench.action.focusLeftGroup",
		"when": ""
	},
	{
		"key": "shift+alt+l",
		"command": "workbench.action.focusRightGroup",
		"when": "!terminalFocus"
	},
	{
		"key": "ctrl+alt+g",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "terminalFocus"
	},
	{
		"key": "shift+alt+f",
		"command": "-filesExplorer.findInFolder",
		"when": "explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus"
	},
	{
		"key": "shift+alt+f",
		"command": "-search.action.restrictSearchToFolder",
		"when": "folderMatchWithResourceFocus && searchViewletVisible"
	},
	{
		"key": "shift+alt+f",
		"command": "workbench.action.decreaseViewHeight"
	},
	{
		"key": "shift+alt+s",
		"command": "workbench.action.decreaseViewWidth"
	},
	{
		"key": "shift+alt+d",
		"command": "workbench.action.increaseViewHeight"
	},
	{
		"key": "shift+alt+g",
		"command": "workbench.action.increaseViewWidth"
	},
	{
		"key": "ctrl+alt+f",
		"command": "workbench.action.moveActiveEditorGroupDown"
	},
	{
		"key": "ctrl+alt+s",
		"command": "workbench.action.moveActiveEditorGroupLeft"
	},
	{
		"key": "ctrl+alt+g",
		"command": "workbench.action.moveActiveEditorGroupRight"
	},
	{
		"key": "ctrl+alt+d",
		"command": "workbench.action.moveActiveEditorGroupUp",
		"when": "!terminalFocus"
	},
	{
		"key": "alt+h",
		"command": "editor.action.showHover",
		"when": "!inKeybindings && neovim.mode != 'insert' && !editorHoverFocused"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-workbench.action.terminal.focusHover",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
	},
	{
		"key": "down",
		"command": "editor.action.scrollDownHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "down",
		"command": "-editor.action.scrollDownHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "h",
		"command": "editor.action.scrollLeftHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "left",
		"command": "-editor.action.scrollLeftHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "l",
		"command": "editor.action.scrollRightHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "right",
		"command": "-editor.action.scrollRightHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "k",
		"command": "editor.action.scrollUpHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "up",
		"command": "-editor.action.scrollUpHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "u",
		"command": "editor.action.pageUpHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "alt+up",
		"command": "-editor.action.pageUpHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "p",
		"command": "editor.action.pageDownHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "alt+down",
		"command": "-editor.action.pageDownHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "i",
		"command": "editor.action.goToTopHover",
		"when": "editorHoverFocused && !inputFocus"
	},
	{
		"key": "ctrl+up",
		"command": "-editor.action.goToTopHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "o",
		"command": "editor.action.goToBottomHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "ctrl+down",
		"command": "-editor.action.goToBottomHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "left",
		"command": "editor.action.scrollLeftHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "right",
		"command": "editor.action.scrollRightHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "up",
		"command": "editor.action.scrollUpHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "j",
		"command": "editor.action.scrollDownHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "escape",
		"command": "-editor.action.inlineSuggest.hide",
		"when": "inlineSuggestionVisible"
	},
	{
		"key": "ctrl+shift+f12",
		"command": "-editor.action.peekImplementation",
		"when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
	},
	{
		"key": "shift+escape",
		"command": "-closeReferenceSearch",
		"when": "inReferenceSearchEditor && !config.editor.stablePeek"
	},
	{
		"key": "capslock",
		"command": "closeReferenceSearch",
		"when": "referenceSearchVisible && !config.editor.stablePeek"
	},
	{
		"key": "escape",
		"command": "hideCodeActionWidget",
		"when": "actionWidgetVisible || codeActionMenuVisible"
	},
	{
		"key": "tab",
		"command": "-jumpToNextSnippetPlaceholder",
		"when": "editorTextFocus && hasNextTabstop && inSnippetMode"
	},
	{
		"key": "shift+tab",
		"command": "-jumpToPrevSnippetPlaceholder",
		"when": "editorTextFocus && hasPrevTabstop && inSnippetMode"
	},
	{
		"key": "delete",
		"command": "keybindings.editor.removeKeybinding",
		"when": "inKeybindings && keybindingFocus && !inputFocus"
	},
	{
		"key": "ctrl+shift+v",
		"command": "-html.showPreview",
		"when": "editorLangId == 'html'"
	},
	{
		"key": "ctrl+k v",
		"command": "-html.showPreviewToSide",
		"when": "editorLangId == 'html'"
	},
	{
		"key": "ctrl+k w",
		"command": "-html.showInBrowser",
		"when": "editorLangId == 'html'"
	},
	{
		"key": "ctrl+; v",
		"command": "html.showPreview",
		"when": "editorLangId == 'html'"
	},
	{
		"key": "ctrl+; v",
		"command": "markdown.showPreview",
		"when": "editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+; shift+v",
		"command": "html.showInBrowser",
		"when": "editorLangId == 'html'"
	},
	{
		"key": "ctrl+9",
		"command": "workbench.action.focusQuickOpen"
	},
	{
		"key": "alt+l",
		"command": "jumpToNextSnippetPlaceholder",
		"when": "inSnippetMode && !inKeybindings && neovim.mode == 'insert'"
	},
	{
		"key": "alt+h",
		"command": "jumpToPrevSnippetPlaceholder",
		"when": "inSnippetMode && !inKeybindings && neovim.mode == 'insert'"
	},
	{
		"key": "alt+]",
		"command": "workbench.action.compareEditor.nextChange",
		"when": "textCompareEditorVisible"
	},
	{
		"key": "alt+f5",
		"command": "-workbench.action.compareEditor.nextChange",
		"when": "textCompareEditorVisible"
	},
	{
		"key": "alt+[",
		"command": "workbench.action.compareEditor.previousChange",
		"when": "textCompareEditorVisible"
	},
	{
		"key": "shift+alt+f5",
		"command": "-workbench.action.compareEditor.previousChange",
		"when": "textCompareEditorVisible"
	},
	{
		"key": "ctrl+; g",
		"command": "workbench.action.joinAllGroups"
	},
	{
		"key": "ctrl+alt+a",
		"command": "workbench.action.toggleEditorGroupLayout"
	},
	{
		"key": "ctrl+shift+[",
		"command": "workbench.action.toggleFullScreen"
	},
	{
		"key": "ctrl+n",
		"command": "workbench.action.files.newUntitledFile",
		"when": "neovim.mode != 'insert'"
	},
	{
		"key": "ctrl+alt+[",
		"command": "workbench.action.toggleTabsVisibility"
	},
	{
		"key": "space",
		"command": "-breadcrumbs.revealFocused",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "shift+tab",
		"command": "breadcrumbs.revealFocusedFromTreeAside",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "tab",
		"command": "-acceptSelectedSuggestion",
		"when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus && !inSnippetMode"
	},
	{
		"key": "tab",
		"command": "vscode-neovim.send",
		"when": "neovim.recording || editorTextFocus && neovim.init && neovim.mode != 'insert'"
	},
	{
		"key": "tab",
		"command": "-vscode-neovim.send",
		"when": "neovim.recording || editorTextFocus && neovim.init && neovim.mode != 'insert'"
	},
	{
		"key": "alt+q",
		"command": "workbench.action.focusActiveEditorGroup"
	},
	{
		"key": "shift+alt+o",
		"command": "-editor.action.organizeImports",
		"when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
	},
	{
		"key": "ctrl+f4",
		"command": "-workbench.action.closeActiveEditor"
	},
	{
		"key": "ctrl+k ctrl+\\",
		"command": "-workbench.action.splitEditorDown"
	},
	{
		"key": "ctrl+k ctrl+\\",
		"command": "-workbench.action.splitEditorLeft"
	},
	{
		"key": "ctrl+k ctrl+\\",
		"command": "-workbench.action.splitEditorRight"
	},
	{
		"key": "ctrl+k ctrl+\\",
		"command": "-workbench.action.splitEditorUp"
	},
	{
		"key": "ctrl+alt+k",
		"command": "workbench.action.splitEditorToAboveGroup"
	},
	{
		"key": "ctrl+alt+j",
		"command": "workbench.action.splitEditorToBelowGroup"
	},
	{
		"key": "ctrl+alt+h",
		"command": "workbench.action.splitEditorToLeftGroup"
	},
	{
		"key": "ctrl+alt+l",
		"command": "workbench.action.splitEditorToRightGroup"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "-workbench.action.chat.runInTerminal",
		"when": "hasChatProvider"
	},
	{
		"key": "ctrl+alt+o",
		"command": "-workbench.action.remote.showMenu"
	},
	{
		"key": "ctrl+alt+backspace",
		"command": "-editor.action.removeBrackets",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+alt+r",
		"command": "-workbench.action.terminal.runRecentCommand",
		"when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
	},
	{
		"key": "shift+alt+[",
		"command": "breadcrumbs.toggle"
	},
	{
		"key": "alt+c",
		"command": "scrollLineDown",
		"when": "!listFocus && !panelFocus"
	},
	{
		"key": "shift+a",
		"command": "explorer.newFolder",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "alt+k",
		"command": "workbench.action.showAllEditorsByMostRecentlyUsed",
		"when": "!inQuickOpen && neovim.mode != 'insert'"
	},
	{
		"key": "ctrl+space",
		"command": "-toggleSuggestionDetails",
		"when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "alt+/",
		"command": "hideCodeActionWidget",
		"when": "actionWidgetVisible || codeActionMenuVisible"
	},
	{
		"key": "space",
		"command": "acceptSelectedCodeAction",
		"when": "actionWidgetVisible || codeActionMenuVisible"
	},
	{
		"key": "alt+'",
		"command": "closeParameterHints",
		"when": "editorFocus && parameterHintsVisible"
	},
	{
		"key": "shift+escape",
		"command": "-closeParameterHints",
		"when": "editorFocus && parameterHintsVisible"
	},
	{
		"key": "a",
		"command": "explorer.newFile",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "a",
		"command": "-explorer.newFile",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "alt+enter",
		"command": "explorer.openToSide",
		"when": "explorerViewletFocus && foldersViewVisible && !inputFocus"
	},
	{
		"key": "ctrl+enter",
		"command": "-explorer.openToSide",
		"when": "explorerViewletFocus && foldersViewVisible && !inputFocus"
	},
	{
		"key": "home",
		"command": "firstCompressedFolder",
		"when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus"
	},
	{
		"key": "home",
		"command": "-firstCompressedFolder",
		"when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus"
	},
	{
		"key": "end",
		"command": "lastCompressedFolder",
		"when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus"
	},
	{
		"key": "end",
		"command": "-lastCompressedFolder",
		"when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus"
	},
	{
		"key": "f",
		"command": "workbench.files.action.collapseExplorerFolders",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "l",
		"command": "-list.select",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "h",
		"command": "-list.collapse",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "left",
		"command": "-notebook.fold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "h",
		"command": "list.collapse",
		"when": "listFocus && treeElementCanCollapse && !inputFocus || listFocus && treeElementHasParent && !inputFocus && !breadcrumbsActive"
	},
	{
		"key": "right",
		"command": "-notebook.unfold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "tab",
		"command": "list.toggleExpand",
		"when": "breadcrumbsActive"
	},
	{
		"key": "tab",
		"command": "explorer.openAndPassFocus",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
	},
	{
		"key": "ctrl+r w",
		"command": "-vscode-neovim.send-cmdline",
		"when": "neovim.mode == 'cmdline_insert' || neovim.mode == 'cmdline_normal' || neovim.mode == 'cmdline_replace'"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "-workbench.action.chat.runInTerminal",
		"when": "hasChatProvider && inChat"
	},
	{
		"key": "ctrl+down",
		"command": "-workbench.action.terminal.accessibleBufferGoToNextCommand",
		"when": "terminalAccessibleBufferFocus || terminalAccessibleBufferFocus && terminalHasBeenCreated || terminalAccessibleBufferFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+up",
		"command": "-workbench.action.terminal.accessibleBufferGoToPreviousCommand",
		"when": "terminalAccessibleBufferFocus && terminalHasBeenCreated || terminalAccessibleBufferFocus && terminalProcessSupported"
	},
	{
		"key": "shift+tab",
		"command": "-workbench.action.terminal.focusAccessibleBuffer",
		"when": "accessibilityModeEnabled && terminalHasBeenCreated && terminalTabFocusMode && !terminalAccessibleBufferFocus || accessibilityModeEnabled && terminalProcessSupported && terminalTabFocusMode && !terminalAccessibleBufferFocus"
	},
	{
		"key": "ctrl+shift+o",
		"command": "-workbench.action.terminal.navigateAccessibleBuffer",
		"when": "terminalAccessibleBufferFocus && terminalHasBeenCreated || terminalAccessibleBufferFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+o",
		"command": "-workbench.action.terminal.openDetectedLink",
		"when": "terminalFocus && terminalHasBeenCreated"
	},
	{
		"key": "ctrl+end",
		"command": "-workbench.action.terminal.scrollToBottom",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "ctrl+home",
		"command": "-workbench.action.terminal.scrollToTop",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "shift+alt+r",
		"command": "workbench.action.terminal.newInActiveWorkspace"
	},
	{
		"key": "shift+alt+w",
		"command": "workbench.action.terminal.killAll",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+.",
		"command": "-editor.changeDropType",
		"when": "dropWidgetVisible"
	},
	{
		"key": "ctrl+.",
		"command": "-editor.changePasteType",
		"when": "pasteWidgetVisible"
	},
	{
		"key": "n",
		"command": "explorer.newFile",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "shift+n",
		"command": "explorer.newFolder",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "o",
		"command": "filesExplorer.openFilePreserveFocus",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
	},
	{
		"key": "d",
		"command": "moveFileToTrash",
		"when": "explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "d",
		"command": "-deleteFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "alt+c",
		"command": "list.scrollDown",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "ctrl+down",
		"command": "-list.scrollDown",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "alt+x",
		"command": "list.scrollUp",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "ctrl+up",
		"command": "-list.scrollUp",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "alt+j",
		"command": "selectNextCodeAction",
		"when": "actionWidgetVisible || codeActionMenuVisible"
	},
	{
		"key": "alt+k",
		"command": "selectPrevCodeAction",
		"when": "actionWidgetVisible || codeActionMenuVisible"
	},
	{
		"key": "alt+h",
		"command": "editor.action.escapeFocusHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "capslock",
		"command": "editor.action.escapeFocusHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "l",
		"command": "list.toggleExpand",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "o",
		"command": "notification.acceptPrimaryAction",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "ctrl+shift+a",
		"command": "-notification.acceptPrimaryAction",
		"when": "notificationToastsVisible"
	},
	{
		"key": "ctrl+e",
		"command": "-cursorEnd",
		"when": "neovim.mode == 'cmdline_insert' || neovim.mode == 'cmdline_normal' || neovim.mode == 'cmdline_replace'"
	},
	{
		"key": "l",
		"command": "breadcrumbs.focusNext",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "escape",
		"command": "vscode-neovim.escape",
		"when": "editorTextFocus && neovim.init && !markersNavigationVisible"
	},
	{
		"key": "capslock",
		"command": "vscode-neovim.escape",
		"when": "editorTextFocus && neovim.init && !markersNavigationVisible"
	},
	{
		"key": "escape",
		"command": "-vscode-neovim.escape",
		"when": "editorTextFocus && neovim.init && neovim.mode != 'normal'"
	},
	{
		"key": "ctrl+/",
		"command": "workbench.action.focusOtherSideEditor"
	},
	{
		"key": "ctrl+[IntlBackslash]",
		"command": "-vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
	},
	{
		"key": "ctrl+/",
		"command": "-vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
	},
	{
		"key": "ctrl+shift+j",
		"command": "-rust-analyzer.joinLines",
		"when": "editorTextFocus && editorLangId == 'rust'"
	},
	{
		"key": "ctrl+shift+u",
		"command": "-rust-analyzer.parentModule",
		"when": "editorTextFocus && editorLangId == 'rust'"
	},
	{
		"key": "ctrl+shift+down",
		"command": "-workbench.action.terminal.scrollDown",
		"when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "shift+pagedown",
		"command": "-workbench.action.terminal.scrollDownPage",
		"when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "shift+end",
		"command": "-workbench.action.terminal.scrollToBottom",
		"when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "shift+home",
		"command": "-workbench.action.terminal.scrollToTop",
		"when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "ctrl+shift+up",
		"command": "-workbench.action.terminal.scrollUp",
		"when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "shift+pageup",
		"command": "-workbench.action.terminal.scrollUpPage",
		"when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "alt+x",
		"command": "scrollLineUp"
	},
	{
		"key": "shift+escape",
		"command": "-closeMarkersNavigation",
		"when": "editorFocus && markersNavigationVisible"
	},
	{
		"key": "capslock",
		"command": "closeMarkersNavigation",
		"when": "editorFocus && markersNavigationVisible"
	},
	{
		"key": "y y",
		"command": "filesExplorer.copy",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
	},
	{
		"key": "y",
		"command": "-filesExplorer.copy",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
	},
	{
		"key": "ctrl+alt+c",
		"command": "-copyFilePath",
		"when": "!editorFocus"
	},
	{
		"key": "ctrl+k ctrl+alt+c",
		"command": "-copyFilePath",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+shift+alt+c",
		"command": "-copyRelativeFilePath",
		"when": "!editorFocus"
	},
	{
		"key": "ctrl+k ctrl+shift+alt+c",
		"command": "-copyRelativeFilePath",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+alt+c",
		"command": "-search.action.copyPath",
		"when": "fileMatchOrFolderMatchWithResourceFocus"
	},
	{
		"key": "alt+.",
		"command": "workbench.action.terminal.focusNext",
		"when": "terminalFocus"
	},
	{
		"key": "alt+,",
		"command": "workbench.action.terminal.focusPrevious",
		"when": "terminalFocus"
	},
	{
		"key": "tab",
		"command": "-editor.action.inlineSuggest.commit",
		"when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus && !suggestWidgetVisible"
	},
	{
		"key": "down",
		"command": "list.focusDown",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "ctrl+escape",
		"command": "-workbench.action.focusActiveEditorGroup",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+w ctrl+w",
		"command": "-workbench.action.focusNextGroup",
		"when": "!editorTextFocus && !filesExplorerFocus && !inSearchEditor && !replaceInputBoxFocus && !searchViewletFocus && !terminalFocus"
	},
	{
		"key": "ctrl+w ctrl+w",
		"command": "-workbench.action.focusFirstEditorGroup",
		"when": "!editorTextFocus && !filesExplorerFocus && !inSearchEditor && !replaceInputBoxFocus && !searchViewletFocus && !terminalFocus"
	},
	{
		"key": "alt+p",
		"command": "editor.action.inlineSuggest.hide",
		"when": "inlineSuggestionVisible && textInputFocus"
	},
	{
		"key": "alt+meta+j",
		"command": "-notebook.cell.joinBelow",
		"when": "notebookEditorFocused"
	},
	{
		"key": "shift+alt+meta+j",
		"command": "-notebook.cell.joinAbove",
		"when": "notebookEditorFocused"
	},
	{
		"key": "ctrl+i",
		"command": "-focusSuggestion",
		"when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+down",
		"command": "-selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-selectNextPageSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+pageup",
		"command": "-selectPrevPageSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+up",
		"command": "-selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "down",
		"command": "-notebook.focusNextEditor",
		"when": "config.notebook.navigation.allowNavigateToSurroundingCells && inlineChatFocused && inlineChatInnerCursorLast && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
	},
	{
		"key": "down",
		"command": "-notebook.focusNextEditor",
		"when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
	},
	{
		"key": "z shift+c",
		"command": "-list.collapseAllToFocus",
		"when": "!editorTextFocus && !inputFocus"
	},
	{
		"key": "alt+p",
		"command": "editor.action.inlineSuggest.trigger",
		"when": "textInputFocus && !inlineSuggestionVisible && neovim.mode == 'insert'"
	},
	{
		"key": "alt+h",
		"command": "editor.action.inlineSuggest.trigger",
		"when": "textInputFocus && neovim.mode == 'insert' && !inlineSuggestionVisible"
	},
	{
		"key": "alt+l",
		"command": "editor.action.inlineSuggest.trigger",
		"when": "textInputFocus && neovim.mode == 'insert' && !inlineSuggestionVisible"
	},
	{
		"key": "alt+;",
		"command": "editor.action.inlineSuggest.commit",
		"when": "textInputFocus && neovim.mode == 'insert'"
	},
	{
		"key": "ctrl+shift+alt+i",
		"command": "-chat.action.askQuickQuestion",
		"when": "hasChatProvider"
	},
	{
		"key": "alt+'",
		"command": "editor.action.inlineSuggest.acceptNextWord",
		"when": "inlineSuggestionVisible && neovim.mode == 'insert'"
	},
	{
		"key": "shift+alt+.",
		"command": "-editor.action.autoFix",
		"when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
	},
	{
		"key": "ctrl+l",
		"command": "-vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
	}
]
