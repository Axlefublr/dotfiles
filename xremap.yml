# /usr/include/linux/input-event-codes.h
virtual_modifiers:
  - CapsLock
default_mode: default
modmap:
  - remap:
      Esc: Pause
      Tab: Esc

keymap:
  - name: Firefox
    exact_match: true
    mode: default
    application:
      only: firefox
    remap:
      # alt-based hotkeys are possible thanks to the ui.key.menuAccessKeyFocuses option
      # [[sort on]]
      Alt_L-Apostrophe: ctrl-l # focus address bar
      Alt_L-Comma: up
      Alt_L-Dot: down
      Alt_L-Semicolon: shift-f1 # (auto tab discard) discard all other tabs
      Alt_L-Slash: ctrl-f # find in this page
      Alt_L-c: ctrl-shift-c # inspect element
      Alt_L-e: f4 # (sidebery) open a new tab after the active tab (needed to open a new tab after the current one, rather than at the end)
      Alt_L-f: f1 # extension: dark reader
      Alt_L-h: ctrl-pageup # go one tab to the left
      Alt_L-l: ctrl-pagedown # go one tab to the right
      Alt_L-n: ctrl-g # find again
      Alt_L-s: alt-home # home
      Alt_L-w: ctrl-w # close tab
      Ctrl-Alt_L-d: ctrl-equal # zoom out
      Ctrl-Alt_L-f: ctrl-0 # zoom reset
      Ctrl-Alt_L-h: ctrl-shift-pageup # move tab left
      Ctrl-Alt_L-l: ctrl-shift-pagedown # move tab right
      Ctrl-Alt_L-s: ctrl-minus # zoom in
      Ctrl-i: alt-right # history forward
      Ctrl-o: alt-left # history back
      Shift-Alt_L-h: alt-1 # go to tab 1
      Shift-Alt_L-l: alt-9 # go to last tab
      Shift-Alt_L-n: ctrl-shift-g # find previous
      # [[sort off]]

  - name: Krita!
    exact_match: true
    application:
      only: krita
    remap:
      CapsLock-e: ctrl-shift-z

  - name: Anki!
    exact_match: true
    application:
      only: Anki
    remap:
      # [[sort on]]
      # Ctrl-Shift-i: { launch: [fish, -c, 'anki_import'] }
      Alt_L-j: { launch: [fish, -c, 'anki_deck Once'] }
      Alt_L-k: { launch: [fish, -c, 'anki_deck Freq'] }
      CapsLock-Space: { launch: [fish, -c, special_anki_edit_action] }
      Ctrl-Semicolon: ctrl-shift-x
      Ctrl-j: down
      Ctrl-k: up
      # [[sort off]]

  - name: Term!
    exact_match: true
    application:
      only: [foot, footclient]
    remap:
      # [[sort on]]
      CapsLock-Alt_L-Semicolon: ctrl-w
      # [[sort off]]

  - name: Arr
    mode: arrows
    remap:
      CapsLock-f: [{ set_mode: default }, { launch: [fish, -c, cursor_mode_disable] }]
      h: left
      j: down
      k: up
      l: right
      u: pageup
      i: home
      o: end
      p: pagedown

  - name: Any! chord
    exact_match: true
    remap:
      CapsLock-Apostrophe:
        remap:
          f: { launch: [fish, -c, 'runner_link open'] }
          s: { launch: [fish, -c, 'runner_link'] }
          d: { launch: [fish, -c, 'xdg-open (ypoc) ; ensure_browser'] }

          k: { launch: [fish, -c, batch-link-downloader] }

          a: { launch: [fish, -c, runner_interactive_unicode]}
          e: { launch: [fish, -c, runner_symbol_name] }

          i: { launch: [fish, -c, write_window_info] }

          n: { launch: [fish, -c, anki_add_card] }

          w:
            remap:
              q: { launch: [fish, -c, 'bookmark_open q'] }
              w: { launch: [fish, -c, 'bookmark_open w'] }
              e: { launch: [fish, -c, 'bookmark_open e'] }
              r: { launch: [fish, -c, 'bookmark_open r'] }
              t: { launch: [fish, -c, 'bookmark_open t'] }
              y: { launch: [fish, -c, 'bookmark_open y'] }
              u: { launch: [fish, -c, 'bookmark_open u'] }
              i: { launch: [fish, -c, 'bookmark_open i'] }
              o: { launch: [fish, -c, 'bookmark_open o'] }
              p: { launch: [fish, -c, 'bookmark_open p'] }
              LeftBrace: { launch: [fish, -c, 'bookmark_open leftbrace'] }
              RightBrace: { launch: [fish, -c, 'bookmark_open rightbrace'] }
              a: { launch: [fish, -c, 'bookmark_open a'] }
              s: { launch: [fish, -c, 'bookmark_open s'] }
              d: { launch: [fish, -c, 'bookmark_open d'] }
              f: { launch: [fish, -c, 'bookmark_open f'] }
              g: { launch: [fish, -c, 'bookmark_open g'] }
              h: { launch: [fish, -c, 'bookmark_open h'] }
              j: { launch: [fish, -c, 'bookmark_open j'] }
              k: { launch: [fish, -c, 'bookmark_open k'] }
              l: { launch: [fish, -c, 'bookmark_open l'] }
              Semicolon: { launch: [fish, -c, 'bookrmark_open semicolon'] }
              Apostrophe: { launch: [fish, -c, 'bookrmark_open apostrophe'] }
              z: { launch: [fish, -c, 'bookmark_open z'] }
              x: { launch: [fish, -c, 'bookmark_open x'] }
              c: { launch: [fish, -c, 'bookmark_open c'] }
              v: { launch: [fish, -c, 'bookmark_open v'] }
              b: { launch: [fish, -c, 'bookmark_open b'] }
              n: { launch: [fish, -c, 'bookmark_open n'] }
              m: { launch: [fish, -c, 'bookmark_open m'] }
              Comma: { launch: [fish, -c, 'bookmark_open comma'] }
              Dot: { launch: [fish, -c, 'bookmark_open dot'] }
              Slash: { launch: [fish, -c, 'bookmark_open slash'] }
              Shift-q: { launch: [fish, -c, 'bookmark_open Q'] }
              Shift-w: { launch: [fish, -c, 'bookmark_open W'] }
              Shift-e: { launch: [fish, -c, 'bookmark_open E'] }
              Shift-r: { launch: [fish, -c, 'bookmark_open R'] }
              Shift-t: { launch: [fish, -c, 'bookmark_open T'] }
              Shift-y: { launch: [fish, -c, 'bookmark_open Y'] }
              Shift-u: { launch: [fish, -c, 'bookmark_open U'] }
              Shift-i: { launch: [fish, -c, 'bookmark_open I'] }
              Shift-o: { launch: [fish, -c, 'bookmark_open O'] }
              Shift-p: { launch: [fish, -c, 'bookmark_open P'] }
              Shift-LeftBrace: { launch: [fish, -c, 'bookmark_open leftcurl'] }
              Shift-RightBrace: { launch: [fish, -c, 'bookmark_open rightcurl'] }
              Shift-a: { launch: [fish, -c, 'bookmark_open A'] }
              Shift-s: { launch: [fish, -c, 'bookmark_open S'] }
              Shift-d: { launch: [fish, -c, 'bookmark_open D'] }
              Shift-f: { launch: [fish, -c, 'bookmark_open F'] }
              Shift-g: { launch: [fish, -c, 'bookmark_open G'] }
              Shift-h: { launch: [fish, -c, 'bookmark_open H'] }
              Shift-j: { launch: [fish, -c, 'bookmark_open J'] }
              Shift-k: { launch: [fish, -c, 'bookmark_open K'] }
              Shift-l: { launch: [fish, -c, 'bookmark_open L'] }
              Shift-Semicolon: { launch: [fish, -c, 'bookmark_open colon'] }
              Shift-Apostrophe: { launch: [fish, -c, 'bookmark_open doublequote'] }
              Shift-z: { launch: [fish, -c, 'bookmark_open Z'] }
              Shift-x: { launch: [fish, -c, 'bookmark_open X'] }
              Shift-c: { launch: [fish, -c, 'bookmark_open C'] }
              Shift-v: { launch: [fish, -c, 'bookmark_open V'] }
              Shift-b: { launch: [fish, -c, 'bookmark_open B'] }
              Shift-n: { launch: [fish, -c, 'bookmark_open N'] }
              Shift-m: { launch: [fish, -c, 'bookmark_open M'] }
              Shift-Comma: { launch: [fish, -c, 'bookmark_open leftpointy'] }
              Shift-Dot: { launch: [fish, -c, 'bookmark_open rightpointy'] }
              Shift-Slash: { launch: [fish, -c, 'bookmark_open question'] }
              Super_R-f: { launch: [fish, -c, 'bookmark_open 1'] }
              Super_R-d: { launch: [fish, -c, 'bookmark_open 2'] }
              Super_R-s: { launch: [fish, -c, 'bookmark_open 3'] }
              Super_R-r: { launch: [fish, -c, 'bookmark_open 4'] }
              Super_R-e: { launch: [fish, -c, 'bookmark_open 5'] }
              Super_R-w: { launch: [fish, -c, 'bookmark_open 6'] }
              Super_R-v: { launch: [fish, -c, 'bookmark_open 7'] }
              Super_R-c: { launch: [fish, -c, 'bookmark_open 8'] }
              Super_R-x: { launch: [fish, -c, 'bookmark_open 9'] }
              Super_R-a: { launch: [fish, -c, 'bookmark_open 0'] }
          Shift-w:
            remap:
              q: { launch: [fish, -c, 'bookmark_set q "$(ypoc)"'] }
              w: { launch: [fish, -c, 'bookmark_set w "$(ypoc)"'] }
              e: { launch: [fish, -c, 'bookmark_set e "$(ypoc)"'] }
              r: { launch: [fish, -c, 'bookmark_set r "$(ypoc)"'] }
              t: { launch: [fish, -c, 'bookmark_set t "$(ypoc)"'] }
              y: { launch: [fish, -c, 'bookmark_set y "$(ypoc)"'] }
              u: { launch: [fish, -c, 'bookmark_set u "$(ypoc)"'] }
              i: { launch: [fish, -c, 'bookmark_set i "$(ypoc)"'] }
              o: { launch: [fish, -c, 'bookmark_set o "$(ypoc)"'] }
              p: { launch: [fish, -c, 'bookmark_set p "$(ypoc)"'] }
              LeftBrace: { launch: [fish, -c, 'bookmark_set leftbrace "$(ypoc)"'] }
              RightBrace: { launch: [fish, -c, 'bookmark_set rightbrace "$(ypoc)"'] }
              a: { launch: [fish, -c, 'bookmark_set a "$(ypoc)"'] }
              s: { launch: [fish, -c, 'bookmark_set s "$(ypoc)"'] }
              d: { launch: [fish, -c, 'bookmark_set d "$(ypoc)"'] }
              f: { launch: [fish, -c, 'bookmark_set f "$(ypoc)"'] }
              g: { launch: [fish, -c, 'bookmark_set g "$(ypoc)"'] }
              h: { launch: [fish, -c, 'bookmark_set h "$(ypoc)"'] }
              j: { launch: [fish, -c, 'bookmark_set j "$(ypoc)"'] }
              k: { launch: [fish, -c, 'bookmark_set k "$(ypoc)"'] }
              l: { launch: [fish, -c, 'bookmark_set l "$(ypoc)"'] }
              Semicolon: { launch: [fish, -c, 'bookrmark_set semicolon "$(ypoc)"'] }
              Apostrophe: { launch: [fish, -c, 'bookrmark_set apostrophe "$(ypoc)"'] }
              z: { launch: [fish, -c, 'bookmark_set z "$(ypoc)"'] }
              x: { launch: [fish, -c, 'bookmark_set x "$(ypoc)"'] }
              c: { launch: [fish, -c, 'bookmark_set c "$(ypoc)"'] }
              v: { launch: [fish, -c, 'bookmark_set v "$(ypoc)"'] }
              b: { launch: [fish, -c, 'bookmark_set b "$(ypoc)"'] }
              n: { launch: [fish, -c, 'bookmark_set n "$(ypoc)"'] }
              m: { launch: [fish, -c, 'bookmark_set m "$(ypoc)"'] }
              Comma: { launch: [fish, -c, 'bookmark_set comma "$(ypoc)}"'] }
              Dot: { launch: [fish, -c, 'bookmark_set dot "$(ypoc)}"'] }
              Slash: { launch: [fish, -c, 'bookmark_set slash "$(ypoc)}"'] }
              Shift-q: { launch: [fish, -c, 'bookmark_set Q "$(ypoc)"'] }
              Shift-w: { launch: [fish, -c, 'bookmark_set W "$(ypoc)"'] }
              Shift-e: { launch: [fish, -c, 'bookmark_set E "$(ypoc)"'] }
              Shift-r: { launch: [fish, -c, 'bookmark_set R "$(ypoc)"'] }
              Shift-t: { launch: [fish, -c, 'bookmark_set T "$(ypoc)"'] }
              Shift-y: { launch: [fish, -c, 'bookmark_set Y "$(ypoc)"'] }
              Shift-u: { launch: [fish, -c, 'bookmark_set U "$(ypoc)"'] }
              Shift-i: { launch: [fish, -c, 'bookmark_set I "$(ypoc)"'] }
              Shift-o: { launch: [fish, -c, 'bookmark_set O "$(ypoc)"'] }
              Shift-p: { launch: [fish, -c, 'bookmark_set P "$(ypoc)"'] }
              Shift-LeftBrace: { launch: [fish, -c, 'bookmark_set leftcurl "$(ypoc)"'] }
              Shift-RightBrace: { launch: [fish, -c, 'bookmark_set rightcurl "$(ypoc)"'] }
              Shift-a: { launch: [fish, -c, 'bookmark_set A "$(ypoc)"'] }
              Shift-s: { launch: [fish, -c, 'bookmark_set S "$(ypoc)"'] }
              Shift-d: { launch: [fish, -c, 'bookmark_set D "$(ypoc)"'] }
              Shift-f: { launch: [fish, -c, 'bookmark_set F "$(ypoc)"'] }
              Shift-g: { launch: [fish, -c, 'bookmark_set G "$(ypoc)"'] }
              Shift-h: { launch: [fish, -c, 'bookmark_set H "$(ypoc)"'] }
              Shift-j: { launch: [fish, -c, 'bookmark_set J "$(ypoc)"'] }
              Shift-k: { launch: [fish, -c, 'bookmark_set K "$(ypoc)"'] }
              Shift-l: { launch: [fish, -c, 'bookmark_set L "$(ypoc)"'] }
              Shift-Semicolon: { launch: [fish, -c, 'bookmark_set colon "$(ypoc)"'] }
              Shift-Apostrophe: { launch: [fish, -c, 'bookmark_set doublequote "$(ypoc)"'] }
              Shift-z: { launch: [fish, -c, 'bookmark_set Z "$(ypoc)"'] }
              Shift-x: { launch: [fish, -c, 'bookmark_set X "$(ypoc)"'] }
              Shift-c: { launch: [fish, -c, 'bookmark_set C "$(ypoc)"'] }
              Shift-v: { launch: [fish, -c, 'bookmark_set V "$(ypoc)"'] }
              Shift-b: { launch: [fish, -c, 'bookmark_set B "$(ypoc)"'] }
              Shift-n: { launch: [fish, -c, 'bookmark_set N "$(ypoc)"'] }
              Shift-m: { launch: [fish, -c, 'bookmark_set M "$(ypoc)"'] }
              Shift-Comma: { launch: [fish, -c, 'bookmark_set leftpointy "$(ypoc)"'] }
              Shift-Dot: { launch: [fish, -c, 'bookmark_set rightpointy "$(ypoc)"'] }
              Shift-Slash: { launch: [fish, -c, 'bookmark_set question "$(ypoc)"'] }
              Super_R-f: { launch: [fish, -c, 'bookmark_set 1 "$(ypoc)"'] }
              Super_R-d: { launch: [fish, -c, 'bookmark_set 2 "$(ypoc)"'] }
              Super_R-s: { launch: [fish, -c, 'bookmark_set 3 "$(ypoc)"'] }
              Super_R-r: { launch: [fish, -c, 'bookmark_set 4 "$(ypoc)"'] }
              Super_R-e: { launch: [fish, -c, 'bookmark_set 5 "$(ypoc)"'] }
              Super_R-w: { launch: [fish, -c, 'bookmark_set 6 "$(ypoc)"'] }
              Super_R-v: { launch: [fish, -c, 'bookmark_set 7 "$(ypoc)"'] }
              Super_R-c: { launch: [fish, -c, 'bookmark_set 8 "$(ypoc)"'] }
              Super_R-x: { launch: [fish, -c, 'bookmark_set 9 "$(ypoc)"'] }
              Super_R-a: { launch: [fish, -c, 'bookmark_set 0 "$(ypoc)"'] }

  - name: Any!
    exact_match: true
    remap:
      # [[sort on]]
      # Super_L-u: { launch: [fish, -c, runner_notification] }
      Alt_L-Esc: { launch: [fish, -c, ntf_dismiss_old] }
      Alt_L-Pause: { launch: [fish, -c, reboot] }
      Alt_R-a: { launch: [anki] }
      Alt_R-c: { launch: [fish, -c, 'footclient calcure']}
      Alt_R-e: { launch: [fish, -c, 'footclient bluetui']}
      Alt_R-f: { launch: [firefox]}
      Alt_R-q: { launch: [fish, -c, 'footclient tiptop']}
      Alt_R-s: { launch: [steam-native]}
      Alt_R-t: { launch: [paplay, /home/axlefublr/m/soundeffects/camera-shutter.oga]}
      Alt_R-w: { launch: [footclient, tewi] }
      Alt_R-x: { launch: [fish, -c, 'wlr-randr --output HDMI-A-1 --mode 1920x1080@75 ; niri msg do-screen-transition'] }
      Alt_R-z: { launch: [fuzzel] }
      CapsLock-Alt_L-Enter: { launch: [fish, -c, 'edit_blank_clipboard'] }
      CapsLock-Alt_L-Shift-d: { launch: [fish, -c, media_prev] }
      CapsLock-Alt_L-a: { launch: [fish, -c, 'toggle_mic_mute'] }
      CapsLock-Alt_L-d: { launch: [fish, -c, media_next] }
      CapsLock-Alt_L-e: { launch: [fish, -c, 'set_volume 0.02+'] }
      CapsLock-Alt_L-v: { launch: [mpv, '--start=0', '--fullscreen', '/home/axlefublr/i/s/original.mp4'] }
      CapsLock-Alt_L-w: { launch: [fish, -c, 'set_volume 0.02-'] }
      CapsLock-Enter: { launch: [fish, -c, 'edit_clipboard'] }
      CapsLock-a: { launch: [fish, -c, 'toggle_mute'] }
      CapsLock-b: { launch: [wl-kbptr]}
      CapsLock-f: [{ set_mode: arrows }, { launch: [fish, -c, cursor_mode_enable]}]
      CapsLock-t: { launch: [fish, -c, toggle_media] }
      CapsLock-v: { launch: [fish, -c, 'toggle_screen_record'] }
      CapsLock-y: CapsLock # toggle capslock toggle
      Ctrl-Alt_L-Esc: { launch: [fish, -c, ntf_dismiss_all] }
      Pause: { launch: [systemctl, suspend] }
      Shift-Alt_L-Esc: { launch: [fish, -c, ntf_pick_dismiss] }
      Super_L-Alt_L-Semicolon: { launch: [fuzzel] }
      Super_L-Alt_L-u: { launch: [fish, -c, runner_clipboard_append] }
      Super_L-Apostrophe: { launch: [fish, -c, 'clipboard_pick'] }
      Super_L-b: { launch: [fish, -c, 'internet_search'] }
      Super_L-c: { launch: [fish, -c, pick_and_copy_color]}
      Super_L-e: { launch: [fish, -c, 'edit_clipboard_image'] }
      Super_L-i: { launch: [fish, -c, 'runner show'] }
      Super_L-p: { launch: [fish, -c, runner_math] }
      Super_L-u: { launch: [fish, -c, runner_clipboard] }
      Super_L-v: { launch: [wooz]}
      Super_L-w: { launch: [fish, -c, 'show_clipboard_image']}
      Super_R-q: ctrl-shift-u
      Super_R-z: { launch: [fish, -c, runner_symbol] }
      # [[sort off]]

  - name: Any! numbers & special symbols
    exact_match: true
    remap:
      # [[sort on]]
      CapsLock-Alt_L-Comma: shift_r-grave
      CapsLock-Alt_L-j: shift-7
      CapsLock-Alt_L-k: shift-backslash
      CapsLock-Alt_L-p: shift_r-2
      CapsLock-Comma: shift_r-1
      CapsLock-Dot: shift-minus
      CapsLock-LeftBrace: shift-9
      CapsLock-RightBrace: shift-0
      CapsLock-Slash: backslash
      CapsLock-h: shift-6
      CapsLock-i: shift-8
      CapsLock-j: shift-equal
      CapsLock-k: minus
      CapsLock-l: equal
      CapsLock-m: shift_r-5
      CapsLock-o: shift_r-4
      CapsLock-p: shift_r-3
      CapsLock-u: grave
      # [[sort off]]

      # -- for helix -------------------------------------------------------------------------------------
      # [[sort on]]
      CapsLock-Alt_L-LeftBrace: shift-alt-9
      CapsLock-Alt_L-RightBrace: shift-alt-0
      CapsLock-Alt_L-u: alt-grave
      # [[sort off]]

  - name: Any
    remap:
      # [[sort on]]
      CapsLock-Alt_L-Semicolon: ctrl-backspace
      CapsLock-Alt_L-n: shift-tab
      CapsLock-Alt_L-s: ctrl-x
      CapsLock-Ctrl-d: ctrl-shift-v
      CapsLock-Semicolon: backspace
      CapsLock-Shift-d: ctrl-shift-v
      CapsLock-d: ctrl-v
      CapsLock-e: ctrl-y
      CapsLock-g: ctrl-a
      CapsLock-n: tab
      CapsLock-r: delete
      CapsLock-s: ctrl-c
      CapsLock-w: ctrl-z
