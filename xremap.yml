# /usr/include/linux/input-event-codes.h
virtual_modifiers:
  - CapsLock
default_mode: default
modmap:
  - remap:
      Esc: F8
      Tab: Esc
      Compose: Super_R # For me, Compose is the menu key. you'd usually remap this on a lower level, so this is just a safeguard.

  - name: Game side mouse buttons fix
    remap:
      Btn_Side: k
      Btn_Extra: j
    application:
      only: /Terraria/

keymap:
  - name: Vivaldi!
    exact_match: true
    mode: default
    application:
      only: Vivaldi-stable
    remap:
      # [[sort on]]
      Alt_L-Apostrophe: shift-alt-f11 # focus address field
      Alt_L-Semicolon: ctrl-shift-f12 # quick commands
      Alt_L-Slash: ctrl-f # find in page
      Alt_L-a: ctrl-shift-alt-f5
      Alt_L-c: shift-f10 # built in browser "right click" emulation button
      Alt_L-e: ctrl-shift-alt-f10 # new tab
      Alt_L-h: ctrl-shift-f10 # previous tab (by order)
      Alt_L-j: ctrl-shift-f7 # next workspace
      Alt_L-k: ctrl-shift-f8 # previous workspace
      Alt_L-l: ctrl-shift-f11 # next tab (by order)
      Alt_L-m: shift-alt-f5 # unmute all tabs
      Alt_L-n: shift-alt-f7 # find next in page
      Alt_L-p: ctrl-shift-f1 # pin / unpin tab
      Alt_L-q: ctrl-shift-alt-f3
      Alt_L-r: F5 # reload page
      Alt_L-t: F12
      Alt_L-w: ctrl-shift-f2 # close tab
      Alt_L-x: shift-f9 # focus tab bar
      Alt_L-z: ctrl-shift-alt-f4
      Ctrl-Alt_L-d: ctrl-shift-alt-f7
      Ctrl-Alt_L-f: ctrl-shift-alt-f8
      Ctrl-Alt_L-h: ctrl-shift-f6 # move active tab backward
      Ctrl-Alt_L-l: ctrl-shift-f9 # move active tab forward
      Ctrl-Alt_L-s: ctrl-shift-alt-f6
      Ctrl-Alt_L-w: ctrl-shift-alt-f9
      Ctrl-Shift-h: ctrl-shift-f3 # close tabs to the left
      Ctrl-Shift-l: ctrl-shift-f4 # close tabs to the right
      Ctrl-h: ctrl-shift-alt-f1 # switch to tab 1
      Ctrl-i: alt-right # history forward
      Ctrl-l: ctrl-shift-alt-f2 # switch to the last tab
      Ctrl-o: alt-left # history back
      Ctrl-p: ctrl-shift-alt-f12 # duplicate selected tabs
      Shift-Alt_L-h: shift-alt-f4 # select next tab
      Shift-Alt_L-j: shift-alt-f1 # stack tabs
      Shift-Alt_L-k: shift-alt-f2 # remove from tab stack
      Shift-Alt_L-l: shift-alt-f3 # select previous tab
      Shift-Alt_L-n: shift-alt-f8 # find previous in page
      Shift-Alt_L-r: shift-alt-f6 # force page reload
      # [[sort off]]

  - name: Firefox
    exact_match: true
    mode: default
    application:
      only: firefox
    remap:
      # alt-based hotkeys are possible thanks to the ui.key.menuAccessKeyFocuses option
      # [[sort on]]
      Alt_L-Apostrophe: ctrl-l # focus address bar
      Alt_L-Comma: up
      Alt_L-Dot: down
      Alt_L-Semicolon: shift-f1 # (sidebery) unload other tabs panel
      Alt_L-Slash: ctrl-f # find in this page
      Alt_L-c: ctrl-shift-c # inspect element
      Alt_L-e: f4 # (sidebery) open a new tab after the active tab (needed to open a new tab after the current one, rather than at the end)
      Alt_L-f: f1 # extension: dark reader
      Alt_L-h: ctrl-pageup # go one tab to the left
      Alt_L-l: ctrl-pagedown # go one tab to the right
      Alt_L-n: ctrl-g # find again
      Alt_L-s: alt-home # home
      Alt_L-w: ctrl-w # close tab
      Ctrl-Alt_L-Apostrophe: { launch: [fish, -c, 'xdotool mousemove 0 1080 click 1']}
      Ctrl-Alt_L-d: ctrl-equal # zoom out
      Ctrl-Alt_L-f: ctrl-0 # zoom reset
      Ctrl-Alt_L-h: ctrl-shift-pageup # move tab left
      Ctrl-Alt_L-l: ctrl-shift-pagedown # move tab right
      Ctrl-Alt_L-s: ctrl-minus # zoom in 
      Ctrl-i: alt-right # history forward
      Ctrl-o: alt-left # history back
      Shift-Alt_L-Semicolon: shift-f2 # (sidebery) unload all tabs in inactive panels
      Shift-Alt_L-h: alt-1 # go to tab 1
      Shift-Alt_L-l: alt-9 # go to last tab
      Shift-Alt_L-n: ctrl-shift-g # find previous
      # [[sort off]]

  - name: Krita!
    exact_match: true
    application:
      only: krita
    remap:
      CapsLock-e: ctrl-shift-z

  - name: Anki!
    exact_match: true
    application:
      only: Anki
    remap:
      # [[sort on]]
      # Ctrl-Shift-i: { launch: [fish, -c, 'anki-import'] }
      Alt_L-j: { launch: [fish, -c, 'anki-deck Once'] }
      Alt_L-k: { launch: [fish, -c, 'anki-deck Freq'] }
      CapsLock-Space: { launch: [fish, -c, special_anki_edit_action] }
      Ctrl-Semicolon: ctrl-shift-x
      Ctrl-j: down
      Ctrl-k: up
      # [[sort off]]

  - name: Spotify!
    exact_match: true
    application:
      only: Spotify
    remap:
      Alt_L-f: shift-alt-b

  - name: Term!
    exact_match: true
    application:
      only: [Alacritty, kitty]
    remap:
      # [[sort on]]
      CapsLock-Alt_L-Semicolon: ctrl-w
      Ctrl-Alt_L-u: f4
      Ctrl-Enter: f2
      Shift-Alt_L-Semicolon: f5
      # [[sort off]]

  - name: Move!
    exact_match: true
    mode: [move]
    remap:
      g: [{ set_mode: mouse }, { launch: [awesome-client, Mouse_we()] }]

      q: { launch: [awesome-client, 'MoveVideoPopout(client.focus, 0, 35, 490, 500)'] }
      r: { launch: [awesome-client, 'MoveVideoPopout(client.focus, 1428, 35, 490, 500)'] }
      w: { launch: [awesome-client, 'MoveVideoPopout(client.focus, 0, 802, 490, 500)'] }
      e: { launch: [awesome-client, 'MoveVideoPopout(client.focus, 1428, 802, 490, 500)'] }

      h: { launch: [awesome-client, 'client.focus:relative_move(-1, 0, 0, 0)'] }
      l: { launch: [awesome-client, 'client.focus:relative_move(1, 0, 0, 0)'] }
      j: { launch: [awesome-client, 'client.focus:relative_move(0, 1, 0, 0)'] }
      k: { launch: [awesome-client, 'client.focus:relative_move(0, -1, 0, 0)'] }

      Shift-h: { launch: [awesome-client, 'client.focus:relative_move(0, 0, -1, 0)'] }
      Shift-l: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 1, 0)'] }
      Shift-k: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 0, 1)'] }
      Shift-j: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 0, -1)'] }

      a:
        remap:
          h: { launch: [awesome-client, 'client.focus:relative_move(-15, 0, 0, 0)'] }
          l: { launch: [awesome-client, 'client.focus:relative_move(15, 0, 0, 0)'] }
          j: { launch: [awesome-client, 'client.focus:relative_move(0, 15, 0, 0)'] }
          k: { launch: [awesome-client, 'client.focus:relative_move(0, -15, 0, 0)'] }
          a: { launch: [awesome-client, 'client.focus:relative_move(-15, -15, 0, 0)'] }
          s: { launch: [awesome-client, 'client.focus:relative_move(-15, 15, 0, 0)'] }
          d: { launch: [awesome-client, 'client.focus:relative_move(15, 15, 0, 0)'] }
          f: { launch: [awesome-client, 'client.focus:relative_move(15, -15, 0, 0)'] }
          Shift-h: { launch: [awesome-client, 'client.focus:relative_move(0, 0, -15, 0)'] }
          Shift-l: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 15, 0)'] }
          Shift-k: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 0, 15)'] }
          Shift-j: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 0, -15)'] }
          Shift-a: { launch: [awesome-client, 'client.focus:relative_move(0, 0, -15, -15)'] }
          Shift-s: { launch: [awesome-client, 'client.focus:relative_move(0, 0, -15, 15)'] }
          Shift-d: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 15, 15)'] }
          Shift-f: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 15, -15)'] }

      s:
        remap:
          h: { launch: [awesome-client, 'client.focus:relative_move(-45, 0, 0, 0)'] }
          l: { launch: [awesome-client, 'client.focus:relative_move(45, 0, 0, 0)'] }
          j: { launch: [awesome-client, 'client.focus:relative_move(0, 45, 0, 0)'] }
          k: { launch: [awesome-client, 'client.focus:relative_move(0, -45, 0, 0)'] }
          a: { launch: [awesome-client, 'client.focus:relative_move(-45, -45, 0, 0)'] }
          s: { launch: [awesome-client, 'client.focus:relative_move(-45, 45, 0, 0)'] }
          d: { launch: [awesome-client, 'client.focus:relative_move(45, 45, 0, 0)'] }
          f: { launch: [awesome-client, 'client.focus:relative_move(45, -45, 0, 0)'] }
          Shift-h: { launch: [awesome-client, 'client.focus:relative_move(0, 0, -45, 0)'] }
          Shift-l: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 45, 0)'] }
          Shift-k: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 0, 45)'] }
          Shift-j: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 0, -45)'] }
          Shift-a: { launch: [awesome-client, 'client.focus:relative_move(0, 0, -45, -45)'] }
          Shift-s: { launch: [awesome-client, 'client.focus:relative_move(0, 0, -45, 45)'] }
          Shift-d: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 45, 45)'] }
          Shift-f: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 45, -45)'] }

      d:
        remap:
          h: { launch: [awesome-client, 'client.focus:relative_move(-135, 0, 0, 0)'] }
          l: { launch: [awesome-client, 'client.focus:relative_move(135, 0, 0, 0)'] }
          j: { launch: [awesome-client, 'client.focus:relative_move(0, 135, 0, 0)'] }
          k: { launch: [awesome-client, 'client.focus:relative_move(0, -135, 0, 0)'] }
          a: { launch: [awesome-client, 'client.focus:relative_move(-135, -135, 0, 0)'] }
          s: { launch: [awesome-client, 'client.focus:relative_move(-135, 135, 0, 0)'] }
          d: { launch: [awesome-client, 'client.focus:relative_move(135, 135, 0, 0)'] }
          f: { launch: [awesome-client, 'client.focus:relative_move(135, -135, 0, 0)'] }
          Shift-h: { launch: [awesome-client, 'client.focus:relative_move(0, 0, -135, 0)'] }
          Shift-l: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 135, 0)'] }
          Shift-k: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 0, 135)'] }
          Shift-j: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 0, -135)'] }
          Shift-a: { launch: [awesome-client, 'client.focus:relative_move(0, 0, -135, -135)'] }
          Shift-s: { launch: [awesome-client, 'client.focus:relative_move(0, 0, -135, 135)'] }
          Shift-d: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 135, 135)'] }
          Shift-f: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 135, -135)'] }

      f:
        remap:
          h: { launch: [awesome-client, 'client.focus:relative_move(-405, 0, 0, 0)'] }
          l: { launch: [awesome-client, 'client.focus:relative_move(405, 0, 0, 0)'] }
          j: { launch: [awesome-client, 'client.focus:relative_move(0, 405, 0, 0)'] }
          k: { launch: [awesome-client, 'client.focus:relative_move(0, -405, 0, 0)'] }
          a: { launch: [awesome-client, 'client.focus:relative_move(-405, -405, 0, 0)'] }
          s: { launch: [awesome-client, 'client.focus:relative_move(-405, 405, 0, 0)'] }
          d: { launch: [awesome-client, 'client.focus:relative_move(405, 405, 0, 0)'] }
          f: { launch: [awesome-client, 'client.focus:relative_move(405, -405, 0, 0)'] }
          Shift-h: { launch: [awesome-client, 'client.focus:relative_move(0, 0, -405, 0)'] }
          Shift-l: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 405, 0)'] }
          Shift-k: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 0, 405)'] }
          Shift-j: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 0, -405)'] }
          Shift-a: { launch: [awesome-client, 'client.focus:relative_move(0, 0, -405, -405)'] }
          Shift-s: { launch: [awesome-client, 'client.focus:relative_move(0, 0, -405, 405)'] }
          Shift-d: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 405, 405)'] }
          Shift-f: { launch: [awesome-client, 'client.focus:relative_move(0, 0, 405, -405)'] }

  - name: Mouse!
    mode: [mouse]
    exact_match: true
    remap:
      g: [{ set_mode: move }, { launch: [awesome-client, "Mouse_we('green')"] }]

      h: { launch: [xdotool, mousemove_relative, '--', '-1', '0'] }
      l: { launch: [xdotool, mousemove_relative, '--', '1', '0'] }
      j: { launch: [xdotool, mousemove_relative, '--', '0', '1'] }
      k: { launch: [xdotool, mousemove_relative, '--', '0', '-1'] }

      a:
        remap:
          h: { launch: [xdotool, mousemove_relative, '--', '-15', '0'] }
          l: { launch: [xdotool, mousemove_relative, '--', '15', '0'] }
          j: { launch: [xdotool, mousemove_relative, '--', '0', '15'] }
          k: { launch: [xdotool, mousemove_relative, '--', '0', '-15'] }
          a: { launch: [xdotool, mousemove_relative, '--', '-15', '-15'] }
          s: { launch: [xdotool, mousemove_relative, '--', '-15', '15'] }
          d: { launch: [xdotool, mousemove_relative, '--', '15', '15'] }
          f: { launch: [xdotool, mousemove_relative, '--', '15', '-15'] }

      s:
        remap:
          h: { launch: [xdotool, mousemove_relative, '--', '-45', '0'] }
          l: { launch: [xdotool, mousemove_relative, '--', '45', '0'] }
          j: { launch: [xdotool, mousemove_relative, '--', '0', '45'] }
          k: { launch: [xdotool, mousemove_relative, '--', '0', '-45'] }
          a: { launch: [xdotool, mousemove_relative, '--', '-45', '-45'] }
          s: { launch: [xdotool, mousemove_relative, '--', '-45', '45'] }
          d: { launch: [xdotool, mousemove_relative, '--', '45', '45'] }
          f: { launch: [xdotool, mousemove_relative, '--', '45', '-45'] }

      d:
        remap:
          h: { launch: [xdotool, mousemove_relative, '--', '-135', '0'] }
          l: { launch: [xdotool, mousemove_relative, '--', '135', '0'] }
          j: { launch: [xdotool, mousemove_relative, '--', '0', '135'] }
          k: { launch: [xdotool, mousemove_relative, '--', '0', '-135'] }
          a: { launch: [xdotool, mousemove_relative, '--', '-135', '-135'] }
          s: { launch: [xdotool, mousemove_relative, '--', '-135', '135'] }
          d: { launch: [xdotool, mousemove_relative, '--', '135', '135'] }
          f: { launch: [xdotool, mousemove_relative, '--', '135', '-135'] }

      f:
        remap:
          h: { launch: [xdotool, mousemove_relative, '--', '-405', '0'] }
          l: { launch: [xdotool, mousemove_relative, '--', '405', '0'] }
          j: { launch: [xdotool, mousemove_relative, '--', '0', '405'] }
          k: { launch: [xdotool, mousemove_relative, '--', '0', '-405'] }
          a: { launch: [xdotool, mousemove_relative, '--', '-405', '-405'] }
          s: { launch: [xdotool, mousemove_relative, '--', '-405', '405'] }
          d: { launch: [xdotool, mousemove_relative, '--', '405', '405'] }
          f: { launch: [xdotool, mousemove_relative, '--', '405', '-405'] }

  - name: Mouse
    mode: [mouse]
    remap:
      # mouse wheel
      m: { launch: ['ydotool', 'mousemove', '-w', '--', '-1', '0'] } # left
      Comma: { launch: ['ydotool', 'mousemove', '-w', '--', '0', '1'] } # up
      Dot: { launch: ['ydotool', 'mousemove', '-w', '--', '0', '-1'] } # down
      Slash: { launch: ['ydotool', 'mousemove', '-w', '--', '1', '0'] } # up

  - name: Mousemove!
    mode: [mouse, move]
    exact_match: true
    remap:
      CapsLock-b: [{ set_mode: default }, { launch: [awesome-client, Mouse_wd()] }]

      q: { launch: [xdotool, mousemove, '128', '120'] }
      r: { launch: [xdotool, mousemove, '1792', '120'] }
      w: { launch: [xdotool, mousemove, '128', '960'] }
      e: { launch: [xdotool, mousemove, '1792', '960'] }

      z: { launch: [xdotool, mousemove, '128', '540'] }
      x: { launch: [xdotool, mousemove, '960', '960'] }
      c: { launch: [xdotool, mousemove, '960', '120'] }
      v: { launch: [xdotool, mousemove, '1792', '540'] }

      p: { launch: [xdotool, mousemove, '0', '1080'] }
      Semicolon: { launch: [xdotool, mousemove, '960', '540'] }

      # down and up events of mouse clicks
      CapsLock-u: { launch: ['ydotool', 'click', '40'] }
      CapsLock-i: { launch: ['ydotool', 'click', '42'] }
      CapsLock-o: { launch: ['ydotool', 'click', '41'] }
      CapsLock-j: { launch: ['ydotool', 'click', '80'] }
      CapsLock-k: { launch: ['ydotool', 'click', '82'] }
      CapsLock-l: { launch: ['ydotool', 'click', '81'] }

  - name: Mousemove
    mode: [mouse, move]
    remap:
      u: { launch: ['ydotool', 'click', 'c0'] } # c0 — left click
      i: { launch: ['ydotool', 'click', 'c2'] } # c2 — middle click
      o: { launch: ['ydotool', 'click', 'c1'] } # c1 — right click

  - name: Arr
    mode: arrows
    remap:
      CapsLock-f: [{ set_mode: default }, { launch: [awesome-client, Mouse_wd()] }]
      h: left
      j: down
      k: up
      l: right
      u: pageup
      i: home
      o: end
      p: pagedown

  - name: Any! chord
    exact_match: true
    remap:
      CapsLock-Apostrophe:
        remap:
          f: { launch: [fish, -c, 'runner_link open'] }
          a: { launch: [fish, -c, 'runner_link'] }
          d: { launch: [fish, -c, 'xdg-open (ypoc) ; ensure_browser'] }

          Shift-s: { launch: [fish, -c, 'pick-sts-boss']}

          k: { launch: [fish, -c, batch-link-downloader] }

          s: { launch: [fish, -c, runner_interactive_unicode]}
          e: { launch: [fish, -c, runner_symbol_name] }

          y: { launch: [fish, -c, screenkey] }
          Shift-y: { launch: [kill, screenkey] }
          i: { launch: [fish, -c, magazine_client_info] }

          n: { launch: [fish, -c, anki-add-card] }

          w:
            remap:
              q: { launch: [fish, -c, 'bookmark_open q'] }
              w: { launch: [fish, -c, 'bookmark_open w'] }
              e: { launch: [fish, -c, 'bookmark_open e'] }
              r: { launch: [fish, -c, 'bookmark_open r'] }
              t: { launch: [fish, -c, 'bookmark_open t'] }
              y: { launch: [fish, -c, 'bookmark_open y'] }
              u: { launch: [fish, -c, 'bookmark_open u'] }
              i: { launch: [fish, -c, 'bookmark_open i'] }
              o: { launch: [fish, -c, 'bookmark_open o'] }
              p: { launch: [fish, -c, 'bookmark_open p'] }
              LeftBrace: { launch: [fish, -c, 'bookmark_open leftbrace'] }
              RightBrace: { launch: [fish, -c, 'bookmark_open rightbrace'] }
              a: { launch: [fish, -c, 'bookmark_open a'] }
              s: { launch: [fish, -c, 'bookmark_open s'] }
              d: { launch: [fish, -c, 'bookmark_open d'] }
              f: { launch: [fish, -c, 'bookmark_open f'] }
              g: { launch: [fish, -c, 'bookmark_open g'] }
              h: { launch: [fish, -c, 'bookmark_open h'] }
              j: { launch: [fish, -c, 'bookmark_open j'] }
              k: { launch: [fish, -c, 'bookmark_open k'] }
              l: { launch: [fish, -c, 'bookmark_open l'] }
              Semicolon: { launch: [fish, -c, 'bookrmark_open semicolon'] }
              Apostrophe: { launch: [fish, -c, 'bookrmark_open apostrophe'] }
              z: { launch: [fish, -c, 'bookmark_open z'] }
              x: { launch: [fish, -c, 'bookmark_open x'] }
              c: { launch: [fish, -c, 'bookmark_open c'] }
              v: { launch: [fish, -c, 'bookmark_open v'] }
              b: { launch: [fish, -c, 'bookmark_open b'] }
              n: { launch: [fish, -c, 'bookmark_open n'] }
              m: { launch: [fish, -c, 'bookmark_open m'] }
              Comma: { launch: [fish, -c, 'bookmark_open comma'] }
              Dot: { launch: [fish, -c, 'bookmark_open dot'] }
              Slash: { launch: [fish, -c, 'bookmark_open slash'] }
              Shift-q: { launch: [fish, -c, 'bookmark_open Q'] }
              Shift-w: { launch: [fish, -c, 'bookmark_open W'] }
              Shift-e: { launch: [fish, -c, 'bookmark_open E'] }
              Shift-r: { launch: [fish, -c, 'bookmark_open R'] }
              Shift-t: { launch: [fish, -c, 'bookmark_open T'] }
              Shift-y: { launch: [fish, -c, 'bookmark_open Y'] }
              Shift-u: { launch: [fish, -c, 'bookmark_open U'] }
              Shift-i: { launch: [fish, -c, 'bookmark_open I'] }
              Shift-o: { launch: [fish, -c, 'bookmark_open O'] }
              Shift-p: { launch: [fish, -c, 'bookmark_open P'] }
              Shift-LeftBrace: { launch: [fish, -c, 'bookmark_open leftcurl'] }
              Shift-RightBrace: { launch: [fish, -c, 'bookmark_open rightcurl'] }
              Shift-a: { launch: [fish, -c, 'bookmark_open A'] }
              Shift-s: { launch: [fish, -c, 'bookmark_open S'] }
              Shift-d: { launch: [fish, -c, 'bookmark_open D'] }
              Shift-f: { launch: [fish, -c, 'bookmark_open F'] }
              Shift-g: { launch: [fish, -c, 'bookmark_open G'] }
              Shift-h: { launch: [fish, -c, 'bookmark_open H'] }
              Shift-j: { launch: [fish, -c, 'bookmark_open J'] }
              Shift-k: { launch: [fish, -c, 'bookmark_open K'] }
              Shift-l: { launch: [fish, -c, 'bookmark_open L'] }
              Shift-Semicolon: { launch: [fish, -c, 'bookmark_open colon'] }
              Shift-Apostrophe: { launch: [fish, -c, 'bookmark_open doublequote'] }
              Shift-z: { launch: [fish, -c, 'bookmark_open Z'] }
              Shift-x: { launch: [fish, -c, 'bookmark_open X'] }
              Shift-c: { launch: [fish, -c, 'bookmark_open C'] }
              Shift-v: { launch: [fish, -c, 'bookmark_open V'] }
              Shift-b: { launch: [fish, -c, 'bookmark_open B'] }
              Shift-n: { launch: [fish, -c, 'bookmark_open N'] }
              Shift-m: { launch: [fish, -c, 'bookmark_open M'] }
              Shift-Comma: { launch: [fish, -c, 'bookmark_open leftpointy'] }
              Shift-Dot: { launch: [fish, -c, 'bookmark_open rightpointy'] }
              Shift-Slash: { launch: [fish, -c, 'bookmark_open question'] }
              Super_R-f: { launch: [fish, -c, 'bookmark_open 1'] }
              Super_R-d: { launch: [fish, -c, 'bookmark_open 2'] }
              Super_R-s: { launch: [fish, -c, 'bookmark_open 3'] }
              Super_R-r: { launch: [fish, -c, 'bookmark_open 4'] }
              Super_R-e: { launch: [fish, -c, 'bookmark_open 5'] }
              Super_R-w: { launch: [fish, -c, 'bookmark_open 6'] }
              Super_R-v: { launch: [fish, -c, 'bookmark_open 7'] }
              Super_R-c: { launch: [fish, -c, 'bookmark_open 8'] }
              Super_R-x: { launch: [fish, -c, 'bookmark_open 9'] }
              Super_R-a: { launch: [fish, -c, 'bookmark_open 0'] }
          Shift-w:
            remap:
              q: { launch: [fish, -c, 'bookmark_set q "$(ypoc)"'] }
              w: { launch: [fish, -c, 'bookmark_set w "$(ypoc)"'] }
              e: { launch: [fish, -c, 'bookmark_set e "$(ypoc)"'] }
              r: { launch: [fish, -c, 'bookmark_set r "$(ypoc)"'] }
              t: { launch: [fish, -c, 'bookmark_set t "$(ypoc)"'] }
              y: { launch: [fish, -c, 'bookmark_set y "$(ypoc)"'] }
              u: { launch: [fish, -c, 'bookmark_set u "$(ypoc)"'] }
              i: { launch: [fish, -c, 'bookmark_set i "$(ypoc)"'] }
              o: { launch: [fish, -c, 'bookmark_set o "$(ypoc)"'] }
              p: { launch: [fish, -c, 'bookmark_set p "$(ypoc)"'] }
              LeftBrace: { launch: [fish, -c, 'bookmark_set leftbrace "$(ypoc)"'] }
              RightBrace: { launch: [fish, -c, 'bookmark_set rightbrace "$(ypoc)"'] }
              a: { launch: [fish, -c, 'bookmark_set a "$(ypoc)"'] }
              s: { launch: [fish, -c, 'bookmark_set s "$(ypoc)"'] }
              d: { launch: [fish, -c, 'bookmark_set d "$(ypoc)"'] }
              f: { launch: [fish, -c, 'bookmark_set f "$(ypoc)"'] }
              g: { launch: [fish, -c, 'bookmark_set g "$(ypoc)"'] }
              h: { launch: [fish, -c, 'bookmark_set h "$(ypoc)"'] }
              j: { launch: [fish, -c, 'bookmark_set j "$(ypoc)"'] }
              k: { launch: [fish, -c, 'bookmark_set k "$(ypoc)"'] }
              l: { launch: [fish, -c, 'bookmark_set l "$(ypoc)"'] }
              Semicolon: { launch: [fish, -c, 'bookrmark_set semicolon "$(ypoc)"'] }
              Apostrophe: { launch: [fish, -c, 'bookrmark_set apostrophe "$(ypoc)"'] }
              z: { launch: [fish, -c, 'bookmark_set z "$(ypoc)"'] }
              x: { launch: [fish, -c, 'bookmark_set x "$(ypoc)"'] }
              c: { launch: [fish, -c, 'bookmark_set c "$(ypoc)"'] }
              v: { launch: [fish, -c, 'bookmark_set v "$(ypoc)"'] }
              b: { launch: [fish, -c, 'bookmark_set b "$(ypoc)"'] }
              n: { launch: [fish, -c, 'bookmark_set n "$(ypoc)"'] }
              m: { launch: [fish, -c, 'bookmark_set m "$(ypoc)"'] }
              Comma: { launch: [fish, -c, 'bookmark_set comma "$(ypoc)}"'] }
              Dot: { launch: [fish, -c, 'bookmark_set dot "$(ypoc)}"'] }
              Slash: { launch: [fish, -c, 'bookmark_set slash "$(ypoc)}"'] }
              Shift-q: { launch: [fish, -c, 'bookmark_set Q "$(ypoc)"'] }
              Shift-w: { launch: [fish, -c, 'bookmark_set W "$(ypoc)"'] }
              Shift-e: { launch: [fish, -c, 'bookmark_set E "$(ypoc)"'] }
              Shift-r: { launch: [fish, -c, 'bookmark_set R "$(ypoc)"'] }
              Shift-t: { launch: [fish, -c, 'bookmark_set T "$(ypoc)"'] }
              Shift-y: { launch: [fish, -c, 'bookmark_set Y "$(ypoc)"'] }
              Shift-u: { launch: [fish, -c, 'bookmark_set U "$(ypoc)"'] }
              Shift-i: { launch: [fish, -c, 'bookmark_set I "$(ypoc)"'] }
              Shift-o: { launch: [fish, -c, 'bookmark_set O "$(ypoc)"'] }
              Shift-p: { launch: [fish, -c, 'bookmark_set P "$(ypoc)"'] }
              Shift-LeftBrace: { launch: [fish, -c, 'bookmark_set leftcurl "$(ypoc)"'] }
              Shift-RightBrace: { launch: [fish, -c, 'bookmark_set rightcurl "$(ypoc)"'] }
              Shift-a: { launch: [fish, -c, 'bookmark_set A "$(ypoc)"'] }
              Shift-s: { launch: [fish, -c, 'bookmark_set S "$(ypoc)"'] }
              Shift-d: { launch: [fish, -c, 'bookmark_set D "$(ypoc)"'] }
              Shift-f: { launch: [fish, -c, 'bookmark_set F "$(ypoc)"'] }
              Shift-g: { launch: [fish, -c, 'bookmark_set G "$(ypoc)"'] }
              Shift-h: { launch: [fish, -c, 'bookmark_set H "$(ypoc)"'] }
              Shift-j: { launch: [fish, -c, 'bookmark_set J "$(ypoc)"'] }
              Shift-k: { launch: [fish, -c, 'bookmark_set K "$(ypoc)"'] }
              Shift-l: { launch: [fish, -c, 'bookmark_set L "$(ypoc)"'] }
              Shift-Semicolon: { launch: [fish, -c, 'bookmark_set colon "$(ypoc)"'] }
              Shift-Apostrophe: { launch: [fish, -c, 'bookmark_set doublequote "$(ypoc)"'] }
              Shift-z: { launch: [fish, -c, 'bookmark_set Z "$(ypoc)"'] }
              Shift-x: { launch: [fish, -c, 'bookmark_set X "$(ypoc)"'] }
              Shift-c: { launch: [fish, -c, 'bookmark_set C "$(ypoc)"'] }
              Shift-v: { launch: [fish, -c, 'bookmark_set V "$(ypoc)"'] }
              Shift-b: { launch: [fish, -c, 'bookmark_set B "$(ypoc)"'] }
              Shift-n: { launch: [fish, -c, 'bookmark_set N "$(ypoc)"'] }
              Shift-m: { launch: [fish, -c, 'bookmark_set M "$(ypoc)"'] }
              Shift-Comma: { launch: [fish, -c, 'bookmark_set leftpointy "$(ypoc)"'] }
              Shift-Dot: { launch: [fish, -c, 'bookmark_set rightpointy "$(ypoc)"'] }
              Shift-Slash: { launch: [fish, -c, 'bookmark_set question "$(ypoc)"'] }
              Super_R-f: { launch: [fish, -c, 'bookmark_set 1 "$(ypoc)"'] }
              Super_R-d: { launch: [fish, -c, 'bookmark_set 2 "$(ypoc)"'] }
              Super_R-s: { launch: [fish, -c, 'bookmark_set 3 "$(ypoc)"'] }
              Super_R-r: { launch: [fish, -c, 'bookmark_set 4 "$(ypoc)"'] }
              Super_R-e: { launch: [fish, -c, 'bookmark_set 5 "$(ypoc)"'] }
              Super_R-w: { launch: [fish, -c, 'bookmark_set 6 "$(ypoc)"'] }
              Super_R-v: { launch: [fish, -c, 'bookmark_set 7 "$(ypoc)"'] }
              Super_R-c: { launch: [fish, -c, 'bookmark_set 8 "$(ypoc)"'] }
              Super_R-x: { launch: [fish, -c, 'bookmark_set 9 "$(ypoc)"'] }
              Super_R-a: { launch: [fish, -c, 'bookmark_set 0 "$(ypoc)"'] }

  - name: Any! magazine
    exact_match: true
    application:
      not: /Terraria/
    remap:
      Shift_L-Alt_L-e:
        remap:
          q: { launch: [fish, -c, 'lazyfloat q'] }
          w: { launch: [fish, -c, 'lazyfloat w'] }
          e: { launch: [fish, -c, 'lazyfloat e'] }
          r: { launch: [fish, -c, 'lazyfloat r'] }
          t: { launch: [fish, -c, 'lazyfloat t'] }
          y: { launch: [fish, -c, 'lazyfloat y'] }
          u: { launch: [fish, -c, 'lazyfloat u'] }
          i: { launch: [fish, -c, 'lazyfloat i'] }
          o: { launch: [fish, -c, 'lazyfloat o'] }
          p: { launch: [fish, -c, 'lazyfloat p'] }
          LeftBrace: { launch: [fish, -c, 'lazyfloat ['] }
          RightBrace: { launch: [fish, -c, 'lazyfloat ]'] }
          a: { launch: [fish, -c, 'lazyfloat a'] }
          s: { launch: [fish, -c, 'lazyfloat s'] }
          d: { launch: [fish, -c, 'lazyfloat d'] }
          f: { launch: [fish, -c, 'lazyfloat f'] }
          g: { launch: [fish, -c, 'lazyfloat g'] }
          h: { launch: [fish, -c, 'lazyfloat h'] }
          j: { launch: [fish, -c, 'lazyfloat j'] }
          k: { launch: [fish, -c, 'lazyfloat k'] }
          l: { launch: [fish, -c, 'lazyfloat l'] }
          Semicolon: { launch: [fish, -c, 'lazyfloat \;'] }
          Apostrophe: { launch: [fish, -c, 'lazyfloat '''] }
          z: { launch: [fish, -c, 'lazyfloat z'] }
          x: { launch: [fish, -c, 'lazyfloat x'] }
          c: { launch: [fish, -c, 'lazyfloat c'] }
          v: { launch: [fish, -c, 'lazyfloat v'] }
          b: { launch: [fish, -c, 'lazyfloat b'] }
          n: { launch: [fish, -c, 'lazyfloat n'] }
          m: { launch: [fish, -c, 'lazyfloat m'] }
          Comma: { launch: [fish, -c, 'lazyfloat ,'] }
          Dot: { launch: [fish, -c, 'lazyfloat .'] }
          Slash: { launch: [fish, -c, 'lazyfloat /'] }
          Shift-q: { launch: [fish, -c, 'lazyfloat Q'] }
          Shift-w: { launch: [fish, -c, 'lazyfloat W'] }
          Shift-e: { launch: [fish, -c, 'lazyfloat E'] }
          Shift-r: { launch: [fish, -c, 'lazyfloat R'] }
          Shift-t: { launch: [fish, -c, 'lazyfloat T'] }
          Shift-y: { launch: [fish, -c, 'lazyfloat Y'] }
          Shift-u: { launch: [fish, -c, 'lazyfloat U'] }
          Shift-i: { launch: [fish, -c, 'lazyfloat I'] }
          Shift-o: { launch: [fish, -c, 'lazyfloat O'] }
          Shift-p: { launch: [fish, -c, 'lazyfloat P'] }
          Shift-LeftBrace: { launch: [fish, -c, 'lazyfloat \{'] }
          Shift-RightBrace: { launch: [fish, -c, 'lazyfloat \}'] }
          Shift-a: { launch: [fish, -c, 'lazyfloat A'] }
          Shift-s: { launch: [fish, -c, 'lazyfloat S'] }
          Shift-d: { launch: [fish, -c, 'lazyfloat D'] }
          Shift-f: { launch: [fish, -c, 'lazyfloat F'] }
          Shift-g: { launch: [fish, -c, 'lazyfloat G'] }
          Shift-h: { launch: [fish, -c, 'lazyfloat H'] }
          Shift-j: { launch: [fish, -c, 'lazyfloat J'] }
          Shift-k: { launch: [fish, -c, 'lazyfloat K'] }
          Shift-l: { launch: [fish, -c, 'lazyfloat L'] }
          Shift-Semicolon: { launch: [fish, -c, 'lazyfloat :'] }
          Shift-Apostrophe: { launch: [fish, -c, 'lazyfloat \"'] }
          Shift-z: { launch: [fish, -c, 'lazyfloat Z'] }
          Shift-x: { launch: [fish, -c, 'lazyfloat X'] }
          Shift-c: { launch: [fish, -c, 'lazyfloat C'] }
          Shift-v: { launch: [fish, -c, 'lazyfloat V'] }
          Shift-b: { launch: [fish, -c, 'lazyfloat B'] }
          Shift-n: { launch: [fish, -c, 'lazyfloat N'] }
          Shift-m: { launch: [fish, -c, 'lazyfloat M'] }
          Shift-Comma: { launch: [fish, -c, 'lazyfloat <'] }
          Shift-Dot: { launch: [fish, -c, 'lazyfloat >'] }
          Shift-Slash: { launch: [fish, -c, 'lazyfloat ?'] }
          Super_R-f: { launch: [fish, -c, 'lazyfloat 1'] }
          Super_R-d: { launch: [fish, -c, 'lazyfloat 2'] }
          Super_R-s: { launch: [fish, -c, 'lazyfloat 3'] }
          Super_R-r: { launch: [fish, -c, 'lazyfloat 4'] }
          Super_R-e: { launch: [fish, -c, 'lazyfloat 5'] }
          Super_R-w: { launch: [fish, -c, 'lazyfloat 6'] }
          Super_R-v: { launch: [fish, -c, 'lazyfloat 7'] }
          Super_R-c: { launch: [fish, -c, 'lazyfloat 8'] }
          Super_R-x: { launch: [fish, -c, 'lazyfloat 9'] }
          Super_R-a: { launch: [fish, -c, 'lazyfloat 0'] }
      Shift_L-c:
        exact_match: true
        remap:
          q: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/q'] }
          w: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/w'] }
          e: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/e'] }
          r: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/r'] }
          t: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/t'] }
          y: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/y'] }
          u: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/u'] }
          i: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/i'] }
          o: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/o'] }
          p: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/p'] }
          LeftBrace: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/leftbrace'] }
          RightBrace: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/rightbrace'] }
          a: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/a'] }
          s: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/s'] }
          d: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/d'] }
          f: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/f'] }
          g: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/g'] }
          h: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/h'] }
          j: { launch: [fish, -c, 'magazine_get ~/prog/dotfiles/project.txt'] }
          k: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/k'] }
          l: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/l'] }
          Semicolon: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/semicolon'] }
          Apostrophe: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/apostrophe'] }
          z: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/z'] }
          x: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/x'] }
          c: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/c'] }
          v: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/v'] }
          b: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/b'] }
          n: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/n'] }
          m: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/m'] }
          Comma: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/comma'] }
          Dot: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/dot'] }
          Slash: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/slash'] }
          Shift-q: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/Q'] }
          Shift-w: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/W'] }
          Shift-e: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/E'] }
          Shift-r: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/R'] }
          Shift-t: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/T'] }
          Shift-y: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/Y'] }
          Shift-u: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/U'] }
          Shift-i: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/I'] }
          Shift-o: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/O'] }
          Shift-p: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/P'] }
          Shift-LeftBrace: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/leftcurl'] }
          Shift-RightBrace: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/rightcurl'] }
          Shift-a: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/A'] }
          Shift-s: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/S'] }
          Shift-d: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/D'] }
          Shift-f: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/F'] }
          Shift-g: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/G'] }
          Shift-h: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/H'] }
          Shift-j: { launch: [fish, -c, 'magazine_get (pick_project_path)'] }
          Shift-k: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/K'] }
          Shift-l: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/L'] }
          Shift-Semicolon: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/colon'] }
          Shift-Apostrophe: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/doublequote'] }
          Shift-z: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/Z'] }
          Shift-x: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/X'] }
          Shift-c: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/C'] }
          Shift-v: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/V'] }
          Shift-b: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/B'] }
          Shift-n: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/N'] }
          Shift-m: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/M'] }
          Shift-Comma: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/leftpointy'] }
          Shift-Dot: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/rightpointy'] }
          Shift-Slash: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/question'] }
          Super_R-f: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/1'] }
          Super_R-d: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/2'] }
          Super_R-s: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/3'] }
          Super_R-r: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/4'] }
          Super_R-e: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/5'] }
          Super_R-w: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/6'] }
          Super_R-v: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/7'] }
          Super_R-c: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/8'] }
          Super_R-x: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/9'] }
          Super_R-a: { launch: [fish, -c, 'magazine_get ~/.local/share/magazine/0'] }
      Shift_L-w:
        exact_match: true
        remap:
          q: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/q'] }
          w: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/w'] }
          e: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/e'] }
          r: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/r'] }
          t: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/t'] }
          y: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/y'] }
          u: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/u'] }
          i: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/i'] }
          o: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/o'] }
          p: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/p'] }
          LeftBrace: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/leftbrace'] }
          RightBrace: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/rightbrace'] }
          a: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/a'] }
          s: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/s'] }
          d: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/d'] }
          f: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/f'] }
          g: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/g'] }
          h: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/h'] }
          j: { launch: [fish, -c, 'magazine_count ~/prog/dotfiles/project.txt'] }
          k: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/k'] }
          l: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/l'] }
          Semicolon: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/semicolon'] }
          Apostrophe: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/apostrophe'] }
          z: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/z'] }
          x: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/x'] }
          c: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/c'] }
          v: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/v'] }
          b: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/b'] }
          n: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/n'] }
          m: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/m'] }
          Comma: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/comma'] }
          Dot: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/dot'] }
          Slash: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/slash'] }
          Shift-q: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/Q'] }
          Shift-w: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/W'] }
          Shift-e: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/E'] }
          Shift-r: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/R'] }
          Shift-t: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/T'] }
          Shift-y: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/Y'] }
          Shift-u: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/U'] }
          Shift-i: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/I'] }
          Shift-o: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/O'] }
          Shift-p: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/P'] }
          Shift-LeftBrace: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/leftcurl'] }
          Shift-RightBrace: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/rightcurl'] }
          Shift-a: { launch: [fish, -c, 'magazine_count_anki_cards ~/.local/share/magazine/A'] }
          Shift-s: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/S'] }
          Shift-d: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/D'] }
          Shift-f: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/F'] }
          Shift-g: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/G'] }
          Shift-h: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/H'] }
          Shift-j: { launch: [fish, -c, 'magazine_count (pick_project_path)'] }
          Shift-k: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/K'] }
          Shift-l: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/L'] }
          Shift-Semicolon: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/colon'] }
          Shift-Apostrophe: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/doublequote'] }
          Shift-z: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/Z'] }
          Shift-x: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/X'] }
          Shift-c: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/C'] }
          Shift-v: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/V'] }
          Shift-b: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/B'] }
          Shift-n: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/N'] }
          Shift-m: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/M'] }
          Shift-Comma: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/leftpointy'] }
          Shift-Dot: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/rightpointy'] }
          Shift-Slash: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/question'] }
          Super_R-f: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/1'] }
          Super_R-d: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/2'] }
          Super_R-s: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/3'] }
          Super_R-r: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/4'] }
          Super_R-e: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/5'] }
          Super_R-w: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/6'] }
          Super_R-v: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/7'] }
          Super_R-c: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/8'] }
          Super_R-x: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/9'] }
          Super_R-a: { launch: [fish, -c, 'magazine_count ~/.local/share/magazine/0'] }
      Shift_L-Alt_L-c:
        exact_match: true
        remap:
          q: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/q'] }
          w: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/w'] }
          e: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/e'] }
          r: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/r'] }
          t: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/t'] }
          y: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/y'] }
          u: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/u'] }
          i: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/i'] }
          o: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/o'] }
          p: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/p'] }
          LeftBrace: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/leftbrace'] }
          RightBrace: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/rightbrace'] }
          a: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/a'] }
          s: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/s'] }
          d: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/d'] }
          f: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/f'] }
          g: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/g'] }
          h: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/h'] }
          j: { launch: [fish, -c, 'magazine_cut ~/prog/dotfiles/project.txt'] }
          k: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/k'] }
          l: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/l'] }
          Semicolon: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/semicolon'] }
          Apostrophe: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/apostrophe'] }
          z: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/z'] }
          x: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/x'] }
          c: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/c'] }
          v: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/v'] }
          b: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/b'] }
          n: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/n'] }
          m: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/m'] }
          Comma: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/comma'] }
          Dot: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/dot'] }
          Slash: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/slash'] }
          Shift-q: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/Q'] }
          Shift-w: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/W'] }
          Shift-e: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/E'] }
          Shift-r: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/R'] }
          Shift-t: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/T'] }
          Shift-y: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/Y'] }
          Shift-u: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/U'] }
          Shift-i: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/I'] }
          Shift-o: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/O'] }
          Shift-p: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/P'] }
          Shift-LeftBrace: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/leftcurl'] }
          Shift-RightBrace: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/rightcurl'] }
          Shift-a: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/A'] }
          Shift-s: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/S'] }
          Shift-d: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/D'] }
          Shift-f: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/F'] }
          Shift-g: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/G'] }
          Shift-h: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/H'] }
          Shift-j: { launch: [fish, -c, 'magazine_cut (pick_project_path)'] }
          Shift-k: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/K'] }
          Shift-l: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/L'] }
          Shift-Semicolon: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/colon'] }
          Shift-Apostrophe: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/doublequote'] }
          Shift-z: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/Z'] }
          Shift-x: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/X'] }
          Shift-c: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/C'] }
          Shift-v: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/V'] }
          Shift-b: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/B'] }
          Shift-n: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/N'] }
          Shift-m: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/M'] }
          Shift-Comma: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/leftpointy'] }
          Shift-Dot: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/rightpointy'] }
          Shift-Slash: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/question'] }
          Super_R-f: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/1'] }
          Super_R-d: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/2'] }
          Super_R-s: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/3'] }
          Super_R-r: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/4'] }
          Super_R-e: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/5'] }
          Super_R-w: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/6'] }
          Super_R-v: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/7'] }
          Super_R-c: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/8'] }
          Super_R-x: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/9'] }
          Super_R-a: { launch: [fish, -c, 'magazine_cut ~/.local/share/magazine/0'] }
      Shift_L-r:
        exact_match: true
        remap:
          q: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/q'] }
          w: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/w'] }
          e: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/e'] }
          r: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/r'] }
          t: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/t'] }
          y: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/y'] }
          u: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/u'] }
          i: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/i'] }
          o: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/o'] }
          p: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/p'] }
          LeftBrace: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/leftbrace'] }
          RightBrace: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/rightbrace'] }
          a: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/a'] }
          s: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/s'] }
          d: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/d'] }
          f: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/f'] }
          g: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/g'] }
          h: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/h'] }
          j: { launch: [fish, -c, 'magazine_truncate ~/prog/dotfiles/project.txt'] }
          k: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/k'] }
          l: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/l'] }
          Semicolon: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/semicolon'] }
          Apostrophe: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/apostrophe'] }
          z: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/z'] }
          x: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/x'] }
          c: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/c'] }
          v: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/v'] }
          b: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/b'] }
          n: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/n'] }
          m: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/m'] }
          Comma: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/comma'] }
          Dot: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/dot'] }
          Slash: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/slash'] }
          Shift-q: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/Q'] }
          Shift-w: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/W'] }
          Shift-e: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/E'] }
          Shift-r: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/R'] }
          Shift-t: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/T'] }
          Shift-y: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/Y'] }
          Shift-u: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/U'] }
          Shift-i: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/I'] }
          Shift-o: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/O'] }
          Shift-p: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/P'] }
          Shift-LeftBrace: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/leftcurl'] }
          Shift-RightBrace: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/rightcurl'] }
          Shift-a: { launch: [fish, -c, 'magazine_truncate_imports'] }
          Shift-s: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/S'] }
          Shift-d: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/D'] }
          Shift-f: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/F'] }
          Shift-g: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/G'] }
          Shift-h: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/H'] }
          Shift-j: { launch: [fish, -c, 'magazine_truncate (pick_project_path)'] }
          Shift-k: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/K'] }
          Shift-l: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/L'] }
          Shift-Semicolon: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/colon'] }
          Shift-Apostrophe: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/doublequote'] }
          Shift-z: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/Z'] }
          Shift-x: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/X'] }
          Shift-c: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/C'] }
          Shift-v: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/V'] }
          Shift-b: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/B'] }
          Shift-n: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/N'] }
          Shift-m: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/M'] }
          Shift-Comma: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/leftpointy'] }
          Shift-Dot: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/rightpointy'] }
          Shift-Slash: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/question'] }
          Super_R-f: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/1'] }
          Super_R-d: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/2'] }
          Super_R-s: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/3'] }
          Super_R-r: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/4 ; github-read-notifs'] }
          Super_R-e: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/5'] }
          Super_R-w: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/6'] }
          Super_R-v: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/7'] }
          Super_R-c: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/8'] }
          Super_R-x: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/9'] }
          Super_R-a: { launch: [fish, -c, 'magazine_truncate ~/.local/share/magazine/0'] }
      Shift_L-d:
        exact_match: true
        remap:
          q: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/q'] }
          w: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/w'] }
          e: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/e'] }
          r: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/r'] }
          t: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/t'] }
          y: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/y'] }
          u: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/u'] }
          i: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/i'] }
          o: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/o'] }
          p: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/p'] }
          LeftBrace: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/leftbrace'] }
          RightBrace: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/rightbrace'] }
          a: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/a'] }
          s: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/s'] }
          d: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/d'] }
          f: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/f'] }
          g: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/g'] }
          h: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/h'] }
          j: { launch: [fish, -c, 'magazine_edit ~/prog/dotfiles/project.txt'] }
          k: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/k'] }
          l: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/l'] }
          Semicolon: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/semicolon'] }
          Apostrophe: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/apostrophe'] }
          z: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/z'] }
          x: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/x'] }
          c: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/c'] }
          v: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/v'] }
          b: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/b'] }
          n: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/n'] }
          m: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/m'] }
          Comma: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/comma'] }
          Dot: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/dot'] }
          Slash: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/slash'] }
          Shift-q: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/Q'] }
          Shift-w: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/W'] }
          Shift-e: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/E'] }
          Shift-r: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/R'] }
          Shift-t: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/T'] }
          Shift-y: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/Y'] }
          Shift-u: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/U'] }
          Shift-i: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/I'] }
          Shift-o: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/O'] }
          Shift-p: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/P'] }
          Shift-LeftBrace: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/leftcurl'] }
          Shift-RightBrace: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/rightcurl'] }
          Shift-a: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/A'] }
          Shift-s: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/S'] }
          Shift-d: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/D'] }
          Shift-f: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/F'] }
          Shift-g: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/G'] }
          Shift-h: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/H'] }
          Shift-j: { launch: [fish, -c, 'magazine_edit (pick_project_path)'] }
          Shift-k: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/K'] }
          Shift-l: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/L'] }
          Shift-Semicolon: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/colon'] }
          Shift-Apostrophe: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/doublequote'] }
          Shift-z: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/Z'] }
          Shift-x: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/X'] }
          Shift-c: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/C'] }
          Shift-v: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/V'] }
          Shift-b: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/B'] }
          Shift-n: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/N'] }
          Shift-m: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/M'] }
          Shift-Comma: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/leftpointy'] }
          Shift-Dot: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/rightpointy'] }
          Shift-Slash: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/question'] }
          Super_R-f: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/1'] }
          Super_R-d: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/2'] }
          Super_R-s: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/3'] }
          Super_R-r: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/4'] }
          Super_R-e: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/5'] }
          Super_R-w: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/6'] }
          Super_R-v: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/7'] }
          Super_R-c: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/8'] }
          Super_R-x: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/9'] }
          Super_R-a: { launch: [fish, -c, 'magazine_edit ~/.local/share/magazine/0'] }
      Shift_L-e:
        exact_match: true
        remap:
          q: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/q'] }
          w: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/w'] }
          e: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/e'] }
          r: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/r'] }
          t: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/t'] }
          y: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/y'] }
          u: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/u'] }
          i: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/i'] }
          o: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/o'] }
          p: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/p'] }
          LeftBrace: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/leftbrace'] }
          RightBrace: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/rightbrace'] }
          a: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/a'] }
          s: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/s'] }
          d: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/d'] }
          f: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/f'] }
          g: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/g'] }
          h: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/h'] }
          j: { launch: [fish, -c, 'magazine_commit ~/prog/dotfiles/project.txt'] }
          k: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/k'] }
          l: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/l'] }
          Semicolon: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/semicolon'] }
          Apostrophe: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/apostrophe'] }
          z: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/z'] }
          x: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/x'] }
          c: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/c'] }
          v: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/v'] }
          b: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/b'] }
          n: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/n'] }
          m: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/m'] }
          Comma: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/comma'] }
          Dot: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/dot'] }
          Slash: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/slash'] }
          Shift-q: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/Q'] }
          Shift-w: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/W'] }
          Shift-e: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/E'] }
          Shift-r: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/R'] }
          Shift-t: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/T'] }
          Shift-y: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/Y'] }
          Shift-u: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/U'] }
          Shift-i: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/I'] }
          Shift-o: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/O'] }
          Shift-p: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/P'] }
          Shift-LeftBrace: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/leftcurl'] }
          Shift-RightBrace: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/rightcurl'] }
          Shift-a: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/A'] }
          Shift-s: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/S'] }
          Shift-d: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/D'] }
          Shift-f: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/F'] }
          Shift-g: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/G'] }
          Shift-h: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/H'] }
          Shift-j: { launch: [fish, -c, 'magazine_commit (pick_project_path)'] }
          Shift-k: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/K'] }
          Shift-l: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/L'] }
          Shift-Semicolon: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/colon'] }
          Shift-Apostrophe: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/doublequote'] }
          Shift-z: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/Z'] }
          Shift-x: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/X'] }
          Shift-c: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/C'] }
          Shift-v: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/V'] }
          Shift-b: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/B'] }
          Shift-n: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/N'] }
          Shift-m: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/M'] }
          Shift-Comma: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/leftpointy'] }
          Shift-Dot: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/rightpointy'] }
          Shift-Slash: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/question'] }
          Super_R-f: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/1'] }
          Super_R-d: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/2'] }
          Super_R-s: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/3'] }
          Super_R-r: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/4'] }
          Super_R-e: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/5'] }
          Super_R-w: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/6'] }
          Super_R-v: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/7'] }
          Super_R-c: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/8'] }
          Super_R-x: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/9'] }
          Super_R-a: { launch: [fish, -c, 'magazine_commit ~/.local/share/magazine/0'] }
      Shift_L-s:
        exact_match: true
        remap:
          q: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/q'] }
          w: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/w'] }
          e: { launch: [fish, -c, 'magazine_append_symbol'] }
          r: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/r'] }
          t: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/t'] }
          y: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/y'] }
          u: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/u'] }
          i: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/i'] }
          o: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/o'] }
          p: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/p'] }
          LeftBrace: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/leftbrace'] }
          RightBrace: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/rightbrace'] }
          a: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/a'] }
          s: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/s'] }
          d: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/d'] }
          f: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/f'] }
          g: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/g'] }
          h: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/h'] }
          j: { launch: [fish, -c, 'magazine_append ~/prog/dotfiles/project.txt'] }
          k: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/k'] }
          l: { launch: [fish, -c, 'magazine_append_link']}
          Semicolon: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/semicolon'] }
          Apostrophe: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/apostrophe'] }
          z: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/z'] }
          x: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/x'] }
          c: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/c'] }
          v: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/v'] }
          b: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/b'] }
          n: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/n'] }
          m: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/m'] }
          Comma: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/comma'] }
          Dot: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/dot'] }
          Slash: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/slash'] }
          Shift-q: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/Q'] }
          Shift-w: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/W'] }
          Shift-e: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/E'] }
          Shift-r: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/R'] }
          Shift-t: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/T'] }
          Shift-y: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/Y'] }
          Shift-u: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/U'] }
          Shift-i: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/I'] }
          Shift-o: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/O'] }
          Shift-p: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/P'] }
          Shift-LeftBrace: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/leftcurl'] }
          Shift-RightBrace: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/rightcurl'] }
          Shift-a: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/A'] }
          Shift-s: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/S'] }
          Shift-d: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/D'] }
          Shift-f: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/F'] }
          Shift-g: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/G'] }
          Shift-h: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/H'] }
          Shift-j: { launch: [fish, -c, 'magazine_append (pick_project_path)'] }
          Shift-k: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/K'] }
          Shift-l: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/L'] }
          Shift-Semicolon: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/colon'] }
          Shift-Apostrophe: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/doublequote'] }
          Shift-z: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/Z'] }
          Shift-x: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/X'] }
          Shift-c: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/C'] }
          Shift-v: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/V'] }
          Shift-b: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/B'] }
          Shift-n: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/N'] }
          Shift-m: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/M'] }
          Shift-Comma: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/leftpointy'] }
          Shift-Dot: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/rightpointy'] }
          Shift-Slash: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/question'] }
          Super_R-f: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/1'] }
          Super_R-d: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/2'] }
          Super_R-s: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/3'] }
          Super_R-r: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/4'] }
          Super_R-e: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/5'] }
          Super_R-w: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/6'] }
          Super_R-v: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/7'] }
          Super_R-c: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/8'] }
          Super_R-x: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/9'] }
          Super_R-a: { launch: [fish, -c, 'magazine_append ~/.local/share/magazine/0'] }
      Shift_L-Alt_L-s:
        exact_match: true
        remap:
          q: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/q'] }
          w: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/w'] }
          e: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/e'] }
          r: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/r'] }
          t: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/t'] }
          y: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/y'] }
          u: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/u'] }
          i: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/i'] }
          o: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/o'] }
          p: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/p'] }
          LeftBrace: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/leftbrace'] }
          RightBrace: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/rightbrace'] }
          a: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/a'] }
          s: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/s'] }
          d: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/d'] }
          f: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/f'] }
          g: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/g'] }
          h: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/h'] }
          j: { launch: [fish, -c, 'magazine_reverse ~/prog/dotfiles/project.txt'] }
          k: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/k'] }
          l: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/l'] }
          Semicolon: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/semicolon'] }
          Apostrophe: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/apostrophe'] }
          z: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/z'] }
          x: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/x'] }
          c: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/c'] }
          v: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/v'] }
          b: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/b'] }
          n: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/n'] }
          m: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/m'] }
          Comma: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/comma'] }
          Dot: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/dot'] }
          Slash: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/slash'] }
          Shift-q: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/Q'] }
          Shift-w: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/W'] }
          Shift-e: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/E'] }
          Shift-r: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/R'] }
          Shift-t: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/T'] }
          Shift-y: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/Y'] }
          Shift-u: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/U'] }
          Shift-i: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/I'] }
          Shift-o: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/O'] }
          Shift-p: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/P'] }
          Shift-LeftBrace: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/leftcurl'] }
          Shift-RightBrace: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/rightcurl'] }
          Shift-a: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/A'] }
          Shift-s: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/S'] }
          Shift-d: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/D'] }
          Shift-f: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/F'] }
          Shift-g: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/G'] }
          Shift-h: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/H'] }
          Shift-j: { launch: [fish, -c, 'magazine_reverse (pick_project_path)'] }
          Shift-k: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/K'] }
          Shift-l: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/L'] }
          Shift-Semicolon: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/colon'] }
          Shift-Apostrophe: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/doublequote'] }
          Shift-z: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/Z'] }
          Shift-x: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/X'] }
          Shift-c: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/C'] }
          Shift-v: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/V'] }
          Shift-b: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/B'] }
          Shift-n: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/N'] }
          Shift-m: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/M'] }
          Shift-Comma: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/leftpointy'] }
          Shift-Dot: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/rightpointy'] }
          Shift-Slash: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/question'] }
          Super_R-f: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/1'] }
          Super_R-d: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/2'] }
          Super_R-s: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/3'] }
          Super_R-r: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/4'] }
          Super_R-e: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/5'] }
          Super_R-w: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/6'] }
          Super_R-v: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/7'] }
          Super_R-c: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/8'] }
          Super_R-x: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/9'] }
          Super_R-a: { launch: [fish, -c, 'magazine_reverse ~/.local/share/magazine/0'] }
      Shift_L-Alt_L-d:
        exact_match: true
        remap:
          q: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/q'] }
          w: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/w'] }
          e: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/e'] }
          r: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/r'] }
          t: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/t'] }
          y: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/y'] }
          u: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/u'] }
          i: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/i'] }
          o: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/o'] }
          p: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/p'] }
          LeftBrace: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/leftbrace'] }
          RightBrace: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/rightbrace'] }
          a: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/a'] }
          s: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/s'] }
          d: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/d'] }
          f: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/f'] }
          g: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/g'] }
          h: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/h'] }
          j: { launch: [fish, -c, 'magazine_randomize ~/prog/dotfiles/project.txt'] }
          k: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/k'] }
          l: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/l'] }
          Semicolon: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/semicolon'] }
          Apostrophe: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/apostrophe'] }
          z: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/z'] }
          x: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/x'] }
          c: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/c'] }
          v: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/v'] }
          b: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/b'] }
          n: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/n'] }
          m: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/m'] }
          Comma: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/comma'] }
          Dot: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/dot'] }
          Slash: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/slash'] }
          Shift-q: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/Q'] }
          Shift-w: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/W'] }
          Shift-e: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/E'] }
          Shift-r: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/R'] }
          Shift-t: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/T'] }
          Shift-y: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/Y'] }
          Shift-u: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/U'] }
          Shift-i: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/I'] }
          Shift-o: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/O'] }
          Shift-p: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/P'] }
          Shift-LeftBrace: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/leftcurl'] }
          Shift-RightBrace: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/rightcurl'] }
          Shift-a: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/A'] }
          Shift-s: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/S'] }
          Shift-d: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/D'] }
          Shift-f: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/F'] }
          Shift-g: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/G'] }
          Shift-h: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/H'] }
          Shift-j: { launch: [fish, -c, 'magazine_randomize (pick_project_path)'] }
          Shift-k: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/K'] }
          Shift-l: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/L'] }
          Shift-Semicolon: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/colon'] }
          Shift-Apostrophe: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/doublequote'] }
          Shift-z: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/Z'] }
          Shift-x: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/X'] }
          Shift-c: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/C'] }
          Shift-v: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/V'] }
          Shift-b: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/B'] }
          Shift-n: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/N'] }
          Shift-m: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/M'] }
          Shift-Comma: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/leftpointy'] }
          Shift-Dot: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/rightpointy'] }
          Shift-Slash: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/question'] }
          Super_R-f: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/1'] }
          Super_R-d: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/2'] }
          Super_R-s: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/3'] }
          Super_R-r: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/4'] }
          Super_R-e: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/5'] }
          Super_R-w: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/6'] }
          Super_R-v: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/7'] }
          Super_R-c: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/8'] }
          Super_R-x: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/9'] }
          Super_R-a: { launch: [fish, -c, 'magazine_randomize ~/.local/share/magazine/0'] }
      Shift_L-v:
        exact_match: true
        remap:
          q: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/q'] }
          w: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/w'] }
          e: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/e'] }
          r: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/r'] }
          t: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/t'] }
          y: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/y'] }
          u: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/u'] }
          i: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/i'] }
          o: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/o'] }
          p: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/p'] }
          LeftBrace: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/leftbrace'] }
          RightBrace: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/rightbrace'] }
          a: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/a'] }
          s: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/s'] }
          d: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/d'] }
          f: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/f'] }
          g: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/g'] }
          h: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/h'] }
          j: { launch: [fish, -c, 'magazine_appclip ~/prog/dotfiles/project.txt'] }
          k: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/k'] }
          l: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/l'] }
          Semicolon: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/semicolon'] }
          Apostrophe: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/apostrophe'] }
          z: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/z'] }
          x: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/x'] }
          c: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/c'] }
          v: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/v'] }
          b: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/b'] }
          n: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/n'] }
          m: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/m'] }
          Comma: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/comma'] }
          Dot: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/dot'] }
          Slash: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/slash'] }
          Shift-q: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/Q'] }
          Shift-w: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/W'] }
          Shift-e: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/E'] }
          Shift-r: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/R'] }
          Shift-t: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/T'] }
          Shift-y: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/Y'] }
          Shift-u: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/U'] }
          Shift-i: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/I'] }
          Shift-o: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/O'] }
          Shift-p: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/P'] }
          Shift-LeftBrace: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/leftcurl'] }
          Shift-RightBrace: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/rightcurl'] }
          Shift-a: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/A'] }
          Shift-s: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/S'] }
          Shift-d: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/D'] }
          Shift-f: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/F'] }
          Shift-g: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/G'] }
          Shift-h: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/H'] }
          Shift-j: { launch: [fish, -c, 'magazine_appclip (pick_project_path)'] }
          Shift-k: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/K'] }
          Shift-l: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/L'] }
          Shift-Semicolon: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/colon'] }
          Shift-Apostrophe: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/doublequote'] }
          Shift-z: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/Z'] }
          Shift-x: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/X'] }
          Shift-c: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/C'] }
          Shift-v: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/V'] }
          Shift-b: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/B'] }
          Shift-n: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/N'] }
          Shift-m: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/M'] }
          Shift-Comma: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/leftpointy'] }
          Shift-Dot: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/rightpointy'] }
          Shift-Slash: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/question'] }
          Super_R-f: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/1'] }
          Super_R-d: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/2'] }
          Super_R-s: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/3'] }
          Super_R-r: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/4'] }
          Super_R-e: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/5'] }
          Super_R-w: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/6'] }
          Super_R-v: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/7'] }
          Super_R-c: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/8'] }
          Super_R-x: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/9'] }
          Super_R-a: { launch: [fish, -c, 'magazine_appclip ~/.local/share/magazine/0'] }
      Shift_L-Alt_L-v:
        exact_match: true
        remap:
          q: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/q'] }
          w: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/w'] }
          e: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/e'] }
          r: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/r'] }
          t: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/t'] }
          y: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/y'] }
          u: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/u'] }
          i: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/i'] }
          o: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/o'] }
          p: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/p'] }
          LeftBrace: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/leftbrace'] }
          RightBrace: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/rightbrace'] }
          a: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/a'] }
          s: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/s'] }
          d: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/d'] }
          f: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/f'] }
          g: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/g'] }
          h: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/h'] }
          j: { launch: [fish, -c, 'magazine_set ~/prog/dotfiles/project.txt'] }
          k: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/k'] }
          l: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/l'] }
          Semicolon: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/semicolon'] }
          Apostrophe: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/apostrophe'] }
          z: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/z'] }
          x: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/x'] }
          c: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/c'] }
          v: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/v'] }
          b: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/b'] }
          n: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/n'] }
          m: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/m'] }
          Comma: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/comma'] }
          Dot: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/dot'] }
          Slash: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/slash'] }
          Shift-q: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/Q'] }
          Shift-w: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/W'] }
          Shift-e: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/E'] }
          Shift-r: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/R'] }
          Shift-t: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/T'] }
          Shift-y: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/Y'] }
          Shift-u: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/U'] }
          Shift-i: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/I'] }
          Shift-o: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/O'] }
          Shift-p: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/P'] }
          Shift-LeftBrace: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/leftcurl'] }
          Shift-RightBrace: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/rightcurl'] }
          Shift-a: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/A'] }
          Shift-s: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/S'] }
          Shift-d: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/D'] }
          Shift-f: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/F'] }
          Shift-g: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/G'] }
          Shift-h: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/H'] }
          Shift-j: { launch: [fish, -c, 'magazine_set (pick_project_path)'] }
          Shift-k: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/K'] }
          Shift-l: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/L'] }
          Shift-Semicolon: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/colon'] }
          Shift-Apostrophe: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/doublequote'] }
          Shift-z: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/Z'] }
          Shift-x: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/X'] }
          Shift-c: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/C'] }
          Shift-v: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/V'] }
          Shift-b: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/B'] }
          Shift-n: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/N'] }
          Shift-m: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/M'] }
          Shift-Comma: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/leftpointy'] }
          Shift-Dot: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/rightpointy'] }
          Shift-Slash: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/question'] }
          Super_R-f: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/1'] }
          Super_R-d: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/2'] }
          Super_R-s: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/3'] }
          Super_R-r: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/4'] }
          Super_R-e: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/5'] }
          Super_R-w: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/6'] }
          Super_R-v: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/7'] }
          Super_R-c: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/8'] }
          Super_R-x: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/9'] }
          Super_R-a: { launch: [fish, -c, 'magazine_set ~/.local/share/magazine/0'] }
      Shift_L-f:
        exact_match: true
        remap:
          q: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/q'] }
          w: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/w'] }
          e: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/e'] }
          r: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/r'] }
          t: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/t'] }
          y: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/y'] }
          u: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/u'] }
          i: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/i'] }
          o: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/o'] }
          p: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/p'] }
          LeftBrace: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/leftbrace'] }
          RightBrace: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/rightbrace'] }
          a: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/a'] }
          s: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/s'] }
          d: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/d'] }
          f: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/f'] }
          g: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/g'] }
          h: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/h'] }
          j: { launch: [fish, -c, 'magazine_filter ~/prog/dotfiles/project.txt'] }
          k: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/k'] }
          l: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/l'] }
          Semicolon: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/semicolon'] }
          Apostrophe: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/apostrophe'] }
          z: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/z'] }
          x: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/x'] }
          c: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/c'] }
          v: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/v'] }
          b: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/b'] }
          n: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/n'] }
          m: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/m'] }
          Comma: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/comma'] }
          Dot: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/dot'] }
          Slash: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/slash'] }
          Shift-q: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/Q'] }
          Shift-w: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/W'] }
          Shift-e: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/E'] }
          Shift-r: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/R'] }
          Shift-t: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/T'] }
          Shift-y: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/Y'] }
          Shift-u: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/U'] }
          Shift-i: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/I'] }
          Shift-o: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/O'] }
          Shift-p: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/P'] }
          Shift-LeftBrace: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/leftcurl'] }
          Shift-RightBrace: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/rightcurl'] }
          Shift-a: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/A'] }
          Shift-s: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/S'] }
          Shift-d: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/D'] }
          Shift-f: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/F'] }
          Shift-g: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/G'] }
          Shift-h: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/H'] }
          Shift-j: { launch: [fish, -c, 'magazine_filter (pick_project_path)'] }
          Shift-k: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/K'] }
          Shift-l: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/L'] }
          Shift-Semicolon: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/colon'] }
          Shift-Apostrophe: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/doublequote'] }
          Shift-z: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/Z'] }
          Shift-x: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/X'] }
          Shift-c: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/C'] }
          Shift-v: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/V'] }
          Shift-b: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/B'] }
          Shift-n: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/N'] }
          Shift-m: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/M'] }
          Shift-Comma: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/leftpointy'] }
          Shift-Dot: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/rightpointy'] }
          Shift-Slash: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/question'] }
          Super_R-f: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/1'] }
          Super_R-d: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/2'] }
          Super_R-s: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/3'] }
          Super_R-r: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/4 ; test -s ~/.local/share/magazine/4 || github-read-notifs'] }
          Super_R-e: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/5'] }
          Super_R-w: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/6'] }
          Super_R-v: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/7'] }
          Super_R-c: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/8'] }
          Super_R-x: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/9'] }
          Super_R-a: { launch: [fish, -c, 'magazine_filter ~/.local/share/magazine/0'] }
      Shift_L-Alt_L-f:
        exact_match: true
        remap:
          q: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/q'] }
          w: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/w'] }
          e: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/e'] }
          r: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/r'] }
          t: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/t'] }
          y: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/y'] }
          u: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/u'] }
          i: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/i'] }
          o: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/o'] }
          p: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/p'] }
          LeftBrace: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/leftbrace'] }
          RightBrace: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/rightbrace'] }
          a: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/a'] }
          s: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/s'] }
          d: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/d'] }
          f: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/f'] }
          g: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/g'] }
          h: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/h'] }
          j: { launch: [fish, -c, 'magazine_copy ~/prog/dotfiles/project.txt'] }
          k: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/k'] }
          l: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/l'] }
          Semicolon: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/semicolon'] }
          Apostrophe: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/apostrophe'] }
          z: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/z'] }
          x: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/x'] }
          c: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/c'] }
          v: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/v'] }
          b: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/b'] }
          n: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/n'] }
          m: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/m'] }
          Comma: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/comma'] }
          Dot: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/dot'] }
          Slash: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/slash'] }
          Shift-q: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/Q'] }
          Shift-w: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/W'] }
          Shift-e: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/E'] }
          Shift-r: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/R'] }
          Shift-t: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/T'] }
          Shift-y: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/Y'] }
          Shift-u: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/U'] }
          Shift-i: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/I'] }
          Shift-o: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/O'] }
          Shift-p: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/P'] }
          Shift-LeftBrace: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/leftcurl'] }
          Shift-RightBrace: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/rightcurl'] }
          Shift-a: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/A'] }
          Shift-s: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/S'] }
          Shift-d: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/D'] }
          Shift-f: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/F'] }
          Shift-g: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/G'] }
          Shift-h: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/H'] }
          Shift-j: { launch: [fish, -c, 'magazine_copy (pick_project_path)'] }
          Shift-k: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/K'] }
          Shift-l: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/L'] }
          Shift-Semicolon: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/colon'] }
          Shift-Apostrophe: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/doublequote'] }
          Shift-z: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/Z'] }
          Shift-x: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/X'] }
          Shift-c: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/C'] }
          Shift-v: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/V'] }
          Shift-b: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/B'] }
          Shift-n: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/N'] }
          Shift-m: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/M'] }
          Shift-Comma: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/leftpointy'] }
          Shift-Dot: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/rightpointy'] }
          Shift-Slash: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/question'] }
          Super_R-f: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/1'] }
          Super_R-d: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/2'] }
          Super_R-s: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/3'] }
          Super_R-r: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/4'] }
          Super_R-e: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/5'] }
          Super_R-w: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/6'] }
          Super_R-v: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/7'] }
          Super_R-c: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/8'] }
          Super_R-x: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/9'] }
          Super_R-a: { launch: [fish, -c, 'magazine_copy ~/.local/share/magazine/0'] }

  - name: Any! numbers & special symbols
    exact_match: true
    remap:
      CapsLock-Super_R-f: { launch: [fish, -c, 'index_clipboard 0'] }
      CapsLock-Super_R-d: { launch: [fish, -c, 'index_clipboard 1'] }
      CapsLock-Super_R-s: { launch: [fish, -c, 'index_clipboard 2'] }
      CapsLock-Super_R-r: { launch: [fish, -c, 'index_clipboard 3'] }
      CapsLock-Super_R-e: { launch: [fish, -c, 'index_clipboard 4'] }
      CapsLock-Super_R-w: { launch: [fish, -c, 'index_clipboard 5'] }
      CapsLock-Super_R-v: { launch: [fish, -c, 'index_clipboard 6'] }
      CapsLock-Super_R-c: { launch: [fish, -c, 'index_clipboard 7'] }
      CapsLock-Super_R-x: { launch: [fish, -c, 'index_clipboard 8'] }
      CapsLock-Super_R-a: { launch: [fish, -c, 'index_clipboard 9'] }

      # [[sort on]]
      CapsLock-Alt_L-Comma: shift_r-grave
      CapsLock-Alt_L-j: shift-7
      CapsLock-Alt_L-k: shift-backslash
      CapsLock-Alt_L-p: shift_r-2
      CapsLock-Comma: shift_r-1
      CapsLock-Dot: shift-minus
      CapsLock-LeftBrace: shift-9
      CapsLock-RightBrace: shift-0
      CapsLock-Slash: backslash
      CapsLock-h: shift-6
      CapsLock-i: shift-8
      CapsLock-j: shift-equal
      CapsLock-k: minus
      CapsLock-l: equal
      CapsLock-m: shift_r-5
      CapsLock-o: shift_r-4
      CapsLock-p: shift_r-3
      CapsLock-u: grave
      # [[sort off]]

      # -- for helix -------------------------------------------------------------------------------------
      # [[sort on]]
      CapsLock-Alt_L-LeftBrace: shift-alt-9
      CapsLock-Alt_L-RightBrace: shift-alt-0
      CapsLock-Alt_L-u: alt-grave
      # [[sort off]]

  - name: Any numbers & special symbols
    remap:
      Super_R-a: '0'
      Super_R-f: '1'
      Super_R-d: '2'
      Super_R-s: '3'
      Super_R-r: '4'
      Super_R-e: '5'
      Super_R-w: '6'
      Super_R-v: '7'
      Super_R-c: '8'
      Super_R-x: '9'

  - name: Any! wm
    exact_match: true
    remap:
      CapsLock-Super-h: { launch: [awesome-client, 'awful.layout.set(awful.layout.suit.tile.left)'] }
      CapsLock-Super-j: { launch: [awesome-client, 'awful.layout.set(awful.layout.suit.tile.bottom)'] }
      CapsLock-Super-k: { launch: [awesome-client, 'awful.layout.set(awful.layout.suit.tile.top)'] }
      CapsLock-Super-l: { launch: [awesome-client, 'awful.layout.set(awful.layout.suit.tile)'] }
      CapsLock-Super-u: { launch: [awesome-client, 'awful.layout.set(awful.layout.suit.fair)'] }
      CapsLock-Super-o: { launch: [awesome-client, 'awful.layout.set(awful.layout.suit.fair.horizontal)'] }
      CapsLock-Super-m: { launch: [awesome-client, 'awful.layout.set(awful.layout.suit.max)'] }

      CapsLock-Super-i: { launch: [awesome-client, awful.client.floating.toggle()] }
      CapsLock-Super-p: { launch: [awesome-client, 'client.focus.ontop = not client.focus.ontop'] }
      CapsLock-Super-Semicolon: { launch: [awesome-client, 'client.focus.maximized = not client.focus.maximized'] }
      CapsLock-Super-y: { launch: [awesome-client, 'client.focus.sticky = not client.focus.sticky'] }
      CapsLock-Super-b: { launch: [awesome-client, 'client.focus.fullscreen = not client.focus.fullscreen'] }

      CapsLock-z: { launch: [awesome-client, 'client.focus.minimized = true'] }
      CapsLock-Alt_L-z: { launch: [awesome-client, Unminimize_all_on_tag()] }
      CapsLock-q: { launch: [wmctrl, -c, ':ACTIVE:'] }
      CapsLock-Alt_L-q: { launch: [xdotool, getwindowfocus, windowkill] }

      CapsLock-Shift-LeftBrace:
        { launch: [sh, -c, 'brillo -S 0 ; xset s off -dpms ; awesome-client "Brightness_wu()"'] }
      CapsLock-Shift-RightBrace:
        { launch: [sh, -c, 'brillo -S 100 ; xset s off -dpms ; awesome-client "Brightness_wu()"'] }
      CapsLock-Ctrl-LeftBrace:
        { launch: [sh, -c, 'brillo -U 5 ; xset s off -dpms ; awesome-client "Brightness_wu()"'] }
      CapsLock-Ctrl-RightBrace:
        { launch: [sh, -c, 'brillo -A 5 ; xset s off -dpms ; awesome-client "Brightness_wu()"'] }
      Ctrl-Esc: { launch: [fish, -c, ignore_urgencies] }
      Ctrl-Alt_L-Esc: { launch: [awesome-client, 'if not naughty.is_suspended() then naughty.destroy_all_notifications() end'] }
      Alt_L-Esc: { launch: [awesome-client, "env.destroy_sided_notification('oldest')"] }
      Shift-Alt_L-Esc: { launch: [awesome-client, "env.destroy_sided_notification('latest')"] }

  - name: Any! media
    exact_match: true
    remap:
      CapsLock-Alt_L-w: { launch: [fish, -c, 'set_volume -5'] }
      CapsLock-Alt_L-e: { launch: [fish, -c, 'set_volume +5'] }
      CapsLock-a: { launch: [fish, -c, 'toggle_mic_mute'] }
      CapsLock-Alt_L-a: { launch: [fish, -c, 'toggle_mute'] }
      CapsLock-Alt_L-Shift-d: { launch: [fish, -c, media_prev] }
      CapsLock-Alt_L-d: { launch: [fish, -c, media_next] }
      CapsLock-t: { launch: [fish, -c, toggle_media] }

  - name: Any!
    exact_match: true
    remap:
      CapsLock-f: [{ set_mode: arrows }, { launch: [awesome-client, Mouse_we(true)] }]
      CapsLock-b: [{ set_mode: mouse }, { launch: [awesome-client, Mouse_we()] }]

      Alt_R-d: { launch: [kitty] }
      Alt_R-f: { launch: [firefox]}
      Alt_R-c: { launch: [fish, -c, 'int calcure']}
      Alt_R-q: { launch: [fish, -c, 'int tiptop']}
      Alt_R-e: { launch: [fish, -c, 'int bluetui']}

      Super_R-q: ctrl-shift-u
      Super_R-z: { launch: [fish, -c, runner_symbol] }

      Super_L-r:
        {
          launch:
            [
              fish,
              -c,
              'truncate -s 0 /tmp/tesseract.txt ; scrot -s - | tesseract - /tmp/tesseract ; test -s /tmp/tesseract.txt && copy /tmp/tesseract.txt && notify-send -t 2000 "ocr"',
            ],
        }
      Super_L-Alt_L-r:
        {
          launch:
            [
              fish,
              -c,
              'truncate -s 0 /tmp/tesseract.txt ; ypoc -t image/png | tesseract - /tmp/tesseract ; test -s /tmp/tesseract.txt && copy /tmp/tesseract.txt && notify-send -t 2000 "ocr"',
            ],
        }
      # Super_L-c: { launch: [fish, -c, 'widget_update anki-update no-increment Anki'] }
      CapsLock-y: [CapsLock, { launch: [fish, -c, 'widget_update update_layout Layout'] }] # toggle capslock toggle
      Super_L-Space: { launch: [fish, -c, toggle_layout] }
      # Btn_Side: { launch: [fish, -c, 'pidof boomer && xdotool key q || boomer'] }
      Super_L-v: { launch: [boomer] }
      Super-Apostrophe: { launch: [rofi-copyq] }
      Super_L-f: { launch: [gromit-mpx, --toggle] }
      Super_L-Alt_L-f: { launch: [gromit-mpx, --clear] }
      Super_L-Shift-f: { launch: [gromit-mpx, --visibility] }
      Super_L-s: { launch: [fish, -c, 'scrot -s - | copy -t image/png'] }
      Super_L-Alt_L-s:
        {
          launch:
            [
              fish,
              -c,
              "scrot -u - | copy -t image/png ; notify-send -t 1000 'took window'",
            ],
        }
      Super_L-Shift-s:
        {
          launch:
            [fish, -c, "scrot - | copy -t image/png ; notify-send -t 1000 'took screen'"],
        }
      Super_L-w: { launch: [fish, -c, 'scrot -s - | display'] }
      Super_L-Alt_L-w: { launch: [fish, -c, 'ypoc -t image/png 2>/dev/null | display'] }
      CapsLock-v: { launch: [fish, -c, 'toggle-screen-record'] }
      CapsLock-Alt_L-v: { launch: [mpv, '--start=0', '/home/axlefublr/z.mp4'] }
      Super-j: { launch: [fish, -c, 'runner show'] }
      Super-Alt_L-b: { launch: [fish, -c, 'scratchpad --wintitle=line --cwd=~'] }
      Super-Alt_L-Semicolon: { launch: [rofi, -show, drun] }
      Super-Alt_L-Apostrophe: { launch: [fish, -c, runner_kill] }
      Super_L-d: { launch: [sh, -c, 'clorange widget increment ; awesome-client "Clorange_wu()"'] }
      Super_L-Alt_L-d: { launch: [sh, -c, 'clorange widget reset ; awesome-client "Clorange_wu()"'] }
      Super_L-Shift-d: { launch: [sh, -c, 'clorange widget decrement ; awesome-client "Clorange_wu()"'] }
      Super-k: { launch: [fish, -c, runner_notification] }
      Super-Semicolon: { launch: [fish, -c, runner_math] }
      CapsLock-Enter: { launch: [fish, -c, 'ypoc >~/bs/clipboard_edit.md ; neomax_hold "~/bs/clipboard_edit.md$(calculate-eof-position ~/bs/clipboard_edit.md)" ; cat ~/bs/clipboard_edit.md | copy'] }
      CapsLock-Alt_L-Enter: { launch: [fish, -c, 'truncate -s 0 ~/bs/clipboard_edit.md ; neomax_hold ~/bs/clipboard_edit.md ; cat ~/bs/clipboard_edit.md | copy'] }
      Super-b: { launch: [fish, -c, 'engined_search'] }
      Super_L-c: { launch: [fish, -c, pick-and-copy-color]}

      Super_R-t: { launch: [fish, -c, 'igrai ~/mus/soundeffects/audio-volume-change.oga'] }

      Super_R-g:
        exact_match: true
        remap:
          q: { launch: [fish, -c, 'clipboard_harp_get q'] }
          w: { launch: [fish, -c, 'clipboard_harp_get w'] }
          e: { launch: [fish, -c, 'clipboard_harp_get e'] }
          r: { launch: [fish, -c, 'clipboard_harp_get r'] }
          t: { launch: [fish, -c, 'clipboard_harp_get t'] }
          y: { launch: [fish, -c, 'clipboard_harp_get y'] }
          u: { launch: [fish, -c, 'clipboard_harp_get u'] }
          i: { launch: [fish, -c, 'clipboard_harp_get i'] }
          o: { launch: [fish, -c, 'clipboard_harp_get o'] }
          p: { launch: [fish, -c, 'clipboard_harp_get p'] }
          LeftBrace: { launch: [fish, -c, 'clipboard_harp_get leftbrace'] }
          RightBrace: { launch: [fish, -c, 'clipboard_harp_get rightbrace'] }
          a: { launch: [fish, -c, 'clipboard_harp_get a'] }
          s: { launch: [fish, -c, 'clipboard_harp_get s'] }
          d: { launch: [fish, -c, 'clipboard_harp_get d'] }
          f: { launch: [fish, -c, 'clipboard_harp_get f'] }
          g: { launch: [fish, -c, 'clipboard_harp_get g'] }
          h: { launch: [fish, -c, 'clipboard_harp_get h'] }
          j: { launch: [fish, -c, 'clipboard_harp_get j'] }
          k: { launch: [fish, -c, 'clipboard_harp_get k'] }
          l: { launch: [fish, -c, 'clipboard_harp_get l'] }
          Semicolon: { launch: [fish, -c, 'clipboard_harp_get semicolon'] }
          Apostrophe: { launch: [fish, -c, 'clipboard_harp_get apostrophe'] }
          z: { launch: [fish, -c, 'clipboard_harp_get z'] }
          x: { launch: [fish, -c, 'clipboard_harp_get x'] }
          c: { launch: [fish, -c, 'clipboard_harp_get c'] }
          v: { launch: [fish, -c, 'clipboard_harp_get v'] }
          b: { launch: [fish, -c, 'clipboard_harp_get b'] }
          n: { launch: [fish, -c, 'clipboard_harp_get n'] }
          m: { launch: [fish, -c, 'clipboard_harp_get m'] }
          Comma: { launch: [fish, -c, 'clipboard_harp_get comma'] }
          Dot: { launch: [fish, -c, 'clipboard_harp_get dot'] }
          Slash: { launch: [fish, -c, 'clipboard_harp_get slash'] }
      CapsLock-Super_R-g:
        exact_match: true
        remap:
          q: { launch: [fish, -c, 'clipboard_harp_set q'] }
          w: { launch: [fish, -c, 'clipboard_harp_set w'] }
          e: { launch: [fish, -c, 'clipboard_harp_set e'] }
          r: { launch: [fish, -c, 'clipboard_harp_set r'] }
          t: { launch: [fish, -c, 'clipboard_harp_set t'] }
          y: { launch: [fish, -c, 'clipboard_harp_set y'] }
          u: { launch: [fish, -c, 'clipboard_harp_set u'] }
          i: { launch: [fish, -c, 'clipboard_harp_set i'] }
          o: { launch: [fish, -c, 'clipboard_harp_set o'] }
          p: { launch: [fish, -c, 'clipboard_harp_set p'] }
          LeftBrace: { launch: [fish, -c, 'clipboard_harp_set leftbrace'] }
          RightBrace: { launch: [fish, -c, 'clipboard_harp_set rightbrace'] }
          a: { launch: [fish, -c, 'clipboard_harp_set a'] }
          s: { launch: [fish, -c, 'clipboard_harp_set s'] }
          d: { launch: [fish, -c, 'clipboard_harp_set d'] }
          f: { launch: [fish, -c, 'clipboard_harp_set f'] }
          g: { launch: [fish, -c, 'clipboard_harp_set g'] }
          h: { launch: [fish, -c, 'clipboard_harp_set h'] }
          j: { launch: [fish, -c, 'clipboard_harp_set j'] }
          k: { launch: [fish, -c, 'clipboard_harp_set k'] }
          l: { launch: [fish, -c, 'clipboard_harp_set l'] }
          Semicolon: { launch: [fish, -c, 'clipboard_harp_set semicolon'] }
          Apostrophe: { launch: [fish, -c, 'clipboard_harp_set apostrophe'] }
          z: { launch: [fish, -c, 'clipboard_harp_set z'] }
          x: { launch: [fish, -c, 'clipboard_harp_set x'] }
          c: { launch: [fish, -c, 'clipboard_harp_set c'] }
          v: { launch: [fish, -c, 'clipboard_harp_set v'] }
          b: { launch: [fish, -c, 'clipboard_harp_set b'] }
          n: { launch: [fish, -c, 'clipboard_harp_set n'] }
          m: { launch: [fish, -c, 'clipboard_harp_set m'] }
          Comma: { launch: [fish, -c, 'clipboard_harp_set comma'] }
          Dot: { launch: [fish, -c, 'clipboard_harp_set dot'] }
          Slash: { launch: [fish, -c, 'clipboard_harp_set slash'] }

  - name: Any functionality
    remap:
      Pause: { launch: [fish, -c, suspend] }
      KPDot: { launch: [fish, -c, suspend] }

  - name: Any
    remap:
      # [[sort on]]
      CapsLock-Alt_L-Semicolon: ctrl-backspace
      CapsLock-Alt_L-n: shift-tab
      CapsLock-Ctrl-d: ctrl-shift-v
      CapsLock-Semicolon: backspace
      CapsLock-Shift-d: ctrl-shift-v
      CapsLock-d: ctrl-v
      CapsLock-e: ctrl-y
      CapsLock-g: ctrl-a
      CapsLock-n: tab
      CapsLock-r: delete
      CapsLock-s: ctrl-c
      CapsLock-w: ctrl-z
