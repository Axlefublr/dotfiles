[manager]

keymap = [
  # [[sort on]]
  # { on = ':', run = 'shell --block --interactive', desc = 'Run a blocking shell command' },
  { on = '%', run = 'toggle_all --state=true', desc = 'Select all' },
  { on = '+', run = 'hardlink --force --follow', desc = 'Hardlink' },
  { on = '-', run = 'link --force', desc = 'Symlink' },
  { on = '.', run = 'hidden toggle', desc = 'Toggle the visibility of hidden files' },
  { on = '/', run = 'find --smart', desc = 'Find next file' },
  { on = '1', run = 'tab_switch 0', desc = 'Switch to the first tab' },
  { on = '2', run = 'tab_switch 1', desc = 'Switch to the second tab' },
  { on = '3', run = 'tab_switch 2', desc = 'Switch to the third tab' },
  { on = '4', run = 'tab_switch 3', desc = 'Switch to the fourth tab' },
  { on = '5', run = 'tab_switch 4', desc = 'Switch to the fifth tab' },
  { on = '6', run = 'tab_switch 5', desc = 'Switch to the sixth tab' },
  { on = '7', run = 'tab_switch 6', desc = 'Switch to the seventh tab' },
  { on = '8', run = 'tab_switch 7', desc = 'Switch to the eighth tab' },
  { on = '9', run = 'tab_switch 8', desc = 'Switch to the ninth tab' },
  { on = ':', run = 'quit', desc = 'Exit the process' },
  { on = ';', run = 'shell --interactive', desc = 'Run a shell command' },
  { on = '<C-c>', run = 'escape --search', desc = 'Cancel the ongoing search' },
  { on = '<C-f>', run = 'plugin zoxide', desc = 'Jump to a directory using zoxide' },
  { on = '<C-r>', run = 'select_all', desc = 'Inverse selection of all files' },
  { on = '<C-z>', run = 'plugin storecwd', desc = 'Suspend the process' },
  { on = '<Enter>', run = 'open', desc = 'Open selected files' },
  { on = '<Esc>', run = 'escape', desc = 'Exit visual mode, clear selected, or cancel search' },
  { on = '<Space>', run = 'select_all --state=false', desc = 'Deselect all' },
  { on = '?', run = 'find --previous --smart', desc = 'Find previous file' },
  { on = 'D', run = 'remove --permanently --force', desc = 'Delete selected' },
  { on = 'H', run = 'back', desc = 'Go back to the previous directory' },
  { on = 'I', run = 'plugin toggle-pane min-preview', desc = 'Toggle preview' },
  { on = 'J', run = 'arrow 50%', desc = 'Scroll down by half a page' },
  { on = 'K', run = 'arrow -50%', desc = 'Scroll up by half a page' },
  { on = 'L', run = 'forward', desc = 'Go forward to the next directory' },
  { on = 'M', run = 'plugin harp -- set', desc = 'Set a cwd harp' },
  { on = 'N', run = 'find_arrow --previous', desc = 'Go to the previous found' },
  { on = 'O', run = 'paste --force', desc = 'Paste yanked files (overwrite if the destination exists)' },
  { on = 'P', run = 'plugin open-with-cmd --args=block', desc = 'Open selected with command in the terminal' },
  { on = 'Q', run = 'quit --no-cwd-file', desc = 'Exit the process without writing cwd-file' },
  { on = 'S', run = 'yank --cut', desc = 'Yank selected files (cut)' },
  { on = 'T', run = 'close', desc = 'Close the current tab, or quit if it is last tab' },
  { on = 'X', run = 'unyank', desc = 'Cancel the yank status' },
  { on = 'Y', run = 'search rg', desc = 'Search files by content using ripgrep' },
  { on = '[', run = 'tab_switch -1 --relative', desc = 'Switch to the previous tab' },
  { on = ']', run = 'tab_switch 1 --relative', desc = 'Switch to the next tab' },
  { on = '_', run = 'link --force --relative', desc = 'Symlink relatively' },
  { on = 'a', run = 'create --force', desc = 'Create a blob' },
  { on = 'd', run = 'remove --force', desc = 'Trash selected' },
  { on = 'f', run = 'plugin jump-to-char', desc = 'Jump to char' },
  { on = 'i', run = 'plugin fzf', desc = 'Jump to a directory or reveal a file using fzf' },
  { on = 'j', run = 'arrow 1', desc = 'Move cursor down' },
  { on = 'k', run = 'arrow -1', desc = 'Move cursor up' },
  { on = 'm', run = 'plugin harp -- get', desc = 'Travel to a cwd harp' },
  { on = 'n', run = 'find_arrow', desc = 'Go to the next found' },
  { on = 'o', run = 'paste', desc = 'Paste yanked files' },
  { on = 'p', run = 'plugin open-with-cmd', desc = 'Open selected with command' },
  { on = 'q', run = 'quit', desc = 'Exit the process' },
  { on = 'r', run = 'rename --cursor=before_ext', desc = 'Rename selected file(s)' },
  { on = 's', run = 'yank', desc = 'Yank selected files (copy)' },
  { on = 't', run = 'tab_create --current', desc = 'Create a new tab with CWD' },
  { on = 'w', run = 'tasks_show', desc = 'Show task manager' },
  { on = 'x', run = 'visual_mode', desc = 'Enter visual mode' },
  { on = 'y', run = 'search fd', desc = 'Search files by name using fd' },
  { on = '{', run = 'tab_swap -1', desc = 'Swap current tab with previous tab' },
  { on = '}', run = 'tab_swap 1', desc = 'Swap current tab with next tab' },
  # [[sort off]]

  { on = 'e', run = '''
    shell --block --confirm 'helix "$@"'
    ''', desc = 'Open in helix' },

  { on = 'V', run = [
    'toggle --state=none',
    'arrow -1',
  ], desc = 'Toggle the current selection state' },
  { on = 'v', run = [
    'toggle --state=none',
    'arrow 1',
  ], desc = 'Toggle the current selection state' },

  { on = 'h', run = [
    'leave',
    'shell --confirm "zoxide add ."',
  ], desc = 'Go back to the parent directory' },
  { on = 'l', run = [
    'enter',
    'shell --confirm "zoxide add ."',
  ], desc = 'Enter the child directory' },

  { on = [
    'g',
    'i',
  ], run = 'arrow top', desc = 'Go to top' },
  { on = [
    'g',
    'h',
  ], run = 'cd ~', desc = 'Go home' },
  { on = [
    'g',
    'o',
  ], run = 'arrow bot', desc = 'Go to bottom' },
  { on = [
    'g',
    'd',
  ], run = '''
    shell --confirm 'yazi-convert-to-link.fish "$0"'
  ''', desc = 'Copy link to this video' },
  { on = [
    'g',
    'q',
  ], run = '''
  	shell 'ya pub dds-cd --str "$(git rev-parse --show-toplevel)"' --confirm
  ''', desc = 'Go to repo root' },
  { on = 'R', run = '''
    shell --block --confirm 'randomize-file-names.fish "$@"'
  ''', desc = 'Randomize names of selected file(s)' },

  { on = [
    'z',
    's',
  ], run = 'linemode size', desc = 'Set linemode to size' },
  { on = [
    'z',
    'c',
  ], run = 'linemode ctime', desc = 'Set linemode to ctime' },
  { on = [
    'z',
    'o',
  ], run = 'linemode mtime', desc = 'Set linemode to mtime' },
  { on = [
    'z',
    'm',
  ], run = 'linemode none', desc = 'Set linemode to none' },

  { on = [
    'c',
    'c',
  ], run = 'copy path', desc = 'Copy the file path' },
  { on = [
    'c',
    'd',
  ], run = 'copy dirname', desc = 'Copy the directory path' },
  { on = [
    'c',
    'f',
  ], run = 'copy filename', desc = 'Copy the filename' },
  { on = [
    'c',
    'n',
  ], run = 'copy name_without_ext', desc = 'Copy the filename without extension' },
  { on = [
    'c',
    'a',
  ], run = 'plugin compress', desc = 'Archive selected files' },
  { on = [
    'c',
    'i',
  ], run = '''
    shell --confirm 'copyl.fish "$@"'
  ''', desc = 'Copy uri list to clipboard' },
  { on = [
    'c',
    'm',
  ], run = '''
    shell --block --confirm 'ffmpeg-convert-to-mp3.fish "$@"'
  ''', desc = 'Convert to mp3' },
  { on = [
    'c',
    'v',
  ], run = '''
    shell --block --confirm 'ffmpeg-convert-video.fish "$@"'
  ''', desc = 'Convert video' },
  { on = [
    'c',
    'w',
  ], run = '''
    shell --confirm 'webify.fish "$@"'
    ''', desc = 'Convert to webp, if that ends up smaller' },

  { on = [
    ',',
    'm',
  ], run = [
    'sort mtime --reverse=no',
    # 'linemode mtime',
  ], desc = 'Sort by modified time' },
  { on = [
    ',',
    'M',
  ], run = [
    'sort mtime --reverse',
    # 'linemode mtime',
  ], desc = 'Sort by modified time (reverse)' },
  { on = [
    ',',
    'c',
  ], run = [
    'sort btime --reverse=no',
    # 'linemode btime',
  ], desc = 'Sort by created time' },
  { on = [
    ',',
    'C',
  ], run = [
    'sort btime --reverse',
    # 'linemode btime',
  ], desc = 'Sort by created time (reverse)' },
  { on = [
    ',',
    'e',
  ], run = 'sort extension --reverse=no', desc = 'Sort by extension' },
  { on = [
    ',',
    'E',
  ], run = 'sort extension --reverse', desc = 'Sort by extension (reverse)' },
  { on = [
    ',',
    'a',
  ], run = 'sort alphabetical --reverse=no', desc = 'Sort alphabetically' },
  { on = [
    ',',
    'A',
  ], run = 'sort alphabetical --reverse', desc = 'Sort alphabetically (reverse)' },
  { on = [
    ',',
    'n',
  ], run = 'sort natural --reverse=no', desc = 'Sort naturally' },
  { on = [
    ',',
    'N',
  ], run = 'sort natural --reverse', desc = 'Sort naturally (reverse)' },
  { on = [
    ',',
    's',
  ], run = [
    'sort size --reverse=no',
    'linemode size',
  ], desc = 'Sort by size' },
  { on = [
    ',',
    'S',
  ], run = [
    'sort size --reverse',
    'linemode size',
  ], desc = 'Sort by size (reverse)' },
  { on = [
    ',',
    'r',
  ], run = 'sort random --reverse=no', desc = 'Sort randomly' },

]

[input]
append_keymap = [
  { on = '%', run = [
    'move -999',
    'visual',
    'move 999',
  ], desc = 'Enter visual mode and select all' },
  { on = [
    'g',
    'h',
  ], run = 'move -999', desc = 'Move to the BOL' },
  { on = [
    'g',
    'l',
  ], run = 'move 999', desc = 'Move to the EOL' },
  { on = 'U', run = 'redo', desc = 'Redo the last operation' },
]

[help]
append_keymap = [{ on = 'K', run = 'close', desc = 'Hide the help' }]
